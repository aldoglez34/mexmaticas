{"version":3,"sources":["pages/landingpage/facilitiesjumbotron/images/salaespera.png","pages/landingpage/facilitiesjumbotron/images/salonesamplios.png","pages/landingpage/facilitiesjumbotron/images/audiovisual.png","pages/landingpage/facilitiesjumbotron/images/dosplantas.png","utils/API.js","components/navbar/components/CoursesDropdown.js","redux/actions/student.js","firebase/firebase.js","components/navbar/components/StudentDropdown.js","components/navbar/MyNavbar.js","components/footer/index.js","components/breadcrumb/MyBreadcrumb.js","components/studentnav/StudentNav.js","components/scrollbutton/index.js","components/Layout.js","pages/landingpage/welcomejumbotron/index.js","pages/landingpage/SectionTitle.js","pages/landingpage/threecolumns/components/OfferCard.js","pages/landingpage/threecolumns/index.js","pages/landingpage/ourcourses/components/HomeCard.js","pages/landingpage/ourcourses/index.js","pages/landingpage/teacherjumbotron/index.js","pages/landingpage/facilitiesjumbotron/index.js","pages/landingpage/faqjumbotron/components/ContactForm.js","pages/landingpage/faqjumbotron/FAQJumbotron.js","pages/landingpage/index.js","pages/nomatch/NoMatch.js","pages/signup/components/SignUpForm.js","pages/signup/SignUp.js","pages/login/components/LoginForm.js","pages/login/Login.js","pages/courseinfo/components/CourseInfoCard.js","pages/courseinfo/CourseInfo.js","admin/login/AdminLogin.js","navigation/GuestNavigation.js","pages/dashboard/NoCourses.js","pages/dashboard/components/DashboardCourseCard.js","redux/actions/course.js","pages/dashboard/MyCourses.js","redux/actions/exam.js","pages/dashboard/index.js","redux/actions/breadcrumb.js","redux/actions/zenMode.js","course/components/badge/MyTopic.js","course/components/medaltable/MedalTable.js","course/components/CourseIntro.js","course/components/DifficultyStars.js","course/components/LastVisited.js","course/components/buttons/NotAvailableBttn.js","course/components/modal/Leaderboards.js","course/components/FreestyleCard.js","course/components/ExamsAccordion.js","course/components/help/HelpModal.js","course/components/Topic.js","redux/actions/unlocked.js","course/components/modal/ExamUnlocked.js","course/index.js","exam/questionscontainer/components/Timer.js","exam/questionscontainer/components/QInstruction.js","exam/questionscontainer/components/QTechnicalInstruction.js","exam/questionscontainer/components/QMultipleChoice.js","exam/questionscontainer/components/Progress.js","components/exitbutton/ExitButton.js","exam/questionscontainer/components/HelpModalSM.js","exam/questionscontainer/QuestionsContainer.js","exam/index.js","results/components/ResultMsg.js","results/components/Grade.js","results/components/WrongAnswer.js","results/components/MyResults.js","results/index.js","freestyle/freestylequestions/components/FreestyleTimer.js","freestyle/freestylequestions/components/FreestyleQPoints.js","freestyle/freestylequestions/components/modals/CorrectModal.js","freestyle/freestylequestions/components/modals/IncorrectModal.js","freestyle/freestylequestions/FreestyleQuestions.js","freestyle/index.js","pages/messages/components/MyMessages.js","pages/messages/index.js","navigation/StudentNavigation.js","session/context.js","admin/components/AdminSpinner.js","session/withNavigation.js","admin/layout/components/LeftNav.js","admin/layout/components/TopNav.js","admin/layout/AdminLayout.js","utils/TeacherAPI.js","admin/courses/courses/components/CourseItem.js","admin/courses/courses/AdminCourses.js","admin/components/AdminModal.js","admin/courses/coursedetail/forms/CourseNameForm.js","admin/courses/coursedetail/forms/CourseSchoolForm.js","admin/courses/coursedetail/forms/CoursePriceForm.js","admin/courses/coursedetail/forms/CourseDescriptionForm.js","admin/courses/coursedetail/forms/CourseSummaryForm.js","admin/components/EditTopicsBttn.js","admin/components/AdminButton.js","admin/courses/coursedetail/forms/CourseActiveForm.js","admin/courses/coursedetail/AdminCourseDetail.js","admin/courses/newcourse/AdminNewCourse.js","admin/courses/topics/components/AdminTopicModal.js","admin/courses/topics/components/AddVideo.js","admin/courses/topics/components/UploadReward.js","admin/courses/topics/components/AddReward.js","admin/courses/topics/components/UploadPDF.js","admin/courses/topics/components/AddPDF.js","admin/components/EditExamBttn.js","admin/courses/topics/forms/TopicNameForm.js","admin/courses/topics/forms/TopicSubjectForm.js","admin/courses/topics/forms/TopicDescriptionForm.js","admin/courses/topics/forms/TopicFreestyleTimerForm.js","admin/courses/topics/components/NewExamBttn.js","admin/courses/topics/components/DeleteMaterialBttn.js","admin/courses/topics/components/DeleteRewardBttn.js","admin/courses/topics/AdminTopicDetail.js","admin/courses/newtopic/components/UploadImage.js","admin/courses/newtopic/AdminNewTopic.js","admin/courses/newexam/AdminNewExam.js","admin/students/students/components/StudentItem.js","admin/students/students/AdminStudents.js","admin/students/studentdetail/AdminStudentDetails.js","admin/students/assign/AdminAssignCourse.js","admin/students/history/AdminStudentHistory.js","admin/messages/components/ResponseForm.js","admin/messages/components/ItemModal.js","admin/messages/AdminMessages.js","admin/exams/components/AdminExamModal.js","admin/exams/components/NewQuestionBttn.js","admin/exams/forms/ExamNameForm.js","admin/exams/forms/ExamDurationForm.js","admin/exams/forms/ExamQCounterForm.js","admin/exams/forms/ExamDescriptionForm.js","admin/exams/questionsForms/MultipleOptionForm.jsx","admin/exams/questionsForms/SimpleQuestionForm.jsx","admin/exams/questionsForms/SimpleWithImageForm.jsx","admin/exams/questionsForms/SimpleWithTwoAnswersForm.jsx","admin/exams/questionsForms/MultipleOptionWithImage.jsx","admin/exams/components/AdminDeleteExamBttn.js","admin/exams/questionsTables/SimpleQuestionTable.jsx","admin/exams/questionsTables/SimpleWithImageQuestionsTable.jsx","admin/exams/questionsTables/MultipleOptionQuestionsTable.jsx","admin/exams/questionsTables/SimpleWithTwoAnswersTable.jsx","admin/exams/questionsTables/MultipleOptionWithImageTable.jsx","admin/exams/AdminExamDetail.js","navigation/TeacherNavigation.js","navigation/index.js","App.js","serviceWorker.js","redux/reducers/studentReducers.js","redux/reducers/breadcrumbReducers.js","redux/reducers/courseReducers.js","redux/reducers/examReducers.js","redux/reducers/unlockedReducers.js","redux/reducers/zenModeReducers.js","redux/reducers/index.js","index.js"],"names":["module","exports","axios","get","data","post","school","put","uid","username","studentId","courseId","examId","topicName","CoursesDropdown","React","memo","zenMode","useSelector","state","useState","courses","setCourses","useEffect","API","then","res","catch","err","console","log","alert","NavDropdown","id","title","className","style","fontSize","disabled","length","map","c","Item","key","href","Spinner","animation","role","loginStudent","type","logoutStudent","fbApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StudentDropdown","dispatch","useDispatch","student","unseen","setUnseen","_id","alignRight","Badge","variant","email","Divider","onClick","firebase","auth","signOut","error","MyNavbar","Navbar","fixed","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Container","Nav","as","Col","color","unseenMessages","Link","MyFooter","Row","md","target","rel","Image","src","MyBreadcrumb","breadcrumb","b","link","text","StudentNav","split","name","firstSurname","ScrollButton","intervalId","is_visible","window","pageYOffset","clearInterval","this","scroll","props","scrollStepInPx","setInterval","scrollStep","bind","delayInMs","setState","scrollComponent","document","addEventListener","e","toggleVisibility","right","scrollToTop","PureComponent","Layout","children","backgroundColor","StudentLayout","MyJumbotron","Jumbotron","fluid","offset","span","bottom","cascade","Button","size","SectionTitle","OfferCard","img","Card","Img","alt","Body","Title","Text","ThreeColumns","CardDeck","HomeCard","l","fontWeight","list","ll","OurCourses","Tab","defaultActiveKey","ListGroup","action","Content","Pane","eventKey","cc","topicsSummary","margin","TeacherJumbotron","YouTubePlayer","videoId","width","height","stopVideo","lg","FacilitiesJumbotron","Carousel","salaespera","Caption","salonesamplios","audiovisual","dosplantas","ContactForm","yupschema","yup","required","subject","body","initialValues","validationSchema","onSubmit","values","setSubmitting","source","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noValidate","Group","Label","Control","maxLength","value","onChange","onBlur","isValid","isInvalid","component","defaultValue","rows","FAQJumbotron","question","answer","Accordion","Header","Home","NoMatch","SignUpForm","yupSchema","min","matches","secondSurname","password","createUserWithEmailAndPassword","fbRes","user","updateProfile","displayName","firebaseUID","studentActions","location","code","message","placeholder","SignUp","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","Login","LoginForm","CourseInfoCard","price","topics","lessonCounter","marginTop","block","CourseInfo","routeProps","match","params","course","paddingTop","marginBottom","setDescription","reduce","acc","cv","push","loginSchema","SESSION","exact","path","LandingPage","render","from","to","AdminLogin","NoCourses","DashboardCourseCard","buttonClicked","courseName","a","description","ct","ListGroupItem","hasReward","MyCourses","CardColumns","setExam","Dashboard","exam","myCourses","setMyCourses","MyTopic","smooth","MedalTable","rewards","r","OverlayTrigger","medalName","placement","overlay","Tooltip","CourseIntro","t","DifficultyStars","difficulty","calculateDifficulty","LastVisited","date","formattedDate","moment","format","charAt","toUpperCase","slice","NotAvailableeBttn","pointerEvents","Leaderboards","top10","show","setShow","handleClose","Modal","onHide","lenght","Table","idx","score","FreestyleCard","topicId","freestyle","setExamInRedux","obj","examActions","lastVisit","timer","myHighestScore","myTryouts","duration","ExamsAccordion","exams","reward","sort","examOrderNumber","ex","Fragment","highestGrade","hasPerfectGrade","isAvailable","latestAttempt","qCounter","attemptsCounter","NotAvailableBttn","HelpModal","topic","backdrop","keyboard","Topic","material","mat","unlockExam","ExamUnlocked","showUnlocked","setShowExamUnlocked_","unlocked","rewardLink","rewardName","setCourse","reduxCourse","reduxStudent","reduxExam","setShowExamUnlocked","setCourseAsync","_hash","hash","decodeURI","replace","getElementById","scrollIntoView","paddingBottom","Timer","secondsLeft","setSecondsLeft","minutesLeft","setMinutesLeft","setTimeout","QInstruction","qInstruction","QTechnicalInstruction","imageLink","rounded","MultipleChoice","textChoices","imageChoices","getValueFromMultipleChoice","choiceSelected","active","Progress","current","total","ProgressBar","animated","max","now","ExitButton","url","centered","closeButton","HelpModalSM","qTechnicalInstruction","trim","QuestionsContainer","questions","number","setNumber","setQuestion","answers","setAnswers","choice","setChoice","filter","q","qNumber","pushQuestion","correctAnswers","qCorrectAnswers","qMultipleChoice","userAnswers","toString","numberOfAnswers","i","handleKeyDown","QMultipleChoice","ca","complementLeft","onKeyDown","complementRight","qComment","Exam","ResultMsg","calif","Grade","grade","aciertos","errores","WrongAnswer","popover","Popover","trigger","Alert","cursor","MyResults","results","Results","Math","round","FreestyleTimer","FreestyleQPoints","CorrectModal","showCorrect","setShowCorrect","qValue","IncorrectModal","showIncorrect","setShowIncorrect","FreestyleQuestions","setScore","complement","Freestyle","setFreestyle","MyMessages","messages","m","answered","sentAt","response","respondedAt","setMessages","Messages","AuthUserContext","createContext","AdminSpinner","withNavigation","Component","WithNavigation","navigation","onAuthStateChanged","fbUser","Provider","mapDispatchToProps","connect","LeftNav","leftBarActive","textAlign","TopHelperNav","buttons","backBttn","padding","TeacherLayout","marginLeft","TopNav","topicData","msgId","CourseItem","isActive","TeacherCoursesMain","TeacherAPI","sortedCourses","orderNumber","AdminLayout","AdminModal","Form","formLabel","formInitialText","CourseNameForm","newName","reload","CourseSchoolForm","newSchool","CoursePriceForm","newPrice","positive","InputGroup","Prepend","CourseDescriptionForm","newDescription","CourseSummaryForm","newSummary","EditTopicsBttn","AdminButton","content","CourseActiveForm","newStatus","AdminCourseDetail","createdAt","AdminNewCrouse","notOneOf","summary","AdminTopicModal","modalTitle","AddVideo","UploadReward","setFieldValue","image","File","encType","accept","label","data-browse","event","currentTarget","files","custom","AddReward","file","test","IMAGE_SIZE","SUPPORTED_FORMATS","includes","undefined","rewardImage","FormData","append","UploadPDF","pdf","AddPDF","PDF_SIZE","materialPDF","EditExamBttn","TopicNameForm","TopicSubjectForm","newSubject","TopicDescriptionForm","TopicFreestyleTimerForm","newTimer","Append","NewExamBttn","difficulties","setDifficulties","d","DeleteMaterial","isPDF","materialId","DeleteRewardBttn","filePath","AdminTopicDetail","setTopic","DeleteMaterialBttn","UploadImage","photo","freestyleTimer","AdminNewExam","AdminStudents","students","setStudents","s","StudentItem","AdminStudentDetails","setStudent","registeredAt","attempts","AdminAssignCourse","unpurchased","setUnpurchased","u","AdminStudentHistory","history","setHistory","bordered","h","ResponseForm","TeachAPI","ItemModal","msg","indexOf","substr","seen","AdminMessages","filtered","setFiltered","setFilter","filterProducts","criteria","filters","AdminExamModal","NewQuestionBttn","ExamNameForm","ExamDurationForm","newDuration","ExamQCounterForm","newQCounter","ExamDescriptionForm","MultipleOptionForm","qOption1","qOption2","qOption3","qOption4","qCorrectAnswer","qInstructiqCommenton","SimpleQuestionForm","qCALeft","qCARight","SimpleWithImageForm","questionData","SimpleWithTwoAnswersForm","qCorrectAnswer1","qCorrectAnswer2","qCALeft1","qCALeft2","qCARight1","qCARight2","MultipleOptionWithImage","AdminDeleteExamBttn","questionId","SimpleQuestionTable","striped","String","SimpleWithImageQuestionsTable","MultipleOptionQuestionsTable","SimpleWithTwoAnswersTable","qa","MultipleOptionWithImageTable","AdminExamDetail","simpleQuestions","setSimpleQuestions","simpleWithImageQuestions","setSimpleWithImageQuestions","multipleOptionQuestions","setMultipleOptionQuestions","simpleWithTwoAnswersQuestions","setSimpleWithTwoAnswersQuestions","multipleOptionWithImageQuestions","setMultipleOptionWithImageQuestions","qType","AdminCourses","AdminNewCourse","AdminNewTopic","Navigation","Consumer","StudentNavigation","TeacherNavigation","GuestNavigation","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","studentReducers","breadcrumbReducers","courseReducers","examReducers","unlockedReducers","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","loading","URL","origin","fetch","headers","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,kiCCE5B,EAKa,kBACxBC,IAAMC,IAAI,wCANC,EAQY,kBAAMD,IAAMC,IAAI,4BAR5B,EAUA,SAACC,GAAD,OAAUF,IAAMG,KAAK,yBAA0BD,IAV/C,EAYS,SAACE,GAAD,OACpBJ,IAAMC,IAAI,mCAAqCG,IAbpC,EAmBF,SAACF,GAAD,OAAUF,IAAMK,IAAI,yBAA0BH,IAnB5C,EAqBM,SAACI,GAAD,OAASN,IAAMC,IAAI,2BAA6BK,IArBtD,EAuBO,SAACJ,GAAD,OAAUF,IAAMG,KAAK,mBAAoBD,IAvBhD,EAyBE,SAACK,GAAD,OAAcP,IAAMC,IAAI,yBAA2BM,IAzBrD,EA2BS,SAACC,GAAD,OACpBR,IAAMC,IAAI,gCAAkCO,IA5BjC,EA8BQ,SAACA,GAAD,OACnBR,IAAMK,IAAI,qCAAuCG,IA/BtC,EAmCG,SAACA,GAAD,OACdR,IAAMC,IAAI,+BAAiCO,IApChC,EA0CI,SAACC,EAAUD,GAAX,OACfR,IAAMC,IAAI,oBAAsBQ,EAAW,IAAMD,IA3CtC,EAiDE,SAACE,GAAD,OAAYV,IAAMC,IAAI,kBAAoBS,IAjD5C,EAmDI,SAACR,GAAD,OAAUF,IAAMK,IAAI,4BAA6BH,IAnDrD,EAoDS,SAACA,GAAD,OACpBF,IAAMK,IAAI,iCAAkCH,IArDjC,EAsDG,SAACA,GAAD,OAAUF,IAAMK,IAAI,2BAA4BH,IAtDnD,EAwDD,SAACA,GAAD,OAAUF,IAAMK,IAAI,uBAAwBH,IAxD3C,EA8DG,SAACS,GAAD,OAAeX,IAAMC,IAAI,kBAAoBU,IA9DhD,EAgEa,SAACT,GAAD,OACxBF,IAAMK,IAAI,iCAAkCH,IC7D1CU,EAAkBC,IAAMC,MAAK,WACjC,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WADN,EAGTG,qBAHS,mBAGhCC,EAHgC,KAGvBC,EAHuB,KAcvC,OATAC,qBAAU,WACRC,IACGC,MAAK,SAACC,GAAD,OAASJ,EAAWI,EAAItB,SAC7BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,oDAET,IAGD,kBAACC,EAAA,EAAD,CACEC,GAAG,4BACHC,MACE,0BAAMD,GAAG,sBAAsBE,UAAU,QACtClB,EAAU,qCAAgB,wCAC3B,uBACEkB,UAAU,2BACVC,MAAO,CAAEC,SAAU,WAIzBC,WAAUrB,GAETI,EACCA,EAAQkB,OACNlB,EAAQmB,KAAI,SAACC,GAAD,OACV,kBAACT,EAAA,EAAYU,KAAb,CACEC,IAAKF,EACLG,KAAM,YAAcH,EACpBN,UAAU,iBAETM,MAGH,KAEJ,yBAAKN,UAAU,oBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,gBAO5BjC,I,SCvDFkC,G,OAAe,SAAC5C,GAC3B,MAAO,CACL6C,KAAM,gBACN7C,UAIS8C,EAAgB,WAC3B,MAAO,CACLD,KAAM,mB,iBCIKE,G,OAAAA,IAAMC,cAVN,CACbC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,+CCFHO,EAAkB9C,IAAMC,MAAK,WACjC,IAAM8C,EAAWC,cAEXC,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAEvC/C,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WALN,EAkBXG,qBAlBW,mBAkBhC6C,EAlBgC,KAkBxBC,EAlBwB,KAkCvC,OAdA3C,qBAAU,WACRC,EAAyBwC,EAAQG,KAC9B1C,MAAK,SAACC,GAELwC,EAAUxC,EAAItB,SAEfuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,2EAIT,IAGD,kBAACC,EAAA,EAAD,CACEC,GAAG,wBACHmC,YAAU,EACVlC,MACE,0BAAMD,GAAG,uBACNgC,EAAS,EACR,kBAACI,EAAA,EAAD,CAAOC,QAAQ,SAASnC,UAAU,OAAOD,MAAM,mBAC5C+B,GAED,KACHD,EACC/C,EACE,2BAAI+C,EAAQO,OAEZ,8BAAOP,EAAQO,OAEf,KACJ,uBACEpC,UAAU,2BACVC,MAAO,CAAEC,SAAU,WAIzBC,WAAUrB,GAEV,kBAACe,EAAA,EAAYU,KAAb,CAAkBE,KAAK,aAAaT,UAAU,iBAA9C,cAGA,kBAACH,EAAA,EAAYU,KAAb,CAAkBE,KAAK,YAAYT,UAAU,iBAC1C8B,EAAS,EACR,kBAACI,EAAA,EAAD,CAAOC,QAAQ,SAASnC,UAAU,OAAOD,MAAM,mBAC5C+B,GAED,KALN,gBAQA,kBAACjC,EAAA,EAAYwC,QAAb,MACA,kBAACxC,EAAA,EAAYU,KAAb,CAAkB+B,QAjEP,WACbC,EACGC,OACAC,UACAnD,MAAK,WACJqC,EFZC,CACLb,KAAM,mBEYFlB,MAAM,mCAEPJ,OAAM,SAACkD,GAAD,OAAWhD,QAAQC,IAAI+C,OAyDK1C,UAAU,iBAA7C,wBAOS0B,IChFTiB,EAAW/D,IAAMC,MAAK,WAC1B,IAAMgD,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAEvC/C,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WAE7C,OACE,kBAAC8D,EAAA,EAAD,CACEC,MAAM,MACNC,kBAAgB,EAChBC,OAAO,KACPjD,GAAG,WACHqC,QAAQ,OACRnC,UAAU,eAETlB,EACC,kBAAC8D,EAAA,EAAOI,MAAR,CAAchD,UAAU,qBACtB,wBAAIA,UAAU,yBACZ,8CAIJ,kBAAC4C,EAAA,EAAOI,MAAR,CAAcvC,KAAK,IAAIT,UAAU,qBAC/B,wBAAIA,UAAU,iBAAd,kBAGJ,kBAAC4C,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAE7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBrD,GAAG,yBAClB,kBAACsD,EAAA,EAAD,CAAWpD,UAAU,gBAEnB,kBAACqD,EAAA,EAAD,CAAKC,GAAIC,IAAKvD,UAAU,0BACtB,yBAAKA,UAAU,mBACb,kBAAC,EAAD,QAIJ,kBAACqD,EAAA,EAAD,CAAKC,GAAIC,IAAKvD,UAAU,sCACrBlB,EACC,kBAAC8D,EAAA,EAAOI,MAAR,KACE,wBAAIhD,UAAU,yBACZ,8CAIJ,kBAAC4C,EAAA,EAAOI,MAAR,CAAcvC,KAAK,KACjB,wBAAIT,UAAU,iBAAd,mBAKN,kBAACqD,EAAA,EAAD,CACEC,GAAIC,IACJvD,UAAU,4DAET6B,EACC,oCAEE,yBAAK7B,UAAU,qBACb,wBACEA,UAAU,4BACVC,MAAO,CAAEuD,MAAO,YAFlB,UAMA,kBAAC,EAAD,MACA,wBACExD,UAAU,4BACVC,MAAO,CAAEuD,MAAO,YAFlB,cAMA,kBAAC,EAAD,CAAiBC,eAAgB5B,EAAQ4B,kBAE3C,yBAAKzD,UAAU,qBACb,kBAAC,EAAD,CAAiByD,eAAgB5B,EAAQ4B,mBAI7C,oCACE,kBAACJ,EAAA,EAAIK,KAAL,CAAU1D,UAAU,qBAAqBS,KAAK,UAA9C,oBAGA,kBAAC4C,EAAA,EAAIK,KAAL,CAAU1D,UAAU,aAAaS,KAAK,WAAtC,iBAGA,kBAAC4C,EAAA,EAAD,CAAKrD,UAAU,qBACb,kBAAC,EAAD,eAWH2C,I,kBCpGTgB,G,OAAW/E,IAAMC,MAAK,WAC1B,OACE,4BAAQiB,GAAG,WAAWE,UAAU,WAC9B,kBAACoD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,GACP,wBAAI/D,GAAG,aAAaE,UAAU,QAA9B,iBAGA,uBAAGA,UAAU,mBACX,6DAEF,uBAAGA,UAAU,QACX,uBACES,KAAK,8CACLqD,OAAO,SACPC,IAAI,uBAEJ,uBACE/D,UAAU,gCACVD,MAAM,eAGV,uBACEU,KAAK,uCACLqD,OAAO,SACPC,IAAI,uBAEJ,uBACE/D,UAAU,iCACVD,MAAM,cAGV,uBACEU,KAAK,qCACLqD,OAAO,SACPC,IAAI,uBAEJ,uBAAG/D,UAAU,yBAAyBD,MAAM,cAGhD,2DAEF,kBAACwD,EAAA,EAAD,CAAKM,GAAI,EAAG7D,UAAU,gBACpB,wBAAIA,UAAU,eACZ,uBAAGA,UAAU,wBADf,YAIA,uBAAGA,UAAU,QAAb,qCACA,uBAAGA,UAAU,QAAb,gBACA,uBAAGA,UAAU,QAAb,2BAEF,kBAACuD,EAAA,EAAD,CAAKM,GAAI,EAAG7D,UAAU,gBACpB,wBAAIA,UAAU,eACZ,uBAAGA,UAAU,qBADf,gBAIA,uBAAGA,UAAU,QAAb,kCACA,uBAAGA,UAAU,QAAb,kCACA,uBAAGA,UAAU,QAAb,8BAEF,kBAACuD,EAAA,EAAD,CAAKM,GAAI,EAAG7D,UAAU,gBACpB,wBAAIA,UAAU,eACZ,uBAAGA,UAAU,sBADf,YAIA,uBAAGA,UAAU,QAAb,kCACA,uBAAGA,UAAU,QAAb,gCAIN,kBAACgE,EAAA,EAAD,CAAOC,IAAI,yBAAyBjE,UAAU,yBAKrC2D,IC3ETO,I,cAAetF,IAAMC,MAAK,WAC9B,IAAMsF,EAAapF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,cAEhD,OAAOA,EACL,kBAACf,EAAA,EAAD,CAAWpD,UAAU,OAAOC,MAAO,CAAEC,SAAU,SAC5CiE,EAAW9D,KAAI,SAAC+D,GAAD,OACdA,EAAEC,KACA,0BAAM7D,IAAK4D,EAAEE,MACX,uBAAGtE,UAAU,iBAAiBS,KAAM2D,EAAEC,MACnCD,EAAEE,MAEL,0BAAMtE,UAAU,kCAAhB,MAGF,0BAAMQ,IAAK4D,EAAEE,KAAMtE,UAAU,6BAC1BoE,EAAEE,UAKT,SAGSJ,MCvBTK,I,OAAa3F,IAAMC,MAAK,WAC5B,IAAMgD,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAE7C,OACE,yBAAK/B,GAAG,cACN,kBAACsD,EAAA,EAAD,KACE,yBAAKpD,UAAU,UACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,mBACX6B,EAAUA,EAAQO,MAAMoC,MAAM,IAAK,GAAG,GAAK,MAE9C,0BAAMxE,UAAU,cACd,uBAAGA,UAAU,qBACZ6B,EAAUA,EAAQ4C,KAAO,IAAM5C,EAAQ6C,aAAe,cAStDH,M,qECtBTI,G,+MACJ3F,MAAQ,CACN4F,WAAY,EACZC,YAAY,G,4DAIe,IAAvBC,OAAOC,aACTC,cAAcC,KAAKjG,MAAM4F,YAE3BE,OAAOI,OAAO,EAAGJ,OAAOC,YAAcE,KAAKE,MAAMC,kB,oCAIjD,IAAIR,EAAaS,YACfJ,KAAKK,WAAWC,KAAKN,MACrBA,KAAKE,MAAMK,WAEbP,KAAKQ,SAAS,CAAEb,WAAYA,M,yCAIxBE,OAAOC,YAAc,IACvBE,KAAKQ,SAAS,CACZZ,YAAY,IAGdI,KAAKQ,SAAS,CACZZ,YAAY,M,0CAMhB,IAAIa,EAAkBT,KACtBU,SAASC,iBAAiB,UAAU,SAAUC,GAC5CH,EAAgBI,wB,+BAIV,IAAD,OACP,OAAOb,KAAKjG,MAAM6F,WAChB,kBAAC,KAAD,CAAMkB,OAAK,GACT,0BACEzD,QAAS,WACP,EAAK0D,eAEPhG,UAAU,0DACVD,MAAM,aAEN,uBAAGC,UAAU,wBAGf,S,GArDmBiG,iBA8DZtB,MCzDFuB,GAAStH,IAAMC,MAAK,YAA8C,IAA3CsH,EAA0C,EAA1CA,SAA0C,IAAhCC,uBAAgC,MAAd,QAAc,EAC5E,OACE,oCACE,kBAAC,EAAD,MACA,yBACEpG,UAAU,qCACVC,MAAO,CAAEmG,oBAERD,EACD,kBAAC,EAAD,WAYKE,GAAgBzH,IAAMC,MAAK,YAA+B,IAA5BsF,EAA2B,EAA3BA,WAAYgC,EAAe,EAAfA,SACrD,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKnG,UAAU,cACf,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAcmE,WAAYA,IACzBgC,EACD,kBAAC,GAAD,CAAcf,eAAgB,IAAKI,UAAW,Y,oBClC9Cc,I,OAAc1H,IAAMC,MAAK,WAC7B,OACE,kBAAC0H,GAAA,EAAD,CAAWC,OAAK,EAACxG,UAAU,iBACzB,kBAACoD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAE1B,kBAAC,KAAD,CAAMC,QAAM,EAACC,SAAO,GAClB,wBAAI5G,UAAU,2BAAd,kBACA,wBAAIA,UAAU,sBAAd,iBAEA,uBAAGA,UAAU,qBACX,uBAAGA,UAAU,mCACb,0BAAMA,UAAU,WAAhB,2EAKF,uBAAGA,UAAU,QACX,uBAAGA,UAAU,mCACb,0BAAMA,UAAU,WAAhB,8DAIF,uBAAGA,UAAU,QACX,uBAAGA,UAAU,mCACb,0BAAMA,UAAU,WAAhB,8EAOJ,kBAAC6G,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,gCACVS,KAAK,WAHP,yBAcG6F,M,UChDTS,I,OAAenI,IAAMC,MAAK,YAAsB,IAAnBkB,EAAkB,EAAlBA,MAAOuE,EAAW,EAAXA,KACxC,OACE,6BACE,wBAAItE,UAAU,8CAA8CD,GAC5D,uBAAGC,UAAU,6CAA6CsE,QAUjDyC,M,UCdTC,GAAYpI,IAAMC,MAAK,YAA2B,IAAxBoI,EAAuB,EAAvBA,IAAKlH,EAAkB,EAAlBA,MAAOuE,EAAW,EAAXA,KAC1C,OACE,kBAAC4C,GAAA,EAAD,CAAMlH,UAAU,2BACd,yBAAKA,UAAU,oBACb,kBAACkH,GAAA,EAAKC,IAAN,CAAUhF,QAAQ,MAAM8B,IAAKgD,EAAKG,IAAI,SAASpH,UAAU,YAE3D,kBAACkH,GAAA,EAAKG,KAAN,KACE,kBAACH,GAAA,EAAKI,MAAN,KACE,gCAASvH,IAEX,kBAACmH,GAAA,EAAKK,KAAN,KAAYjD,QAYL0C,MCnBTQ,I,OAAe5I,IAAMC,MAAK,WAC9B,OACE,kBAACuE,EAAA,EAAD,CAAWpD,UAAU,gBACnB,kBAAC,KAAD,KACE,kBAAC,GAAD,CACED,MAAM,wBACNuE,KAAK,2HAGP,kBAACmD,GAAA,EAAD,KACE,kBAAC,GAAD,CACER,IAAI,qBACJlH,MAAM,qBACNuE,KAAK,kIAGP,kBAAC,GAAD,CACE2C,IAAI,uBACJlH,MAAM,0BACNuE,KAAK,yHAGP,kBAAC,GAAD,CACE2C,IAAI,mBACJlH,MAAM,8BACNuE,KAAK,8HASFkD,M,6BCrCTE,GAAW9I,IAAMC,MAAK,YAAwB,IAArBK,EAAoB,EAApBA,QAASmF,EAAW,EAAXA,KACtC,OACE,kBAAC6C,GAAA,EAAD,CACElH,UAAU,2BACVC,MAAO,CAAEmG,gBAAiB,YAE1B,kBAACc,GAAA,EAAKG,KAAN,KACE,kBAACH,GAAA,EAAKK,KAAN,CAAWvH,UAAU,OAAOsD,GAAIC,KAC7BrE,EAAQmB,KAAI,SAACsH,GACZ,OACE,yBAAKnH,IAAKmH,EAAE5H,OACV,yBAAKC,UAAU,QACb,uBACEA,UAAU,2BACVC,MAAO,CAAEuD,MAAO,aAElB,0BAAMvD,MAAO,CAAE2H,WAAY,MAAQD,EAAE5H,QAEvC,4BACG4H,EAAEE,KAAKxH,KAAI,SAACyH,GACX,OAAO,wBAAItH,IAAKsH,GAAKA,YAOjC,kBAACZ,GAAA,EAAKK,KAAN,CAAWvH,UAAU,QACnB,kBAAC6G,GAAA,EAAD,CAAQpG,KAAM4D,EAAMrE,UAAU,yBAA9B,eAEE,uBAAGA,UAAU,4CAaV0H,MCvCTK,I,OAAanJ,IAAMC,MAAK,WAAO,IAAD,EACJI,qBADI,mBAC3BC,EAD2B,KAClBC,EADkB,KAclC,OAXAC,qBAAU,WACRC,IACGC,MAAK,SAACC,GACLJ,EAAWI,EAAItB,SAEhBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,IAGD,kBAACwD,EAAA,EAAD,CAAWpD,UAAU,YACnB,kBAAC,KAAD,KAEE,kBAAC,GAAD,CACED,MAAM,kBACNuE,KAAK,qEAGNpF,EACCA,EAAQkB,OACN,kBAAC4H,GAAA,EAAI5E,UAAL,CAAe6E,iBAAkB,IAAM/I,EAAQ,GAAGf,QAChD,kBAACyF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,GACP,kBAACqE,GAAA,EAAD,CAAWlI,UAAU,gBAClBd,EAAQmB,KAAI,SAACC,GACZ,OACE,kBAAC4H,GAAA,EAAU3H,KAAX,CACEC,IAAKF,EAAEnC,OACPgK,QAAM,EACN1H,KAAM,IAAMH,EAAEnC,OACd6B,UAAU,wDAEV,wBAAIA,UAAU,OAAOC,MAAO,CAAE2H,WAAY,MACxC,uBACE5H,UAAU,6BACVC,MAAO,CAAEuD,MAAO,aAEjBlD,EAAEnC,cAOf,kBAACoF,EAAA,EAAD,CAAKM,GAAI,GACP,kBAACmE,GAAA,EAAII,QAAL,KACGlJ,EAAQmB,KAAI,SAACC,GACZ,OACE,kBAAC0H,GAAA,EAAIK,KAAL,CAAU7H,IAAKF,EAAEnC,OAAQmK,SAAU,IAAMhI,EAAEnC,QACzC,kBAAC,GAAD,CACEe,QAASoB,EAAEpB,QAAQmB,KAAI,SAACkI,GACtB,MAAO,CACLxI,MAAOwI,EAAG9D,KACVoD,KAAK,aAAKU,EAAGC,mBAGjBnE,KAAM,YAAc/D,EAAEnC,iBAUtC,qCAGF,yBAAK6B,UAAU,cAAcC,MAAO,CAAEwI,OAAQ,cAC5C,kBAAC/H,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,kBAQ9BmH,M,qBCrFTW,I,OAAmB9J,IAAMC,MAAK,WAqBlC,OApBAO,qBAAU,WAIEuJ,KAAc,WAAY,CAClCC,QAAS,cACTC,MAAO,IACPC,OAAQ,MAOPC,YACAzJ,MAAK,iBAGP,IAGD,kBAACiH,GAAA,EAAD,CAAWvG,UAAU,eAAewG,OAAK,GACvC,kBAACpD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKyF,GAAI,EAAGhJ,UAAU,0CACpB,kBAAC,KAAD,CAAM4G,SAAO,GACX,gCAAY5G,UAAU,mBACpB,uBAAGA,UAAU,6BAAb,YACA,wBAAIC,MAAO,CAAEuD,MAAO,YAApB,2FAIA,4BAAQxD,UAAU,kCAAlB,wCAMN,kBAACuD,EAAA,EAAD,CAAKyF,GAAI,EAAGhJ,UAAU,6BACpB,yBAAKF,GAAG,qBAQL4I,M,uGC3CTO,GAAsBrK,IAAMC,MAAK,WACrC,OACE,kBAACuE,EAAA,EAAD,CAAWpD,UAAU,cACnB,kBAAC,KAAD,KAEE,kBAAC,GAAD,CACED,MAAM,gBACNuE,KAAK,gIAIT,kBAACV,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,kBAAC2F,GAAA,EAAD,CAAUlJ,UAAU,UAClB,kBAACkJ,GAAA,EAAS3I,KAAV,KACE,yBACEP,UAAU,wBACViE,IAAKkF,KACL/B,IAAK+B,OAEP,kBAACD,GAAA,EAASE,QAAV,KACE,wBAAIpJ,UAAU,aAAaC,MAAO,CAAE2H,WAAY,MAAhD,oBAKJ,kBAACsB,GAAA,EAAS3I,KAAV,KACE,yBACEP,UAAU,wBACViE,IAAKoF,KACLjC,IAAKiC,OAEP,kBAACH,GAAA,EAASE,QAAV,KACE,wBAAIpJ,UAAU,aAAaC,MAAO,CAAE2H,WAAY,MAAhD,qBAKJ,kBAACsB,GAAA,EAAS3I,KAAV,KACE,yBACEP,UAAU,wBACViE,IAAKqF,KACLlC,IAAKkC,OAEP,kBAACJ,GAAA,EAASE,QAAV,KACE,wBAAIpJ,UAAU,aAAaC,MAAO,CAAE2H,WAAY,MAAhD,iBAKJ,kBAACsB,GAAA,EAAS3I,KAAV,KACE,yBACEP,UAAU,wBACViE,IAAKsF,KACLnC,IAAKmC,OAEP,kBAACL,GAAA,EAASE,QAAV,KACE,wBAAIpJ,UAAU,aAAaC,MAAO,CAAE2H,WAAY,MAAhD,sBAYDqB,M,6CC8EAO,GAxJK,WAClB,IAAMC,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAaC,SAAS,aAC5BvH,MAAOsH,OAAatH,MAAM,uBAAoBuH,SAAS,aACvDC,QAASF,OAAaC,SAAS,aAC/BE,KAAMH,OAAaC,SAAS,eAG9B,OACE,kBAAC,KAAD,CACEG,cAAe,CACbrF,KAAM,GACNrC,MAAO,GACPwH,QAAS,GACTC,KAAM,IAERE,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACdD,EAAOE,OAAS,SAChB9K,EAAgB4K,GACb3K,MAAK,SAACC,GAELK,MAAML,EAAItB,SAEXuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,QACLsG,MAAOd,EAAO7H,MACd4I,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQjI,QAAUgI,EAAOhI,MAClC+I,UAAWd,EAAQjI,SAAWgI,EAAOhI,QAEvC,kBAAC,KAAD,CACEpC,UAAU,cACVyE,KAAK,QACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEvH,GAAG,SACH+H,aAAa,WACbvK,KAAK,OACL2D,KAAK,UAELuG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQT,UAAYQ,EAAOR,QACpCuB,UAAWd,EAAQT,WAAaQ,EAAOR,SAEvC,4BAAQzJ,UAAQ,GAAhB,YACA,4BAAQ4K,MAAM,iCAAd,iCAGA,4BAAQA,MAAM,+BAAd,+BAGA,4BAAQA,MAAM,QAAd,SAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,gBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACLxK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOJ,KACdmB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQR,OAASO,EAAOP,KACjCsB,UAAWd,EAAQR,QAAUO,EAAOP,OAEtC,kBAAC,KAAD,CACE7J,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,KACE,kBAAC9D,GAAA,EAAD,CACE/F,KAAK,SACLX,SAAUsK,EACVzK,UAAU,iBAHZ,gBClINuL,GAAe3M,IAAMC,MAAK,WAC9B,IAAM2M,EAAW,YAAgC,IAA7BhL,EAA4B,EAA5BA,IAAKgL,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACjC,OACE,kBAACvE,GAAA,EAAD,CAAMlH,UAAU,mCACd,kBAAC0L,GAAA,EAAUzI,OAAX,CACEK,GAAI4D,KAAKyE,OACTrD,SAAU9H,EACVR,UAAU,iBAEV,yBAAKA,UAAU,sBACb,gCAASwL,GACT,uBAAGxL,UAAU,qCAGjB,kBAAC0L,GAAA,EAAUvI,SAAX,CAAoBmF,SAAU9H,GAC5B,kBAAC0G,GAAA,EAAKG,KAAN,CAAWrH,UAAU,sBAAsByL,MAMnD,OACE,oCACE,kBAACzH,EAAA,EAAD,CAAOC,IAAI,kBAAkBnE,GAAG,aAChC,kBAACyG,GAAA,EAAD,CAAWvG,UAAU,WAAWwG,OAAK,GACnC,kBAACpD,EAAA,EAAD,CAAWpD,UAAU,mBACnB,kBAAC,KAAD,KACE,wBAAIA,UAAU,wBAAwBC,MAAO,CAAE2H,WAAY,MAA3D,wBAGA,kBAAC8D,GAAA,EAAD,CAAW1L,UAAU,gBAClBwL,EAAS,CACRhL,IAAK,EACLgL,SAAU,kDACVC,OACE,kPAEHD,EAAS,CACRhL,IAAK,EACLgL,SACE,oEACFC,OACE,yHAEHD,EAAS,CACRhL,IAAK,EACLgL,SAAU,4CACVC,OACE,2NAEHD,EAAS,CACRhL,IAAK,EACLgL,SACE,+FACFC,OACE,4GAEHD,EAAS,CACRhL,IAAK,EACLgL,SAAU,oCACVC,OACE,iKAEJ,kBAACvE,GAAA,EAAD,CAAMlH,UAAU,mCACd,kBAAC0L,GAAA,EAAUzI,OAAX,CACEK,GAAI4D,KAAKyE,OACTrD,SAAS,cACTtI,UAAU,iBAEV,yBAAKA,UAAU,sBACb,8GAIA,uBAAGA,UAAU,qCAGjB,kBAAC0L,GAAA,EAAUvI,SAAX,CAAoBmF,SAAS,eAC3B,kBAACpB,GAAA,EAAKG,KAAN,CAAWrH,UAAU,yCACnB,0BAAMA,UAAU,QAAhB,mMAMA,kBAAC4D,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,kBAAC,GAAD,mBAcT6E,MCzGTK,GAAOhN,IAAMC,MAAK,WACtB,OACE,kBAACqH,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAcd,eAAgB,IAAKI,UAAW,YAKrCoG,MCpBTC,GAAUjN,IAAMC,MAAK,WACzB,OACE,kBAACqH,GAAD,KACE,yBAAKlG,UAAU,wBACb,kBAACgE,EAAA,EAAD,CACEC,IAAI,wDACJ4E,MAAM,MACNC,OAAO,MACP9I,UAAU,SAEZ,wBAAIA,UAAU,kBAAd,OACA,mFACA,gDACoB,uBAAGS,KAAK,KAAR,6BAOboL,MCfTC,I,OAAalN,IAAMC,MAAK,WAC5B,IAAM8C,EAAWC,cAEXmK,EAAYrC,KAAW,CAC3BtH,MAAOsH,OAEJtH,MAAM,+BACNuH,SAAS,aACZlF,KAAMiF,OAEHsC,IAAI,EAAG,sCACPC,QACC,6MACA,kBAEDtC,SAAS,aACZjF,aAAcgF,OAEXsC,IAAI,EAAG,sCACPC,QACC,6MACA,kBAEDtC,SAAS,aACZuC,cAAexC,OAEZsC,IAAI,EAAG,sCACPC,QACC,6MACA,kBAEDtC,SAAS,aACZwC,SAAUzC,OAAasC,IAAI,EAAG,0BAAuBrC,SAAS,eAGhE,OACE,kBAAC,KAAD,CACEG,cAAe,CACb1H,MAAO,GACPqC,KAAM,GACNC,aAAc,GACdwH,cAAe,GACfC,SAAU,IAEZpC,iBAAkBgC,EAClB/B,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd3H,EACGC,OACA4J,+BAA+BnC,EAAO7H,MAAO6H,EAAOkC,UACpD7M,MAAK,SAAC+M,GACL3M,QAAQC,IAAI,+CACZ0M,EAAMC,KACHC,cAAc,CACbC,YAAa,YAEdlN,MAAK,WACJI,QAAQC,IAAI,8BAEZN,EAAuB,CACrBoN,YAAaJ,EAAMC,KAAKjO,IACxBoG,KAAMwF,EAAOxF,KACbC,aAAcuF,EAAOvF,aACrBwH,cAAejC,EAAOiC,cACtB9J,MAAO6H,EAAO7H,QAEb9C,MAAK,SAACC,GACLG,QAAQC,IAAI,kCAAmCJ,EAAItB,MACnDoB,EAAsBgN,EAAMC,KAAKjO,KAC9BiB,MAAK,SAACC,GACLG,QAAQC,IAAI,iCAAkCJ,EAAItB,MAClD0D,EAAS+K,EAA4BnN,EAAItB,OACzC2B,MAAM,eAAD,OAAgBL,EAAItB,KAAKwG,OAC9BK,OAAO6H,SAASlM,KAAO,gBAExBjB,OAAM,SAACkD,GACN9C,MACE,kEAEFF,QAAQC,IAAI+C,GACZwH,GAAc,SAGnB1K,OAAM,SAACC,GACNG,MACE,+EAEFF,QAAQC,IAAIF,YAIrBD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAImN,MAChBlN,QAAQC,IAAIF,EAAIoN,eAIrB,gBACC5C,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GACzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KACE,0CACA,4BAAQ5K,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVgC,YAAY,sBACZhM,KAAK,QACL2D,KAAK,QACLsG,MAAOd,EAAO7H,MACd4I,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQjI,QAAUgI,EAAOhI,QAEpC,kBAAC,KAAD,CACEpC,UAAU,cACVyE,KAAK,QACL2G,UAAU,UAIhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KACE,6CACA,4BAAQ5K,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KAEVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,OAEnC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAIhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,IAAKM,GAAI,GACvB,kBAAC,KAAK+G,MAAN,KACE,oDACA,4BAAQ5K,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KAEVhK,KAAK,OACL2D,KAAK,eACLsG,MAAOd,EAAOvF,aACdsG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ3F,eAAiB0F,EAAO1F,eAE3C,kBAAC,KAAD,CACE1E,UAAU,cACVyE,KAAK,eACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,IAAKM,GAAI,GACvB,kBAAC,KAAK+G,MAAN,KACE,oDACA,4BAAQ5K,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KAEVhK,KAAK,OACL2D,KAAK,gBACLsG,MAAOd,EAAOiC,cACdlB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ6B,gBAAkB9B,EAAO8B,gBAE5C,kBAAC,KAAD,CACElM,UAAU,cACVyE,KAAK,gBACL2G,UAAU,UAIhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KACE,iDACA,4BAAQ5K,UAAU,mBAAmBD,MAAM,aAA3C,KAGA,6BACA,2BAAOC,UAAU,cAAjB,6DAIF,kBAAC,KAAK6K,QAAN,CACEC,UAAU,KAEVhK,KAAK,WACL2D,KAAK,WACLsG,MAAOd,EAAOkC,SACdnB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8B,WAAa/B,EAAO+B,WAEvC,kBAAC,KAAD,CACEnM,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAIhB,kBAACvE,GAAA,EAAD,CACE7G,UAAU,+BACVc,KAAK,SACLX,SAAUsK,GAHZ,uBAaKqB,MC3PTiB,GAASnO,IAAMC,MAAK,WACxB,OACE,kBAACqH,GAAD,KACE,kBAAC9C,EAAA,EAAD,CAAWtD,GAAG,gBACZ,kBAAC8D,EAAA,EAAD,CAAK5D,UAAU,gBACb,kBAACuD,EAAA,EAAD,CAAKyF,GAAI,EAAGlJ,GAAG,aAAaE,UAAU,sBACpC,wBAAIA,UAAU,sCAAd,YACA,wBAAIA,UAAU,4BAAd,uCAGA,uBAAGA,UAAU,sBAAb,+BAEE,uBAAGS,KAAK,SAAST,UAAU,qBAA3B,aAKJ,kBAACuD,EAAA,EAAD,CAAKyF,GAAI,EAAGlJ,GAAG,eACb,kBAAC,GAAD,aAQGiN,MCtBTjB,GAAalN,IAAMC,MAAK,WAC5B,IAAM8C,EAAWC,cAEXmK,EAAYrC,KAAW,CAC3BtH,MAAOsH,OAEJtH,MAAM,+BACNuH,SAAS,aACZwC,SAAUzC,OAAasC,IAAI,EAAG,0BAAuBrC,SAAS,eAGhE,OACE,kBAAC,KAAD,CACEG,cAAe,CACb1H,MAAO,GACP+J,SAAU,IAEZpC,iBAAkBgC,EAClB/B,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd3H,EACGC,OACAwK,eAAehM,IAAMwB,KAAKyK,KAAKC,YAAYC,OAC3C7N,MAAK,WACJ,OAAOiD,EACJC,OACA4K,2BAA2BnD,EAAO7H,MAAO6H,EAAOkC,UAChD7M,MAAK,SAACC,GAELF,EAAsBE,EAAI+M,KAAKjO,KAC5BiB,MAAK,SAACC,GACDA,EAAItB,MACN0D,EAAS+K,EAA4BnN,EAAItB,OACzC2B,MAAM,qCAAD,OAAgCL,EAAItB,KAAKwG,SAG9C7E,MAAM,6CACN2C,EAASC,OAAOC,cAGnBjD,OAAM,SAACkD,GACN9C,MAAM,6CACNF,QAAQC,IAAI+C,GACZwH,GAAc,YAIvB1K,OAAM,SAACkD,GACN9C,MACE,0FAEFF,QAAQC,IAAI+C,EAAMkK,MAClBlN,QAAQC,IAAI+C,EAAMmK,SAClB3C,GAAc,MAElBA,GAAc,MAGf,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GACzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KACE,2CAEF,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,QACL2D,KAAK,QACLsG,MAAOd,EAAO7H,MACd4I,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQjI,QAAUgI,EAAOhI,QAEpC,kBAAC,KAAD,CACEpC,UAAU,cACVyE,KAAK,QACL2G,UAAU,UAIhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KACE,kDAEF,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,WACL2D,KAAK,WACLsG,MAAOd,EAAOkC,SACdnB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8B,WAAa/B,EAAO+B,WAEvC,kBAAC,KAAD,CACEnM,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAIhB,kBAACvE,GAAA,EAAD,CACE7G,UAAU,+BACVc,KAAK,SACLX,SAAUsK,GAHZ,iBAaKqB,MChITuB,I,OAAQzO,IAAMC,MAAK,WACvB,OACE,kBAACqH,GAAD,KACE,kBAAC9C,EAAA,EAAD,CAAWtD,GAAG,iBACZ,kBAAC8D,EAAA,EAAD,CAAK5D,UAAU,gBACb,kBAACuD,EAAA,EAAD,CAAKyF,GAAI,EAAGlJ,GAAG,cAAcE,UAAU,sBACrC,wBACEA,UAAU,4BACVC,MAAO,CAAE2H,WAAY,MAFvB,QAMA,wBAAI5H,UAAU,cAAd,qCACA,uBAAGA,UAAU,sBAAb,iCAEE,uBAAGS,KAAK,UAAUT,UAAU,qBAA5B,aAKJ,kBAACuD,EAAA,EAAD,CAAKyF,GAAI,EAAGlJ,GAAG,gBACb,kBAACwN,GAAD,cAQGD,MC5BTE,I,OAAiB3O,IAAMC,MAC3B,YAAwD,IAArDL,EAAoD,EAApDA,SAAUuB,EAA0C,EAA1CA,MAAOyN,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cAC3B7L,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAe7C,OACE,yBAAK7B,UAAU,QACb,kBAACkH,GAAA,EAAD,CACElH,UAAU,6DACVC,MAAO,CAAE0N,UAAW,OAAQvH,gBAAiB,YAE7C,kBAACc,GAAA,EAAKG,KAAN,CAAWrH,UAAU,sBACnB,yBAAKA,UAAU,mBAEb,wBAAIA,UAAU,YAAYC,MAAO,CAAEuD,MAAO,YACvCzD,GAGH,kBAACmC,EAAA,EAAD,CAAOlC,UAAU,wDACd0N,EAAgB,eAIrB,uBAAG1N,UAAU,QAAb,8JAMCyN,EAAOpN,KAAI,SAACsH,GACX,OACE,yBAAKnH,IAAKmH,GACR,uBACE3H,UAAU,2BACVC,MAAO,CAAEuD,MAAO,aAElB,8BAAOmE,OAIb,yBAAK3H,UAAU,uBACb,4BACEA,UAAU,YACVC,MAAO,CACLuD,MAAO,UACP4C,gBAAiB,YAJrB,sBAWF,kBAACxC,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,gCACX,IAAMwN,EAAQ,UAKrB,kBAAC5J,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE6C,KAAM,EAAGD,OAAQ,IAC1B,kBAACI,GAAA,EAAD,CACE+G,OAAK,EACL5N,UAAU,qCACVsC,QACET,EACI,WA1ElBxC,EAAc,CAAEb,WAAUD,UAAWsD,EAAQG,MAC1C1C,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,4CACNkF,OAAO6H,SAASlM,KAAO,OAExBjB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,iDAmEQ,kBACEA,MACE,wDAGVkH,KAAK,MAXP,UAcE,uBAAG9G,UAAU,oCAmBhBuN,MC1GTM,I,OAAajP,IAAMC,MAAK,SAACsG,GAAW,IAAD,EACTlG,qBADS,mBAChCC,EADgC,KACvBC,EADuB,KAGvCC,qBAAU,WACRC,EAAyB8F,EAAM2I,WAAWC,MAAMC,OAAOC,QACpD3O,MAAK,SAACC,GAAD,OAASJ,EAAWI,EAAItB,SAC7BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,oDAET,CAACuF,EAAM2I,WAAWC,MAAMC,OAAOC,SAiBlC,OACE,kBAAC/H,GAAD,CAAQE,gBAAgB,SACtB,kBAAChD,EAAA,EAAD,CACEnD,MAAO,CACLiO,WAAY,OACZC,aAAc,SAIhB,kBAACtH,GAAA,EAAD,CAAQ7G,UAAU,iBAAiBS,KAAK,KACtC,uBAAGT,UAAU,oCACb,2CAGF,kBAAC4D,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE6C,KAAM,EAAGD,OAAQ,IAC1B,yBAAKzG,UAAU,eACb,wBAAIA,UAAU,oBACXmF,EAAM2I,WAAWC,MAAMC,OAAOC,SAGnC,uBAAGjO,UAAU,sCApCA,WACrB,OAAQmF,EAAM2I,WAAWC,MAAMC,OAAOC,QACpC,IAAK,WACH,MAAO,2UACT,IAAK,aACH,MAAO,8ZACT,IAAK,eACH,MAAO,yZACT,IAAK,cACH,MAAO,cACT,QACE,OAAO,MA0BAG,MAKP,yBAAKpO,UAAU,gDACZd,EACCA,EAAQkB,OACNlB,EAAQmB,KAAI,SAACC,GAAD,OACV,kBAAC,GAAD,CACEE,IAAKF,EAAE0B,IACPxD,SAAU8B,EAAE0B,IACZ0L,cAAepN,EAAEmN,OAAOrN,OACxBL,MAAOO,EAAEmE,KACT+I,MAAOlN,EAAEkN,MACTC,OAAQnN,EAAEmN,OAAOY,QAAO,SAACC,EAAKC,GAE5B,OADAD,EAAIE,KAAKD,EAAG9J,MACL6J,IACN,SAIP,qCAGF,yBAAKtO,UAAU,mBAAmBC,MAAO,CAAE0N,UAAW,UACpD,kBAACjN,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMZ,UAAU,WAAhB,kBAMV,kBAAC,GAAD,CAAcoF,eAAgB,IAAKI,UAAW,aAKrCqI,MC4BAR,I,OAnHD,WACZ,IAAMoB,EAAc/E,KAAW,CAC7BtH,MAAOsH,OAAatH,MAAM,uBAAoBuH,SAAS,aACvDwC,SAAUzC,OAAasC,IAAI,EAAG,uBAAuBrC,SAAS,eAGhE,OACE,kBAACvG,EAAA,EAAD,CAAWoD,OAAK,EAACxG,UAAU,QAAQF,GAAG,YACpC,kBAAC8D,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE6C,KAAM,EAAGD,OAAQ,IAC1B,wBAAIzG,UAAU,wBAAwBF,GAAG,YAAzC,iBAGA,kBAAC,KAAD,CACEgK,cAAe,CAAE1H,MAAO,GAAI+J,SAAU,IACtCpC,iBAAkB0E,EAClBzE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd3H,EACGC,OACAwK,eAAehM,IAAMwB,KAAKyK,KAAKC,YAAYwB,SAC3CpP,MAAK,WACJ,OAAOiD,EACJC,OACA4K,2BAA2BnD,EAAO7H,MAAO6H,EAAOkC,UAChD7M,MAAK,SAACC,GAELK,MAAM,oCAGXJ,OAAM,SAACkD,GACN9C,MAAM,sBACNF,QAAQC,IAAI+C,EAAMkK,MAClBlN,QAAQC,IAAI+C,EAAMmK,SAClB3C,GAAc,MAElBA,GAAc,MAGf,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GACzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,CAAY5K,UAAU,cAAtB,wBAEE,4BAAQA,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,QACL2D,KAAK,QACLsG,MAAOd,EAAO7H,MACd4I,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQjI,QAAUgI,EAAOhI,QAEpC,kBAAC,KAAD,CACEpC,UAAU,cACVyE,KAAK,QACL2G,UAAU,UAIhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,CAAY5K,UAAU,cAAtB,gBAEE,4BAAQA,UAAU,mBAAmBD,MAAM,aAA3C,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,WACL2D,KAAK,WACLsG,MAAOd,EAAOkC,SACdnB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8B,WAAa/B,EAAO+B,WAEvC,kBAAC,KAAD,CACEnM,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAIhB,kBAACvE,GAAA,EAAD,CACE/G,GAAG,gBACHE,UAAU,iBACVc,KAAK,SACLX,SAAUsK,GAJZ,mBCjGD,cACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,IAAIxD,UAAWyD,KACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUxD,UAAW2B,KACvC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,SAASxD,UAAWiC,KAEtC,kBAAC,IAAD,CACEsB,OAAK,EACLC,KAAK,mBACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAY2I,WAAY3I,OAG7C,kBAAC,IAAD,CAAU4J,KAAK,aAAaC,GAAG,MAC/B,kBAAC,IAAD,CAAUD,KAAK,UAAUC,GAAG,MAG5B,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,SAASxD,UAAW6D,KAEtC,kBAAC,IAAD,CAAUF,KAAK,WAAWC,GAAG,WAG7B,kBAAC,IAAD,CAAO5D,UAAWS,OC3BlBqD,I,OAAYtQ,IAAMC,MAAK,WAAO,IAAD,EACHI,qBADG,mBAC1BC,EAD0B,KACjBC,EADiB,KAYjC,OATAC,qBAAU,WACRC,IACGC,MAAK,SAACC,GAAD,OAASJ,EAAWI,EAAItB,SAC7BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,oDAET,IAGD,yBAAKI,UAAU,oBACb,kBAACgE,EAAA,EAAD,CAAOC,IAAI,uBAAuBjE,UAAU,aAC5C,wBAAIA,UAAU,eAAeC,MAAO,CAAEuD,MAAO,YAA7C,oCAGA,yBAAKxD,UAAU,sCACZd,EACCA,EAAQkB,OACNlB,EAAQmB,KAAI,SAACC,GAAD,OACV,kBAACuG,GAAA,EAAD,CACErG,IAAKF,EACLG,KAAM,YAAcH,EACpBwG,KAAK,KACL9G,UAAU,6BAETM,MAGH,KAEJ,6BACE,kBAACI,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,kBAQ9BsO,M,uCCvCTC,I,OAAsBvQ,IAAMC,MAAK,YAAiB,IAAdoP,EAAa,EAAbA,OAClCtM,EAAWC,cAEXwN,EAAa,yCAAG,WAAO5Q,EAAU6Q,GAAjB,UAAAC,EAAA,sDACpB3N,ECVK,CACLb,KAAM,aACN7C,KDQiC,CAAE+D,IAAKxD,EAAUiG,KAAM4K,KADpC,2CAAH,wDAInB,OACE,kBAACnI,GAAA,EAAD,CAAMlH,UAAU,iCACd,kBAACkH,GAAA,EAAKG,KAAN,KACE,kBAACH,GAAA,EAAKI,MAAN,CAAYtH,UAAU,mBACpB,wBAAIA,UAAU,QAAQiO,EAAOxJ,OAE/B,kBAACyC,GAAA,EAAKK,KAAN,KAAY0G,EAAOsB,cAErB,kBAACrH,GAAA,EAAD,CAAWlI,UAAU,oBAClBiO,EAAOR,OAAOpN,KAAI,SAACmP,GAAD,OACjB,kBAACC,GAAA,EAAD,CACEjP,IAAKgP,EAAGxN,IACRhC,UAAU,sCAEV,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oCACVsC,QAAS,kBACP8M,EAAcnB,EAAOjM,IAAKiM,EAAOxJ,MAAMnF,MACrC,kBAAOwF,OAAO6H,SAASlM,KAAO,YAAc+O,EAAG/K,SAGnD1E,MAAO,QAAUyP,EAAG/K,MAEpB,gCACE,uBACEzE,UAAU,6BACVC,MAAO,CAAEC,SAAU,UAEpBsP,EAAG/K,OAIP+K,EAAGE,UACF,uBAAG1P,UAAU,iCAAiCD,MAAM,aAClD,UAIV,kBAACmH,GAAA,EAAKG,KAAN,KACE,kBAACR,GAAA,EAAD,CACE7G,UAAU,0BACVsC,QAAS,kBACP8M,EAAcnB,EAAOjM,IAAKiM,EAAOxJ,MAAMnF,MACrC,kBAAOwF,OAAO6H,SAASlM,KAAO,eAIlC,yCACA,uBAAGT,UAAU,mCAWRmP,M,UErETQ,GAAY/Q,IAAMC,MAAK,YAAkB,IAAfK,EAAc,EAAdA,QAC9B,OACE,kBAAC0Q,GAAA,EAAD,CAAa5P,UAAU,QACpBd,EAAQmB,KAAI,SAACC,GAAD,OACX,kBAAC,GAAD,CAAqBE,IAAKF,EAAE0B,IAAKiM,OAAQ3N,WAUlCqP,MCnBFE,GAAU,SAAC5R,GACtB,MAAO,CACL6C,KAAM,WACN7C,SCWE6R,GAAYlR,IAAMC,MAAK,WAC3B,IAAM8C,EAAWC,cAEXC,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WACvCoM,EAASlP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UACtC8B,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QACpC5L,EAAapF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,cAC1CrF,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WAPZ,EASCG,qBATD,mBAS1B+Q,EAT0B,KASfC,EATe,KAiCjC,OAtBA7Q,qBAAU,WAEJ6O,GAAQtM,EHnBP,CACLb,KAAM,iBGmBFiP,GAAMpO,EDbL,CACLb,KAAM,eCaFqD,GAAYxC,ECrBX,CACLb,KAAM,qBDqBFhC,GAAS6C,EEvBR,CACLb,KAAM,gBFyBFe,GACFxC,EAAmBwC,EAAQG,KACxB1C,MAAK,SAACC,GACL0Q,EAAa1Q,EAAItB,KAAKiB,YAEvBM,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,uCAKX,CAACiC,EAASF,IAGX,kBAAC0E,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAWpD,UAAU,QACnB,wBAAIA,UAAU,gBAAd,2BACA,6BACCgQ,EACCA,EAAU5P,OACR,kBAAC,GAAD,CAAWlB,QAAS8Q,IAEpB,kBAAC,GAAD,MAGF,yBAAKhQ,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,kBAQjC2N,M,mBGtCAI,I,OAzBC,SAAC,GAAmB,IAAjBxR,EAAgB,EAAhBA,UACjB,OACE,yBAAKsB,UAAU,QACb,kBAAC,YAAD,CACEmQ,QAAM,EACNnB,GAAI,YAActQ,EAClBqB,MAAO,QAAUrB,EACjBsB,UAAU,gBAEV,4BAAQC,MAAO,CAAEC,SAAU,SACzB,uBACEF,UAAU,6BACVC,MAAO,CAAEC,SAAU,UAEpBxB,O,oBCyBI0R,I,OAvCI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,yBAAKrQ,UAAU,eACZqQ,EAAQhQ,KAAI,SAACiQ,GAAD,OACXA,EAAEZ,UACA,kBAACa,GAAA,EAAD,CACE/P,IAAK8P,EAAEE,UACPC,UAAU,MACVC,QACE,kBAACC,GAAA,EAAD,KACE,gCAASL,EAAEE,aAIf,kBAACxM,EAAA,EAAD,CACEC,IAAKqM,EAAEjM,KACPwE,MAAM,KACNC,OAAO,MACP9I,UAAU,0BAId,kBAACgE,EAAA,EAAD,CACExD,IAAK8P,EAAEE,UACPvM,IAAI,yBACJ4E,MAAM,KACNC,OAAO,MACP9I,UAAU,oCCzBhB4Q,I,OAAchS,IAAMC,MAAK,YAAgC,IAA7B4F,EAA4B,EAA5BA,KAAMgJ,EAAsB,EAAtBA,OAAQ4C,EAAc,EAAdA,QAC9C,OACE,yBAAKvQ,GAAG,oBACN,kBAACsD,EAAA,EAAD,KAEE,wBAAIpD,UAAU,uCAAuCyE,GACrD,6BACA,kBAACb,EAAA,EAAD,KAEE,kBAACL,EAAA,EAAD,CAAKyF,GAAI,GACP,wBAAI/I,MAAO,CAAEuD,MAAO,WAAaxD,UAAU,QAA3C,WAIA,yBAAKA,UAAU,sBACZyN,EAAOpN,KAAI,SAACwQ,GAAD,OACV,kBAAC,GAAD,CAASrQ,IAAKqQ,EAAEpM,KAAM/F,UAAWmS,EAAEpM,YAKzC,kBAAClB,EAAA,EAAD,CAAKyF,GAAI,EAAGhJ,UAAU,6BACpB,wBAAIC,MAAO,CAAEuD,MAAO,WAAaxD,UAAU,QAA3C,aAGA,kBAAC,GAAD,CAAYqQ,QAASA,YAclBO,M,SC3CTE,GAAkBlS,IAAMC,MAAK,YAAqB,IAAlBkS,EAAiB,EAAjBA,WA8EpC,OACE,0BAAM/Q,UAAU,cAAcD,MAAM,cA9EV,WAC1B,OAAQgR,GACN,IAAK,QACH,OACE,oCACE,uBAAG/Q,UAAU,gBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,6BACA,0BAAMA,UAAU,eACd,+CAIR,IAAK,qBACH,OACE,oCACE,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,6BACA,0BAAMA,UAAU,eACd,0DAIR,IAAK,eACH,OACE,oCACE,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,6BACA,0BAAMA,UAAU,eACd,gDAIR,IAAK,wBACH,OACE,oCACE,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,6BACA,0BAAMA,UAAU,eACd,yDAIR,IAAK,WACH,OACE,oCACE,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,qBACb,6BACA,0BAAMA,UAAU,eACd,+CAWPgR,OASQF,M,oBCxFTG,I,MAAcrS,IAAMC,MAAK,YAAe,IAAZqS,EAAW,EAAXA,KAC1BC,EAAgBD,EAClBE,KAAOF,GAAMG,OAAO,QACpB,gCAEJ,OACE,0BAAMpR,MAAO,CAAEC,SAAU,QAAUH,MAAM,qBACvC,uBAAGC,UAAU,6BACZmR,EAAcG,OAAO,GAAGC,cAAgBJ,EAAcK,MAAM,QAKpDP,MCdTQ,GAAoB7S,IAAMC,MAAK,WACnC,OACE,oCACE,kBAAC0R,GAAA,EAAD,CACEE,UAAU,MACVC,QACE,kBAACC,GAAA,EAAD,CAAS7Q,GAAG,oBAAZ,iFAMF,0BAAME,UAAU,kBACd,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,0BACVC,MAAO,CAAEyR,cAAe,QACxBvR,UAAQ,GAER,uBAAGH,UAAU,4BAQVyR,M,oBCvBTE,GAAe/S,IAAMC,MAAK,YAAgB,IAAb+S,EAAY,EAAZA,MAAY,EACrB3S,oBAAS,GADY,mBACtC4S,EADsC,KAChCC,EADgC,KAGvCC,EAAc,kBAAMD,GAAQ,IAKlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACE1E,QAAQ,OACRG,QARa,kBAAMwP,GAAQ,IAS3B7R,MAAO,CAAEC,SAAU,QACnBF,UAAU,mBAEV,uBAAGA,UAAU,uBANf,gBAUA,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,KACE,yBAAKrH,UAAU,eACb,kBAACgE,EAAA,EAAD,CACEC,IAAI,qBACJiO,OAAO,KACPrJ,MAAM,KACN7I,UAAU,cAEZ,6CAGD4R,EAAMxR,OACL,kBAAC+R,GAAA,EAAD,CAAOrL,KAAK,KAAK9G,UAAU,QACzB,+BACE,4BACE,wBAAIA,UAAU,0CAAd,KACA,wBAAIA,UAAU,0CAAd,UAGA,wBAAIA,UAAU,0CAAd,WAGA,wBAAIA,UAAU,0CAAd,WAKJ,+BACG4R,EAAMvR,KAAI,SAACwQ,EAAGuB,GAAJ,OACT,wBAAI5R,IAAKqQ,EAAE7O,KACT,wBAAIhC,UAAU,eAAeoS,EAAM,GACnC,wBAAIpS,UAAU,eAAe6Q,EAAEwB,OAC/B,wBAAIrS,UAAU,eAAe6Q,EAAEvS,UAC/B,wBAAI0B,UAAU,eAhDTkR,EAgDqCL,EAAEK,KAhD9BE,KAAOF,GAAMG,OAAO,SAA9B,IAACH,OAsDb,yBAAKlR,UAAU,oBACb,wBAAIA,UAAU,cAAd,gCAIJ,yBAAKA,UAAU,yBACb,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,SACRnC,UAAU,YACVsC,QAASyP,GAHX,kBAkBGJ,MClFTW,GAAgB1T,IAAMC,MAAK,YAAwC,IAArCH,EAAoC,EAApCA,UAAW6T,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAChD7Q,EAAWC,cAEX6Q,EAAc,yCAAG,WAAOC,GAAP,UAAApD,EAAA,sDACrB3N,EAASgR,GAAoBD,IADR,2CAAH,sDAIpB,OACE,kBAACxL,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKyE,OAAN,CAAa1L,MAAO,CAAEmG,gBAAiB,YACrC,kBAACsF,GAAA,EAAUzI,OAAX,CACEK,GAAIuD,KACJ1E,QAAQ,OACRmG,SAAS,YACTtI,UAAU,eAEV,uBAAGA,UAAU,qBACb,oDAGJ,kBAAC0L,GAAA,EAAUvI,SAAX,CAAoBmF,SAAS,aAC3B,kBAACpB,GAAA,EAAKG,KAAN,KACE,wBAAIrH,UAAU,QAAd,kBAEA,4BAAQC,MAAO,CAAEC,SAAU,QAAUF,UAAU,qBAA/C,oCAIA,kBAAC,GAAD,CAAakR,KAAMsB,EAAUI,YAC7B,6BAEA,0BAAM3S,MAAO,CAAEC,SAAU,QAAUH,MAAM,eACvC,uBAAGC,UAAU,0BACZwS,EAAUK,MAAQ,UAErB,6BACA,kBAAC,GAAD,CAAcjB,MAAOY,EAAUZ,QAC/B,6BAEA,kBAAChO,EAAA,EAAD,CAAK5D,UAAU,QACb,kBAACuD,EAAA,EAAD,CAAKvD,UAAU,eACb,wBAAIA,UAAU,oBACZ,0BAAMD,MAAM,6BACTyS,EAAUM,iBAGf,4BACE,2BAAO9S,UAAU,cAAjB,YAGJ,kBAACuD,EAAA,EAAD,CAAKvD,UAAU,eACb,wBAAIA,UAAU,oBACZ,0BAAMD,MAAM,yBAAsByS,EAAUO,YAE9C,4BACE,2BAAO/S,UAAU,cAAjB,eAKN,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,SACRnC,UAAU,YACVsC,QAAS,kBACPmQ,EAAe,CACbO,SAAUR,EAAUK,MACpBpO,KAAM,iBACN/F,UAAWA,EACX6T,QAASA,IAERjT,MAAK,kBAAOwF,OAAO6H,SAASlM,KAAO,uBACnCjB,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,GACrBG,MAAM,kCACNkF,OAAO6H,SAASlM,KAAO,eAd/B,iBA+BK6R,MCzFTW,GAAiBrU,IAAMC,MAC3B,YAAuD,IAApDqU,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,OAAQX,EAAoC,EAApCA,UAAW9T,EAAyB,EAAzBA,UAAW6T,EAAc,EAAdA,QAChC5Q,EAAWC,cAEX6Q,EAAc,yCAAG,WAAOzQ,EAAKyC,EAAMsM,EAAYiC,GAA9B,UAAA1D,EAAA,sDACrB3N,EACEgR,GAAoB,CAClB3Q,MACAmR,SACA1O,OACAsM,aACAiC,WACAtU,YACA6T,aATiB,2CAAH,4DAcpB,OACE,kBAAC7G,GAAA,EAAD,CAAW1L,UAAU,aAClBkT,EACEE,MAAK,SAAC9D,EAAGlL,GAAJ,OAAUkL,EAAE+D,gBAAkBjP,EAAEiP,mBACrChT,KAAI,SAACiT,EAAIlB,GAAL,OACH,kBAAC,IAAMmB,SAAP,CAAgB/S,IAAK4R,GACnB,kBAAClL,GAAA,EAAD,KAEE,kBAACA,GAAA,EAAKyE,OAAN,CAAa1L,MAAO,CAAEmG,gBAAiB,YACrC,kBAACsF,GAAA,EAAUzI,OAAX,CACEK,GAAIuD,KACJ1E,QAAQ,OACRmG,SAAUgL,EAAGtR,KAEb,uBAAGhC,UAAU,6BACb,4BAAQC,MAAO,CAAEuD,MAAO,YAAc8P,EAAG7O,MAExC6O,EAAGE,cAAgB,EAClB,uBACExT,UAAU,wCACVD,MAAM,aAEN,KAEHuT,EAAGG,gBACF,uBACEzT,UAAU,iCACVD,MAAM,6BAEN,KAEHuT,EAAGI,YAAc,KAChB,uBAAG1T,UAAU,mBAAmBD,MAAM,gBAI5C,kBAAC2L,GAAA,EAAUvI,SAAX,CAAoBmF,SAAUgL,EAAGtR,KAC/B,kBAACkF,GAAA,EAAKG,KAAN,KAEE,wBAAIrH,UAAU,QAAQsT,EAAG7O,MAEzB,kBAAC,GAAD,CAAiBsM,WAAYuC,EAAGvC,aAEhC,uBAAG/Q,UAAU,aACX,4BAAQC,MAAO,CAAEC,SAAU,SACxBoT,EAAG/D,cAIR,kBAAC,GAAD,CAAa2B,KAAMoC,EAAGK,gBACtB,6BAEA,0BAAM1T,MAAO,CAAEC,SAAU,QAAUH,MAAM,eACvC,uBAAGC,UAAU,0BACZsT,EAAGN,SAAW,YAEjB,6BAEA,0BAAM/S,MAAO,CAAEC,SAAU,QAAUH,MAAM,aACvC,uBAAGC,UAAU,gCACZsT,EAAGM,SAAW,cAGjB,kBAAChQ,EAAA,EAAD,CAAK5D,UAAU,QACb,kBAACuD,EAAA,EAAD,CAAKvD,UAAU,eACb,wBAAIA,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YACnC,0BAAMzD,MAAM,+BACTuT,EAAGE,eAGR,4BACE,2BAAOxT,UAAU,cAAjB,qBAGJ,kBAACuD,EAAA,EAAD,CAAKvD,UAAU,eACb,wBAAIA,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YACnC,0BAAMzD,MAAM,yBACTuT,EAAGO,kBAGR,4BACE,2BAAO7T,UAAU,cAAjB,eAKLsT,EAAGI,YACF,kBAAC7M,GAAA,EAAD,CACEvE,QAAS,kBACPmQ,EACEa,EAAGtR,IACHsR,EAAG7O,KACH6O,EAAGvC,WACHuC,EAAGN,UAEF1T,MAAK,kBAAOwF,OAAO6H,SAASlM,KAAO,kBACnCjB,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,GACrBG,MAAM,kCACNkF,OAAO6H,SAASlM,KAAO,cAG7BT,UAAU,2BAfZ,WAoBA,kBAAC8T,GAAD,SAMPZ,EAAM9S,SAAWgS,EAAM,GAAKI,EAAUkB,YACrC,kBAAC,GAAD,CACEhV,UAAWA,EACX6T,QAASA,EACTC,UAAWA,IAEX,aAcHS,MCzJTc,GAAYnV,IAAMC,MAAK,YAA4B,IAAzBwQ,EAAwB,EAAxBA,WAAY2E,EAAY,EAAZA,MAAY,EAC9B/U,oBAAS,GADqB,mBAC/C4S,EAD+C,KACzCC,EADyC,KAGhDC,EAAc,kBAAMD,GAAQ,IAG5BjQ,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAEvC4H,EAAYC,KAAW,CAC3BG,KAAMH,OAAaC,SAAS,eAG9B,OAAO9H,EACL,oCACE,kBAACgF,GAAA,EAAD,CACE1E,QAAQ,OACR2E,KAAK,KACL9G,UAAU,8BACVsC,QAda,kBAAMwP,GAAQ,KAgB3B,uBAAG9R,UAAU,gCANf,wBAUA,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMoC,SAAS,SAASC,UAAU,GAC7C,kBAAClC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,2BACpB,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,wBACA,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,oBACVmC,QAAQ,OACR2E,KAAK,KACL/G,MAAM,SACNuC,QAASyP,GAET,uBAAG/R,UAAU,eAAeC,MAAO,CAAEC,SAAU,YAGnD,0BAAMF,UAAU,QAAhB,kCAC+BgU,EAD/B,KACwCnS,EAAQ4C,KADhD,KAGA,0BAAMzE,UAAU,QAAhB,+EAIA,0BAAMA,UAAU,QAAhB,6HAMF,kBAAC,KAAD,CACE8J,cAAe,CACbD,KAAM,IAERE,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACdD,EAAO7H,MAAQP,EAAQO,MACvB6H,EAAOL,QAAP,UAAoByF,EAApB,cAAoC2E,GACpC/J,EAAOE,OAAS,OAChBF,EAAO3L,SAAWuD,EAAQvD,SAC1B2L,EAAOxF,KAAO5C,EAAQ4C,KAAO,IAAM5C,EAAQ6C,aAC3CrF,EAAgB4K,GACb3K,MAAK,WAEJM,MACE,oJAEFmS,OAEDvS,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKsH,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,OACLsG,MAAOd,EAAOJ,KACdmB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQR,OAASO,EAAOP,KACjCsB,UAAWd,EAAQR,QAAUO,EAAOP,OAEtC,kBAAC,KAAD,CACE7J,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAACvE,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLd,UAAU,YACVG,SAAUsK,GAJZ,iBAcV,QAQSsJ,MCtITI,GAAQvV,IAAMC,MAAK,YAA4B,IAAzBwQ,EAAwB,EAAxBA,WAAY2E,EAAY,EAAZA,MACtC,OACE,oCACE,kBAACpQ,EAAA,EAAD,CAAK9D,GAAIkU,EAAMvP,MAEb,kBAAClB,EAAA,EAAD,KACE,wBAAIvD,UAAU,2BAA2BC,MAAO,CAAEuD,MAAO,YACtDwQ,EAAMvP,KACNuP,EAAMtE,UACL,uBACE1P,UAAU,iCACVD,MAAM,WACNE,MAAO,CAAEC,SAAU,UAEnB,MAEN,yBAAKF,UAAU,eACb,wBACEA,UAAU,OACVC,MAAO,CAAEmG,gBAAiB,UAAW5C,MAAO,YAE3CwQ,EAAMpK,YAKf,kBAAChG,EAAA,EAAD,KAEE,kBAACL,EAAA,EAAD,CAAKyF,GAAI,GACP,uBAAGhJ,UAAU,QACX,uBAAGA,UAAU,mCACZgU,EAAMzE,aAET,yBAAKvP,UAAU,QACZgU,EAAMI,SAAS/T,KAAI,SAACgU,GACnB,OACE,uBAAG7T,IAAK6T,EAAIrS,IAAKhC,UAAU,QACzB,uBACES,KAAM4T,EAAIhQ,KACVP,OAAO,SACPC,IAAI,sBACJ/D,UAAU,aAEI,UAAbqU,EAAIvT,KACH,uBAAGd,UAAU,sBACE,QAAbqU,EAAIvT,KACN,uBAAGd,UAAU,yBACX,KACHqU,EAAI5P,WAOf,kBAAC,GAAD,CAAW4K,WAAYA,EAAY2E,MAAOA,EAAMvP,QAGlD,kBAAClB,EAAA,EAAD,CAAKyF,GAAI,EAAGhJ,UAAU,gBACpB,wBAAIA,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YAArC,eAGA,kBAAC,GAAD,CACE0P,MAAOc,EAAMd,MACbC,OAAQa,EAAMb,OACdzU,UAAWsV,EAAMvP,KACjB8N,QAASyB,EAAMhS,IACfwQ,UAAS,6BACJwB,EAAMxB,WADF,IAEPkB,YAAaM,EAAMtE,UACnB6C,QAASyB,EAAMhS,cAcdmS,MC1FFG,GAAa,SAACrW,GACzB,MAAO,CACL6C,KAAM,aACN7C,SCIEsW,GAAe3V,IAAMC,MAAK,YAA6C,IAA1C2V,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,qBACzC9S,EAAWC,cAEX8S,EAAW3V,aAAY,SAACC,GAAD,OAAWA,EAAM0V,YAE9C,OAAOA,EACL,oCACE,kBAAC1C,GAAA,EAAD,CAEEH,KAAM2C,EACNvC,OAAQ,WAENwC,GAAqB,GAErB9S,EDbD,CACLb,KAAM,qBCeF,kBAACkR,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,4BACK,cAAxB0U,EAAS3D,WACR,yBAAK/Q,UAAU,sBACb,yBAAKA,UAAU,QACb,kBAACgE,EAAA,EAAD,CAAOC,IAAI,mBAAmB4E,MAAM,KAAKC,OAAO,QAElD,wBAAI9I,UAAU,kBAAd,qBACA,0BAAMA,UAAU,aAAhB,YACY,IACV,0BAAMC,MAAO,CAAE2H,WAAY,MAAQ8M,EAASjQ,MAF9C,yBAKA,0BAAMzE,UAAU,QAAhB,0DAGA,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAkB+Q,WAAY2D,EAAS3D,cAEzC,yBAAK/Q,UAAU,QACb,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,0BACVsC,QAAS,WAEPmS,GAAqB,GAErB9S,EDzCX,CACLb,KAAM,qBCkCM,aAcJ,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,QACb,kBAACgE,EAAA,EAAD,CACEC,IAAKyQ,EAASC,WACd9L,MAAM,MACNC,OAAO,MACP/I,MAAO2U,EAASE,cAGpB,wBAAI5U,UAAU,kBAAd,oBACA,0BAAMA,UAAU,aAAhB,6BAC6B,IAC3B,0BAAMC,MAAO,CAAE2H,WAAY,MAAQ8M,EAASE,YAAmB,IAFjE,2DAGwD,IACtD,0BAAM3U,MAAO,CAAE2H,WAAY,MAAQ8M,EAAShW,UAA5C,MAEF,yBAAKsB,UAAU,kBACb,kBAACgE,EAAA,EAAD,CAAOC,IAAI,wBAAwB4E,MAAM,KAAKC,OAAO,QAEvD,0BAAM9I,UAAU,QAAhB,sCACsC,IACpC,gCAAS0U,EAASjQ,MAFpB,iFAGiD,IAC/C,gCAASiQ,EAAShW,WAJpB,kJAQA,yBAAKsB,UAAU,yBACb,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,0BACVsC,QAAS,WAEPmS,GAAqB,GAErB9S,EDnFX,CACLb,KAAM,qBC4EM,gBAiBV,QAQSyT,MCjGA3V,OAAMC,MAAK,SAACsG,GACzB,IAAMxD,EAAWC,cADkB,EAGP3C,qBAHO,mBAG5BgP,EAH4B,KAGpB4G,EAHoB,KAK7BC,EAAc/V,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UAC3C8G,EAAehW,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAC5CmT,EAAYjW,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QACzC2E,EAAW3V,aAAY,SAACC,GAAD,OAAWA,EAAM0V,YACxC5V,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WATV,EAWSG,oBAAS,GAXlB,mBAW5BuV,EAX4B,KAWdS,EAXc,KAa7BC,EAAc,yCAAG,WAAO5U,GAAP,UAAAgP,EAAA,+EAAauF,EAAUvU,IAAvB,2CAAH,sDA8CpB,OA5CAlB,qBAAU,WACR,IAAM+V,EAAQhQ,EAAM2I,WAAWnB,SAASyI,KAElCA,EAAOD,EAAQE,UAAUF,EAAMG,QAAQ,IAAK,KAAO,KAGrDN,GAAWrT,EjBnBV,CACLb,KAAM,eiBqBF4T,GAAUO,GAAoB,GAE9BnW,GAAS6C,EdhCR,CACLb,KAAM,gBckCFgU,GAAeC,GACjB1V,EAAoByV,EAAY9S,IAAK+S,EAAa/S,KAC/C1C,MAAK,SAACC,GAEL2V,EAAe3V,EAAItB,MAAMqB,MAAK,WAExB8V,GACczP,SAAS4P,eAAeH,GAChCI,oBAKZ7T,EftDD,CACLb,KAAM,iBACN7C,KeqDwC,CAC9B,CAAEqG,KAAM,aAAcD,KAAM,cAC5B,CAAEC,KAAM/E,EAAItB,KAAKwG,YAItBjF,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,8DACNkF,OAAO6H,SAASlM,KAAO,kBAK5B,CAACqU,IAGF,kBAACzO,GAAD,KACE,kBAAC,GAAD,CACEmO,aAAcA,EACdC,qBAAsBQ,IAEvBhH,EACC,oCAEE,kBAAC,GAAD,CACExJ,KAAMwJ,EAAOxJ,KACbgJ,OAAQQ,EAAOR,OAAOY,QAAO,SAACC,EAAKC,GAEjC,OADAD,EAAIE,KAAK,CAAExM,IAAKuM,EAAGvM,IAAK4H,QAAS2E,EAAG3E,QAASnF,KAAM8J,EAAG9J,OAC/C6J,IACN,IACH+B,QAASpC,EAAOoC,QAChB7R,SAAUyP,EAAOjM,MAGnB,yBAAK/B,MAAO,CAAEwV,cAAe,UAC1BxH,EAAOR,OAAOpN,KAAI,SAACmP,GAAD,OACjB,kBAAC,IAAM+D,SAAP,CAAgB/S,IAAKgP,EAAGxN,KACtB,wBAAIhC,UAAU,sBACd,yBAAKA,UAAU,gBACb,kBAACoD,EAAA,EAAD,KACE,kBAAC,GAAD,CAAOiM,WAAYpB,EAAOxJ,KAAMuP,MAAOxE,YAQnD,yBAAKxP,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,iBCtGxCuT,GAAQ9W,IAAMC,MAAK,WACvB,IAAMgD,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WACvCkO,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QAFb,EAIS9Q,mBAAyB,GAAhB8Q,EAAKiD,SAAgB,IAJvC,mBAItB2C,EAJsB,KAITC,EAJS,OAKS3W,mBAAS8Q,EAAKiD,UALvB,mBAKtB6C,EALsB,KAKTC,EALS,KA4B7B,OArBA1W,qBAAU,WACHuW,EAAc,GAAM,MAAQ,GAAGG,EAAeD,EAAc,GAE7C,IAAhBF,IAEFtW,EAAoB,CAAEd,UAAWsD,EAAQG,IAAKvD,OAAQsR,EAAK/N,MACxD1C,MAAK,SAACC,GAAD,OAASG,QAAQC,IAAIJ,EAAItB,SAC9BuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAEvCG,MAAM,4BAENkF,OAAO6H,SAASlM,KAAO,WAGzBsV,YAAW,WACTH,EAAeD,EAAc,KAC5B,OAGF,CAACA,IAGF,yBAAK3V,UAAU,sBAAsBD,MAAM,mBACzC,uBAAGC,UAAU,0BACb,gCACG6V,EAAc,EAAIA,EAAc,QAAUF,EAAc,aAMlDD,MCvCTM,GAAepX,IAAMC,MAAK,YAAuB,IAApBoX,EAAmB,EAAnBA,aACjC,OACE,wBAAIjW,UAAU,aACZ,0BAAMA,UAAU,cAAciW,OASrBD,MCXTE,GAAwBtX,IAAMC,MAAK,YAAgC,IAA7BiC,EAA4B,EAA5BA,KAAMwD,EAAsB,EAAtBA,KAAM6R,EAAgB,EAAhBA,UACtD,MAAgB,SAATrV,EACL,4BACE,0BAAMd,UAAU,cAAcsE,IAErB,UAATxD,EACF,kBAACkD,EAAA,EAAD,CAAOC,IAAKkS,EAAWnW,UAAU,OAAO6I,MAAM,MAAMC,OAAO,MAAMsN,SAAO,IACtE,QASSF,MChBTG,GAAiBzX,IAAMC,MAC3B,YAMO,IALLiC,EAKI,EALJA,KACAwV,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,2BACAC,EACI,EADJA,eAEA,MAAgB,SAAT3V,EACL,yBAAKd,UAAU,QACZsW,EAAYjW,KAAI,SAACC,GAAD,OACf,kBAACuG,GAAA,EAAD,CACErG,IAAKF,EACL6B,QAAQ,oBACRnC,UAAU,oBACV0W,OAAQD,IAAmBnW,EAC3BgC,QAAS,kBAAMkU,EAA2BlW,KAEzCA,OAII,UAATQ,EACF,yBAAKd,UAAU,QACZuW,EAAalW,KAAI,SAACC,GAAD,OAChB,kBAACuG,GAAA,EAAD,CACErG,IAAKF,EACL6B,QAAQ,oBACRnC,UAAU,mBACV0W,OAAQD,IAAmBnW,EAC3BgC,QAAS,kBAAMkU,EAA2BlW,KAE1C,kBAAC0D,EAAA,EAAD,CAAOC,IAAK3D,SAIhB,QAYO+V,M,UChDTM,GAAW/X,IAAMC,MAAK,YAAyB,IAAtB+X,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACtC,OACE,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACR/K,IAAI,IACJgL,IAAKH,EACL1U,QAAQ,UACRlC,MAAO,CAAE6I,OAAQ,UACjBmO,IAAKL,EACL7W,MAAM,SACNC,UAAU,uBAWD2W,MCrBTO,GAAatY,IAAMC,MAAK,YAAc,IAAXsY,EAAU,EAAVA,IAAU,EACjBlY,oBAAS,GADQ,mBAClC4S,EADkC,KAC5BC,EAD4B,KAGnCC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACEC,KAAK,KACL3E,QAAQ,SACRnC,UAAU,YACVsC,QARa,kBAAMwP,GAAQ,KAI7B,aASA,kBAACE,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,EAAaqF,UAAQ,EAACpX,UAAU,YACzD,kBAACgS,GAAA,EAAMrG,OAAP,CAAc0L,aAAW,GACvB,kBAACrF,GAAA,EAAM1K,MAAP,KACE,uBAAGtH,UAAU,qCADf,gBAKF,kBAACgS,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,0BAAMA,UAAU,QAAhB,oHAIA,yBAAKA,UAAU,+CACb,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,SACRG,QAAS,kBAAOwC,OAAO6H,SAASlM,KAAO0W,IAFzC,aAMA,kBAACtQ,GAAA,EAAD,CAAQ1E,QAAQ,OAAOnC,UAAU,OAAOsC,QAASyP,GAAjD,2BAcGmF,MC9CTI,GAAc1Y,IAAMC,MAAK,YAAmB,IAAhB2M,EAAe,EAAfA,SAAe,EACvBvM,oBAAS,GADc,mBACxC4S,EADwC,KAClCC,EADkC,KAGzCC,EAAc,kBAAMD,GAAQ,IAG5BjQ,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WANE,EAOnB9C,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QAAjDrR,EAPuC,EAOvCA,UAAW+F,EAP4B,EAO5BA,KAEbgF,EAAYC,KAAW,CAC3BG,KAAMH,OAAaC,SAAS,eAG9B,OAAO9H,EACL,oCACE,kBAACgF,GAAA,EAAD,CACE1E,QAAQ,OACR2E,KAAK,KACL9G,UAAU,yBACVsC,QAfa,kBAAMwP,GAAQ,KAiB3B,uBAAG9R,UAAU,4BAGf,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMoC,SAAS,SAASC,UAAU,GAC7C,kBAAClC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,2BACpB,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,wBACA,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,oBACVmC,QAAQ,OACR2E,KAAK,KACL/G,MAAM,SACNuC,QAASyP,GAET,uBAAG/R,UAAU,eAAeC,MAAO,CAAEC,SAAU,YAGnD,0BAAMF,UAAU,QAAhB,wCACqC6B,EAAQ4C,KAD7C,KAGA,0BAAMzE,UAAU,QAAhB,yEAIA,0BAAMA,UAAU,QAAhB,6HAMF,kBAAC,KAAD,CACE8J,cAAe,CACbD,KAAM,IAERE,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACdD,EAAO7H,MAAQP,EAAQO,MAEvB,IAAMmN,EAAc/D,EAAS+L,sBACe,SAAxC/L,EAAS+L,sBAAsBzW,KAC7B,UAAG0K,EAASyK,aAAZ,YAA4BzK,EAAS+L,sBAAsBjT,MAAOkT,OAClE,UAAGhM,EAASyK,aAAZ,cAA8BzK,EAAS+L,sBAAsBpB,WAAYqB,OAC3E,GAEJvN,EAAOL,QAAP,UAAoBlL,EAApB,cAAmC+F,EAAnC,cAA6C8K,GAE7CtF,EAAOE,OAAS,WAChBF,EAAO3L,SAAWuD,EAAQvD,SAC1B2L,EAAOxF,KAAO5C,EAAQ4C,KAAO,IAAM5C,EAAQ6C,aAC3CrF,EAAgB4K,GACb3K,MAAK,WACJM,MACE,oJAEFmS,OAEDvS,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKsH,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,OACLsG,MAAOd,EAAOJ,KACdmB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQR,OAASO,EAAOP,KACjCsB,UAAWd,EAAQR,QAAUO,EAAOP,OAEtC,kBAAC,KAAD,CACE7J,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAACvE,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLd,UAAU,YACVG,SAAUsK,GAJZ,iBAcV,QAOS6M,MCrITG,GAAqB7Y,IAAMC,MAAK,YAAoB,IAAjB6Y,EAAgB,EAAhBA,UACjC/V,EAAWC,cAEXmO,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QAHa,EAK3B9Q,mBAAS,GALkB,mBAKhD0Y,EALgD,KAKxCC,EALwC,OAMvB3Y,qBANuB,mBAMhDuM,EANgD,KAMtCqM,EANsC,OAOzB5Y,mBAAS,IAPgB,mBAOhD6Y,EAPgD,KAOvCC,EAPuC,OAU3B9Y,qBAV2B,mBAUhD+Y,EAVgD,KAUxCC,EAVwC,KAavD7Y,qBAAU,WAEJuY,GAAUD,EAAUtX,QACtByX,EAAYH,EAAUQ,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAYT,KAAQ,IAGxDA,EAASD,EAAUtX,SAErBuB,EzB1BG,CACLb,KAAM,kBACN7C,KyBwBkC6Z,IAEhChT,OAAO6H,SAASlM,KAAO,0BAExB,CAACkB,EAAUgW,EAAQG,EAASJ,EAAWM,IAE1C,IAAMK,EAAe,WAEnB,IASI3F,EATE4F,EAAiB9M,EAAS+M,gBAAgBlK,QAAO,SAACC,EAAKC,GAE3D,OADAD,EAAIE,KAAKD,EAAG9C,QACL6C,IACN,IAOH,KAJyB9C,EAASgN,gBAOhC9F,EAAM,CACJ1Q,IAAKwJ,EAASxJ,IACdoW,QAAS5M,EAAS4M,QAClBnC,aAAczK,EAASyK,aACvBsB,sBAAuB/L,EAAS+L,sBAChCiB,gBAAiBhN,EAASgN,gBAC1BC,YACoC,SAAlCjN,EAASgN,gBAAgB1X,KACrB,CAAEA,KAAM,OAAQ2K,OAAQuM,GACxB,CAAElX,KAAM,QAAS2K,OAAQuM,GAC/BO,gBACoC,SAAlC/M,EAASgN,gBAAgB1X,KACrB,CAAEA,KAAM,OAAQ2K,OAAQ6M,EAAeI,YACvC,CAAE5X,KAAM,QAAS2K,OAAQ6M,EAAeI,iBAE3C,CAIL,IAFA,IAAMC,EAAkBnN,EAAS+M,gBAAgBnY,OAC3CqY,EAAc,GACXG,EAAI,EAAGA,EAAID,EAAiBC,IAAK,CACxC,IAAItJ,EAAI3J,SAAS4P,eAAe,SAAWqD,GAAG7N,MAC9C0N,EAAYjK,KAAKc,EAAEkI,QAGrB9E,EAAM,CACJ1Q,IAAKwJ,EAASxJ,IACdoW,QAAS5M,EAAS4M,QAClBnC,aAAczK,EAASyK,aACvBsB,sBAAuB/L,EAAS+L,sBAChCiB,gBAAiBhN,EAASgN,gBAC1BC,YAAa,CAAE3X,KAAM,OAAQ2K,OAAQgN,EAAYC,YACjDH,gBAAiB,CAAEzX,KAAM,OAAQ2K,OAAQ6M,EAAeI,aAK5DX,EAAW,GAAD,oBAAKD,GAAL,CAAcpF,KAGxBuF,IACAL,EAAUD,EAAS,IAGfkB,EAAgB,SAAChT,GACP,UAAVA,EAAErF,KAAiB6X,KAGzB,OAAO7M,EACLmM,EAASD,EAAUtX,OACjB,yBAAKJ,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,aAGtC,oCAEE,kBAACiB,EAAA,EAAD,CAAWpD,UAAU,QACnB,yBAAKC,MAAO,CAAEmG,gBAAiB,YAC7B,kBAAC,GAAD,CAAUwQ,QAASe,EAAQd,MAAOa,EAAUtX,SAC5C,kBAACgD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CACEyF,GAAI,CAAEtC,KAAM,EAAGD,OAAQ,GACvBzG,UAAU,OACVC,MAAO,CAAEiO,WAAY,OAAQuH,cAAe,SAG5C,kBAAC,GAAD,CACE2C,QAAS5M,EAAS4M,QAClBnC,aAAczK,EAASyK,eAIxBzK,EAAS+L,sBACR,kBAAC,GAAD,CACEzW,KAAM0K,EAAS+L,sBAAsBzW,KACrCwD,KAAMkH,EAAS+L,sBAAsBjT,KACrC6R,UAAW3K,EAAS+L,sBAAsBpB,YAE1C,KAGH3K,EAASgN,gBACR,kBAACM,GAAD,CACEhY,KAAM0K,EAASgN,gBAAgB1X,KAC/BwV,YAAa9K,EAASgN,gBAAgBlC,YACtCC,aAAc/K,EAASgN,gBAAgBjC,aACvCE,eAAgBuB,EAChBxB,2BAtHe,SAACzL,GAAD,OAAWkN,EAAUlN,MAyHtCS,EAAS+M,gBAAgBlY,KAAI,SAAC0Y,EAAI3G,GAAL,OAC3B,yBAAK5R,IAAKuY,EAAG/W,IAAKhC,UAAU,6BAEzB+Y,EAAGC,eACF,wBAAIhZ,UAAU,aACZ,+BAAQ+Y,EAAGC,iBAEX,KAEJ,2BACElY,KAAK,OACLgK,UAAU,KAEVmO,UAAWJ,EACX7Y,UAAU,sBACVF,GAAI,SAAWsS,IAGhB2G,EAAGG,gBACF,wBAAIlZ,UAAU,aACZ,+BAAQ+Y,EAAGG,kBAEX,SAMT1N,EAAS2N,SACR,0BAAMnZ,UAAU,mBAAmBwL,EAAS2N,UAC1C,KAGJ,yBAAKnZ,UAAU,QACb,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,0BACVsC,QAAS+V,GAERV,IAAWD,EAAUtX,OAAS,YAAc,mBAS3D,kBAACgD,EAAA,EAAD,KACE,yBAAKpD,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAawL,SAAUA,IACvB,kBAAC,GAAD,CAAY2L,IAAK,YAAcpH,EAAKrR,eAK1C,QAOS+Y,MCtMT2B,I,OAAOxa,IAAMC,MAAK,WACtB,IAAM8C,EAAWC,cADW,EAGJ3C,qBAHI,mBAGrB8Q,EAHqB,KAGfF,EAHe,KAKtB5B,EAASlP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UACtC+G,EAAYjW,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QAwB/C,OAtBA3Q,qBAAU,WACJ6O,GAAU+G,EACZ3V,EAAkB2V,EAAUhT,KACzB1C,MAAK,SAACC,GAELoC,ExBfD,CACLb,KAAM,qBwBgBAa,EvBxBD,CACLb,KAAM,euByBA+O,EAAQtQ,EAAItB,SAEbuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,+DAGVkF,OAAO6H,SAASlM,KAAO,YAIxB,IAGD,kBAAC4F,GAAD,KACG0J,EACC,oCAEE,kBAAC3M,EAAA,EAAD,KACE,wBAAIpD,UAAU,sBAAsB+P,EAAKtL,OAG3C,kBAAC,GAAD,CAAoBiT,UAAW3H,EAAK2H,YACpC,6BACA,8BAGF,yBAAK1X,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,kBAO/BiX,MCzDTC,I,OAAYza,IAAMC,MAAK,YAAgB,IAAbya,EAAY,EAAZA,MAC9B,OAAOA,GAAS,GAEd,yBAAKtZ,UAAU,oBACZsZ,EAAQ,KAAO,GACd,6BACE,wBAAItZ,UAAU,WAAd,iCACA,+EAGF,6BACE,wBAAIA,UAAU,WAAd,4BACA,mDAIJ,yBAAKA,UAAU,QACZsZ,EAAQ,KAAO,GACd,kBAACtV,EAAA,EAAD,CAAOC,IAAI,oBAAoB4E,MAAM,MAAMC,OAAO,QAChD,OAKR,yBAAK9I,UAAU,oBAEb,6BACE,wBAAIA,UAAU,WAAd,qBACA,gFAGF,yBAAKA,UAAU,QACb,kBAACgE,EAAA,EAAD,CAAOC,IAAI,sBAAsB4E,MAAM,MAAMC,OAAO,cAU7CuQ,MCNAE,I,OApCD3a,IAAMC,MAAK,YAAmC,IAAhC2a,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC3C,OACE,oCACE,wBAAI1Z,UAAU,QAAd,4BAEA,yBACEA,UAAU,uEACVF,GAAG,kBAEH,wBAAIE,UAAU,OAAOC,MAAO,CAAEC,SAAU,SACrCsZ,EAAQ,KAIb,kBAAC5V,EAAA,EAAD,CAAK5D,UAAU,QACb,kBAACuD,EAAA,EAAD,CAAKvD,UAAU,mBACb,4BAAQA,UAAU,cAAlB,YACA,wBAAIA,UAAU,OAAOC,MAAO,CAAEC,SAAU,SACrCuZ,IAGL,kBAAClW,EAAA,EAAD,CAAKvD,UAAU,mBACb,4BAAQA,UAAU,cAAlB,WACA,wBAAIA,UAAU,OAAOC,MAAO,CAAEC,SAAU,SACrCwZ,U,oBC4EEC,GA9FK/a,IAAMC,MACxB,YAA4E,IAAzEoX,EAAwE,EAAxEA,aAAcsB,EAA0D,EAA1DA,sBAAuBkB,EAAmC,EAAnCA,YAAaF,EAAsB,EAAtBA,gBAC7CqB,EACJ,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAQvS,MAAT,CACEhE,GAAG,KACHtD,UAAU,aACVC,MAAO,CAAEmG,gBAAiB,YAH5B,sBAOA,kBAACyT,GAAA,EAAQzR,QAAT,CAAiB9E,GAAG,MACQ,SAAzBiV,EAAgBzX,KACf,8BAAOyX,EAAgB9M,QAEvB,yBAAKzL,UAAU,eACb,kBAACgE,EAAA,EAAD,CACEC,IAAKsU,EAAgB9M,OACrBzL,UAAU,OACV6I,MAAM,KACNC,OAAO,KACPsN,SAAO,OAQnB,OACE,kBAAC7F,GAAA,EAAD,CAAgBE,UAAU,MAAMqJ,QAAQ,QAAQpJ,QAASkJ,GACvD,kBAACG,GAAA,EAAD,CACE/Z,UAAU,YACVmC,QAAQ,SACRlC,MAAO,CAAE+Z,OAAQ,WACjBja,MAAM,wCAEN,kBAAC6D,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,gCACE,uBAAGvD,UAAU,sBADf,cAIA,6BACA,0BAAMA,UAAU,cAAciW,GAC7BsB,EACgC,SAA/BA,EAAsBzW,KACpB,oCACE,6BACA,0BAAMd,UAAU,QAAQuX,EAAsBjT,OAGhD,oCACE,6BACA,kBAACN,EAAA,EAAD,CACEC,IAAKsT,EAAsBpB,UAC3BnW,UAAU,OACV6I,MAAM,MACNC,OAAO,MACPsN,SAAO,KAIX,KAEJ,6BACA,4BAAQpW,UAAU,QAAlB,iBACA,6BACsB,SAArByY,EAAY3X,KACX,8BAAO2X,EAAYhN,QAEnB,kBAACzH,EAAA,EAAD,CACEC,IAAKwU,EAAYhN,OACjBzL,UAAU,OACV6I,MAAM,KACNC,OAAO,KACPsN,SAAO,WCjBV6D,GAjEGrb,IAAMC,MAAK,YAAkB,IAAfqb,EAAc,EAAdA,QAC9B,OACE,yBAAKla,UAAU,QACb,wBAAIA,UAAU,QAAd,4BACCka,EAAQ7Z,KAAI,SAAC8X,GACZ,OAAOA,EAAEI,gBAAgB9M,SAAW0M,EAAEM,YAAYhN,OAChD,kBAACsO,GAAA,EAAD,CAAO/Z,UAAU,YAAYQ,IAAK2X,EAAEnW,IAAKG,QAAQ,WAC/C,kBAACyB,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,gCACE,uBAAGvD,UAAU,sBADf,YAKA,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,mBAAmBmY,EAAElC,cACpCkC,EAAEZ,sBACgC,SAAjCY,EAAEZ,sBAAsBzW,KACtB,8BAAOqX,EAAEZ,sBAAsBjT,MAE/B,kBAACN,EAAA,EAAD,CACEC,IAAKkU,EAAEZ,sBAAsBpB,UAC7BtN,MAAM,MACNC,OAAO,MACPsN,SAAO,IAGT,MAGN,yBAAKpW,UAAU,sBACb,4BAAQA,UAAU,QAAlB,iBACwB,SAAvBmY,EAAEM,YAAY3X,KACb,8BAAOqX,EAAEM,YAAYhN,QAErB,kBAACzH,EAAA,EAAD,CACEC,IAAKkU,EAAEM,YAAYhN,OACnBzL,UAAU,OACV6I,MAAM,KACNC,OAAO,KACPsN,SAAO,QAQnB,kBAAC,GAAD,CACE5V,IAAK2X,EAAEnW,IACPiU,aAAckC,EAAElC,aAChBsB,sBAAuBY,EAAEZ,sBACzBkB,YAAaN,EAAEM,YACfF,gBAAiBJ,EAAEI,yBC8DhB4B,GA9GCvb,IAAMC,MAAK,WACzB,IAAM8C,EAAWC,cAEXmO,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QACpClO,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WAEvC4X,EAAW1J,EAAKmK,QAAQ7L,QAAO,SAACC,EAAKC,GAEzC,OADIA,EAAGgK,gBAAgB9M,SAAW8C,EAAGkK,YAAYhN,QAAQ6C,IAClDA,IACN,GAEGoL,EAAU3J,EAAKmK,QAAQ7L,QAAO,SAACC,EAAKC,GAExC,OADIA,EAAGgK,gBAAgB9M,SAAW8C,EAAGkK,YAAYhN,QAAQ6C,IAClDA,IACN,GAEGgL,EAAQc,KAAKC,MAAOZ,EAAW1J,EAAKmK,QAAQ9Z,OAAU,KA8D5D,OA5DAhB,qBAAU,WAERC,EAAoB,CAClBd,UAAWsD,EAAQG,IACnBvD,OAAQsR,EAAK/N,IACbwX,MAAOF,EAAQ,KAEdha,MAAK,SAACC,GAAD,OAASG,QAAQC,IAAIJ,EAAItB,SAC9BuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAGnC6Z,EAAQ,KAAO,IACjBja,EAAyB,CAAEd,UAAWsD,EAAQG,IAAKvD,OAAQsR,EAAK/N,MAC7D1C,MAAK,SAACC,GAAD,OAASG,QAAQC,IAAIJ,EAAItB,SAC9BuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAIjB,aAApBsQ,EAAKgB,YAA6BuI,EAAQ,IAAM,GAClDja,EAAmB,CACjBd,UAAWsD,EAAQG,IACnBuQ,QAASxC,EAAKwC,QACd9N,KAAMsL,EAAKoD,OAAO1O,KAClBJ,KAAM0L,EAAKoD,OAAO9O,OAEjB/E,MAAK,SAACC,GAAD,OAASG,QAAQC,IAAIJ,EAAItB,SAC9BuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAIjB,aAApBsQ,EAAKgB,YAA6BuI,EAAQ,IAAM,GAClDja,EAAe,CACbd,UAAWsD,EAAQG,IACnB+O,WAAYhB,EAAKgB,aAEhBzR,MAAK,SAACC,GAGDA,EAAItB,MAAM0D,EAAS2S,GAAW/U,EAAItB,UAEvCuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAKjB,aAApBsQ,EAAKgB,YAA6BuI,EAAQ,IAAM,GAClD3X,EACE2S,GAAW,CACT7P,KAAM,wBACNsM,WAAY,YACZrS,UAAWqR,EAAKrR,UAChBiW,WAAY5E,EAAKoD,OAAO9O,KACxBuQ,WAAY7E,EAAKoD,OAAO1O,UAM7B,IAEIsL,EAAKmK,QACV,kBAAC7T,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAWnD,MAAO,CAAEwV,cAAe,SACjC,kBAAC7R,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAE1B,kBAAC,GAAD,CAAO8S,MAAOF,EAAOG,SAAUA,EAAUC,QAASA,IAElD,6BACA,kBAAC,GAAD,CAAWJ,MAAOA,IAElB,6BACA,kBAAC,GAAD,CAAWY,QAASnK,EAAKmK,UAEzB,kBAACrT,GAAA,EAAD,CACEpG,KAAM,YAAcsP,EAAKrR,UACzBsB,UAAU,iBAEV,uBAAGA,UAAU,2BAJf,gBAYR,yBAAKA,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,gBCzD3BmY,GArDQ1b,IAAMC,MAAK,YAAgB,IAAbwT,EAAY,EAAZA,MAC7BxQ,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WACvCkO,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QACpC9B,EAASlP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UAHG,EAKThP,mBAAyB,GAAhB8Q,EAAKiD,SAAgB,IALrB,mBAKxC2C,EALwC,KAK3BC,EAL2B,OAMT3W,mBAAS8Q,EAAKiD,UANL,mBAMxC6C,EANwC,KAM3BC,EAN2B,KAuC/C,OA/BA1W,qBAAU,WACHuW,EAAc,GAAM,MAAQ,GAAGG,EAAeD,EAAc,GAE7C,IAAhBF,GAEFtW,EAA6B,CAC3Bb,SAAUyP,EAAOjM,IACjBtD,UAAWqR,EAAKrR,UAChBH,UAAWsD,EAAQG,IACnB1D,SAAUuD,EAAQvD,SAClB+T,MAAOA,IAEN/S,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAEhB2B,MACE,4DAA2DyS,GAG7DvN,OAAO6H,SAASlM,KAAO,YAAcsP,EAAKrR,aAE3Cc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAGzCsW,YAAW,WACTH,EAAeD,EAAc,KAC5B,OAGF,CAACA,IAGF,yBAAK3V,UAAU,sBAAsBD,MAAM,mBACzC,uBAAGC,UAAU,0BACb,gCACG6V,EAAc,EAAIA,EAAc,QAAUF,EAAc,aC/BlD4E,GAdU3b,IAAMC,MAAK,YAAgB,IAAbwT,EAAY,EAAZA,MACrC,OACE,yBAAKtS,MAAM,SAASC,UAAU,YAAYC,MAAO,CAAEuD,MAAO,YACxD,uBAAGxD,UAAU,kBACb,4BAAQA,UAAU,QAAQqS,GAC1B,4BAAQrS,UAAU,QAAlB,YC4BSwa,GAhCM5b,IAAMC,MAAK,YAA8C,IAA3C4b,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAM9D,OALAvb,qBAAU,WAEJqb,GAAa1E,YAAW,kBAAM2E,GAAe,KAAQ,OACxD,CAACD,EAAaC,IAGf,oCACE,kBAAC1I,GAAA,EAAD,CAAOH,KAAM4I,EAAarD,UAAQ,EAACtQ,KAAK,MACtC,kBAACkL,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,OACpB,yBAAKA,UAAU,uCACb,wBAAIA,UAAU,wBACZ,uBAAGA,UAAU,yBAEf,wBAAIA,UAAU,cAAd,YACA,wBAAIA,UAAU,gBACX,IAAM2a,EACP,0BAAM3a,UAAU,QAAQ2a,EAAS,EAAI,SAAW,iBCU/CC,GA3BQhc,IAAMC,MAAK,YAA0C,IAAvCgc,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAMlD,OALA1b,qBAAU,WAEJyb,GAAe9E,YAAW,kBAAM+E,GAAiB,KAAQ,OAC5D,CAACD,EAAeC,IAGjB,oCACE,kBAAC9I,GAAA,EAAD,CAAOH,KAAMgJ,EAAezD,UAAQ,EAACtQ,KAAK,MACxC,kBAACkL,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,OACpB,yBAAKA,UAAU,sCACb,wBAAIA,UAAU,wBACZ,uBAAGA,UAAU,yBAEf,wBAAIA,UAAU,cAAd,qBCoPG+a,GAvPYnc,IAAMC,MAAK,YAAoB,IAAjB6Y,EAAgB,EAAhBA,UACjC/V,EAAWC,cAEXC,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WACvCkO,EAAOhR,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QACpC9B,EAASlP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UALW,EAO3BhP,mBAAS,GAPkB,mBAOhD0Y,EAPgD,KAOxCC,EAPwC,OAQvB3Y,qBARuB,mBAQhDuM,EARgD,KAQtCqM,EARsC,OASzB5Y,mBAAS,IATgB,mBAShD6Y,EATgD,KASvCC,EATuC,OAW7B9Y,mBAAS,GAXoB,mBAWhDoT,EAXgD,KAWzC2I,EAXyC,OAajB/b,oBAAS,GAbQ,mBAahDwb,EAbgD,KAanCC,EAbmC,OAcbzb,oBAAS,GAdI,mBAchD4b,EAdgD,KAcjCC,EAdiC,OAiB3B7b,qBAjB2B,mBAiBhD+Y,EAjBgD,KAiBxCC,EAjBwC,KAoBvD7Y,qBAAU,WAEJuY,GAAUD,EAAUtX,QACtByX,EAAYH,EAAUQ,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAYT,KAAQ,IAGxDA,EAASD,EAAUtX,QAErBf,EAA6B,CAC3Bb,SAAUyP,EAAOjM,IACjBuQ,QAASxC,EAAKwC,QACdhU,UAAWsD,EAAQG,IACnB1D,SAAUuD,EAAQvD,SAClB+T,MAAOA,IAEN/S,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAEhB2B,MACE,4EACEyS,GAGJvN,OAAO6H,SAASlM,KAAO,YAAcsP,EAAKrR,aAE3Cc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,QAIxC,CAACkC,EAAUgW,EAAQG,EAASJ,EAAWM,IAE1C,IAAMK,EAAe,WAEnB,IASI3F,EATE4F,EAAiB9M,EAAS+M,gBAAgBlK,QAAO,SAACC,EAAKC,GAE3D,OADAD,EAAIE,KAAKD,EAAG9C,QACL6C,IACN,IAOH,KAJyB9C,EAASgN,gBAMhC9F,EAAM,CACJ1Q,IAAKwJ,EAASxJ,IACdoW,QAAS5M,EAAS4M,QAClBnC,aAAczK,EAASyK,aACvBsB,sBAAuB/L,EAAS+L,sBAChCiB,gBAAiBhN,EAASgN,gBAC1BC,YACoC,SAAlCjN,EAASgN,gBAAgB1X,KACrB,CAAEA,KAAM,OAAQ2K,OAAQuM,GACxB,CAAElX,KAAM,QAAS2K,OAAQuM,GAC/BO,gBACoC,SAAlC/M,EAASgN,gBAAgB1X,KACrB,CAAEA,KAAM,OAAQ2K,OAAQ6M,EAAeI,YACvC,CAAE5X,KAAM,QAAS2K,OAAQ6M,EAAeI,iBAE3C,CAIL,IAFA,IAAMC,EAAkBnN,EAAS+M,gBAAgBnY,OAC3CqY,EAAc,GACXG,EAAI,EAAGA,EAAID,EAAiBC,IAAK,CACxC,IAAItJ,EAAI3J,SAAS4P,eAAe,SAAWqD,GAAG7N,MAC9C0N,EAAYjK,KAAKc,EAAEkI,QAGrB9E,EAAM,CACJ1Q,IAAKwJ,EAASxJ,IACdoW,QAAS5M,EAAS4M,QAClBnC,aAAczK,EAASyK,aACvBsB,sBAAuB/L,EAAS+L,sBAChCiB,gBAAiBhN,EAASgN,gBAC1BC,YAAa,CAAE3X,KAAM,OAAQ2K,OAAQgN,EAAYC,YACjDH,gBAAiB,CAAEzX,KAAM,OAAQ2K,OAAQ6M,EAAeI,aAKxDhG,EAAI+F,YAAYhN,SAAWiH,EAAI6F,gBAAgB9M,QACjDiP,GAAe,GACfM,EAAS3I,EAAQ7G,EAASmP,SAE1BG,GAAiB,GAInB/C,EAAW,GAAD,oBAAKD,GAAL,CAAcpF,KAGxBqD,YAAW,WACTkC,IACAL,EAAUD,EAAS,KAClB,MAGCkB,EAAgB,SAAChT,GACP,UAAVA,EAAErF,KAAiB6X,KAGzB,OAAO7M,EACLmM,EAASD,EAAUtX,OACjB,yBAAKJ,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,aAGtC,oCAEE,kBAACiB,EAAA,EAAD,CAAWpD,UAAU,QACnB,yBAAKC,MAAO,CAAEmG,gBAAiB,YAC7B,kBAAChD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CAAK5D,UAAU,mBACb,kBAACuD,EAAA,EAAD,CACEyF,GAAI,CAAEtC,KAAM,EAAGD,OAAQ,GACvBzG,UAAU,OACVC,MAAO,CAAEiO,WAAY,OAAQuH,cAAe,SAG5C,4BAAQzV,UAAU,cACfwL,EAASmP,OACV,0BAAM3a,UAAU,QACbwL,EAASmP,OAAS,EAAI,SAAW,UAKtC,kBAAC,GAAD,CAAc1E,aAAczK,EAASyK,eAGpCzK,EAAS+L,sBACR,kBAAC,GAAD,CACEzW,KAAM0K,EAAS+L,sBAAsBzW,KACrCwD,KAAMkH,EAAS+L,sBAAsBjT,KACrC6R,UAAW3K,EAAS+L,sBAAsBpB,YAE1C,KAGH3K,EAASgN,gBACR,kBAACM,GAAD,CACEhY,KAAM0K,EAASgN,gBAAgB1X,KAC/BwV,YAAa9K,EAASgN,gBAAgBlC,YACtCC,aAAc/K,EAASgN,gBAAgBjC,aACvCE,eAAgBuB,EAChBxB,2BApJe,SAACzL,GAAD,OAAWkN,EAAUlN,MAuJtCS,EAAS+M,gBAAgBlY,KAAI,SAAC0Y,EAAI3G,GAAL,OAC3B,yBAAK5R,IAAKuY,EAAG/W,IAAKhC,UAAU,6BAEzB+Y,EAAGkC,YAA+B,SAAjBlC,EAAGtI,UACnB,wBAAIzQ,UAAU,aACZ,+BAAQ+Y,EAAGkC,aAEX,KAEJ,2BACEna,KAAK,OACLgK,UAAU,KAEVmO,UAAWJ,EACX7Y,UAAU,sBACVF,GAAI,SAAWsS,IAGhB2G,EAAGkC,YAA+B,UAAjBlC,EAAGtI,UACnB,wBAAIzQ,UAAU,aACZ,+BAAQ+Y,EAAGkC,aAEX,SAMTzP,EAAS2N,SACR,2BAAOnZ,UAAU,mBACdwL,EAAS2N,UAEV,KAGJ,yBAAKnZ,UAAU,QACb,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,0BACVsC,QAAS+V,GAERV,IAAWD,EAAUtX,OAAS,YAAc,mBAS3D,kBAACgD,EAAA,EAAD,KACE,yBAAKpD,UAAU,eACb,kBAAC,GAAD,CAAgBqS,MAAOA,IACvB,kBAAC,GAAD,CAAkBA,MAAOA,IACzB,yBAAKrS,UAAU,WACb,kBAAC,GAAD,CAAawL,SAAUA,IACvB,kBAAC,GAAD,CAAY2L,IAAK,YAAcpH,EAAKrR,eAK1C,kBAAC,GAAD,CACE+b,YAAaA,EACbC,eAAgBA,EAChBC,OAAQnP,EAASmP,SAEnB,kBAAC,GAAD,CACEE,cAAeA,EACfC,iBAAkBA,KAItB,QClMSI,GApDGtc,IAAMC,MAAK,WAC3B,IAAM8C,EAAWC,cAEXqM,EAASlP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,UACtC+G,EAAYjW,aAAY,SAACC,GAAD,OAAWA,EAAM+Q,QAJd,EAMC9Q,qBAND,mBAM1BuT,EAN0B,KAMf2I,EANe,KA8BjC,OAtBA/b,qBAAU,WACJ6O,GAAU+G,EACZ3V,EAAmB2V,EAAUtW,WAC1BY,MAAK,SAACC,GAELoC,EnCdD,CACLb,KAAM,qBmCeAa,ElCvBD,CACLb,KAAM,ekCwBAqa,EAAa5b,EAAItB,SAElBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,+DAGVkF,OAAO6H,SAASlM,KAAO,YAIxB,IAGD,kBAAC4F,GAAD,KACGmM,EACC,oCAEE,kBAACpP,EAAA,EAAD,KACE,wBAAIpD,UAAU,sBAAd,mBAGF,kBAAC,GAAD,CAAoB0X,UAAWlF,IAC/B,6BACA,8BAGF,yBAAKxS,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,iBC4B/BiZ,I,OA3EIxc,IAAMC,MAAK,YAAmB,IAAhBwc,EAAe,EAAfA,SAC/B,OACE,kBAACnT,GAAA,EAAD,CAAWlI,UAAU,QAClBqb,EAAShb,KAAI,SAACib,GAAD,OACZ,kBAACpT,GAAA,EAAU3H,KAAX,CACEC,IAAK8a,EAAEtZ,IACPhC,UAAU,uEAGV,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,cAAhB,uBACA,4BAAKsb,EAAE1R,UAET,yBAAK5J,UAAU,WACb,4BACGsb,EAAEC,SACD,uBACEvb,UAAU,mCACVD,MAAM,eAGR,uBAAGC,UAAU,8BAA8BD,MAAM,eAMzD,0BAAMC,UAAU,cAAhB,WACA,4BAAKoR,KAAOkK,EAAEE,QAAQnK,OAAO,SAE7B,0BAAMrR,UAAU,mBAAhB,WACA,kBAAC,KAAD,KACE,kBAAC,KAAK2K,MAAN,KACE,kBAAC,KAAKE,QAAN,CACEvH,GAAG,WACHgI,KAAK,IACLwB,YAAawO,EAAEzR,KACf1J,UAAQ,MAKbmb,EAAEC,SACD,oCACE,0BAAMvb,UAAU,mBAAhB,aACA,kBAAC,KAAD,KACE,kBAAC,KAAK2K,MAAN,KACE,kBAAC,KAAKE,QAAN,CACEvH,GAAG,WACHgI,KAAK,IACLwB,YAAawO,EAAEG,SACftb,UAAQ,MAId,yBAAKH,UAAU,cACb,6CAAmBoR,KAAOkK,EAAEI,aAAarK,OAAO,WAIpD,yBAAKrR,UAAU,cACb,gECGC8P,GA/DGlR,IAAMC,MAAK,WAC3B,IAAM8C,EAAWC,cADgB,EAGD3C,qBAHC,mBAG1Boc,EAH0B,KAGhBM,EAHgB,KAK3B9Z,EAAU9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,WACvCsC,EAAapF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,cAC1CrF,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WA8B7C,OA5BAM,qBAAU,WACJ+E,GAAYxC,ErCXX,CACLb,KAAM,qBqCYFhC,GAAS6C,EpCdR,CACLb,KAAM,gBoCeNzB,EAAkBwC,EAAQvD,UACvBgB,MAAK,SAACC,GACLoc,EAAYpc,EAAItB,SAGjBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,0BAGVP,EAAwBwC,EAAQG,KAC7B1C,MAAK,WAEJI,QAAQC,IAAI,uDAEbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAIT,CAACiC,EAAQG,MAGV,kBAACqE,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAWpD,UAAU,QAEnB,wBAAIA,UAAU,gBAAd,gBACCqb,EACCA,EAASjb,OACP,kBAAC,GAAD,CAAYib,SAAUA,IAEtB,yBAAKrb,UAAU,cAAcC,MAAO,CAAE0N,UAAW,UAC/C,kBAAC3J,EAAA,EAAD,CAAOC,IAAI,wBAAwBjE,UAAU,aAC7C,wBAAIA,UAAU,eAAeC,MAAO,CAAEuD,MAAO,YAA7C,4CAMJ,yBAAKxD,UAAU,yBACb,kBAACU,EAAA,EAAD,CAASC,UAAU,SAASwB,QAAQ,kBCrDjC,cACb,OACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,aAAaxD,UAAW0E,KAG1C,kBAAC,IAAD,CACEnB,OAAK,EACLC,KAAK,mBACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAY2I,WAAY3I,OAK7C,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,YAAYxD,UAAWwQ,KAGzC,kBAAC,IAAD,CACEjN,OAAK,EACLC,KAAK,UACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAQ2I,WAAY3I,OAIzC,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,eAAexD,UAAWgO,KAC5C,kBAAC,IAAD,CAAOzK,OAAK,EAACC,KAAK,uBAAuBxD,UAAW+O,KAGpD,kBAAC,IAAD,CAAOxL,OAAK,EAACC,KAAK,oBAAoBxD,UAAW8P,KAEjD,kBAAC,IAAD,CAAUnM,KAAK,IAAIC,GAAG,eAGtB,kBAAC,IAAD,CAAO5D,UAAWS,OC1CTgQ,GAFSjd,IAAMkd,cAAc,MCW7BC,GAVMnd,IAAMC,MAAK,WAC9B,OACE,yBAAKmB,UAAU,0DACb,kBAACU,EAAA,EAAD,CAASyB,QAAQ,UAAUxB,UAAU,SAASC,KAAK,UACjD,0BAAMZ,UAAU,WAAhB,oBC2COgc,GA1CQ,SAACC,GAAe,IAC/BC,EAD8B,+MAElCld,MAAQ,CACNmd,WAAY,MAHoB,mEAMb,IAAD,OAClB5Z,EAASC,OAAO4Z,oBAAmB,SAACC,GAClCA,EACI,EAAK5W,SAAS,CAAE0W,WAAYE,EAAO7P,cACnC,EAAKrH,MAAMmH,KACX,EAAK7G,SAAS,CAAE0W,WAAY,UAAW,kBACrC,EAAKhX,MAAMpE,mBAEb,EAAK0E,SAAS,CAAE0W,WAAY,eAdF,+BAmBhC,OAAOlX,KAAKjG,MAAMmd,WAChB,kBAAC,GAAgBG,SAAjB,CAA0BvR,MAAO9F,KAAKjG,MAAMmd,YAC1C,kBAACF,EAAchX,KAAKE,QAGtB,kBAAC,GAAD,UAxB8B,GACPvG,IAAMqd,WAkC7BM,EAAqB,CACzBxb,iBAGF,OAAOyb,aAViB,SAACxd,GACvB,MAAO,CACLsN,KAAMtN,EAAM6C,WAQgB0a,EAAzBC,CAA6CN,IC2BvCO,I,OArEC7d,IAAMC,MAAK,YAAwB,IAArB6d,EAAoB,EAApBA,cAW5B,OACE,kBAACrZ,EAAA,EAAD,CAAKrD,UAAU,2BAA2BF,GAAG,gBAE3C,yBAAKE,UAAU,iCAAiCF,GAAG,sBACjD,0BAAMA,GAAG,aAAT,iBACA,0BAAMA,GAAG,cAAT,cAGF,kBAACuD,EAAA,EAAIK,KAAL,CACE1D,UAAU,eACVS,KAAK,iBACLiW,OAA0B,WAAlBgG,GAER,uBACE1c,UAAU,wBACVC,MAAO,CAAE4I,MAAO,OAAQ8T,UAAW,YAErC,0BAAM3c,UAAU,QAAhB,WAEF,kBAACqD,EAAA,EAAIK,KAAL,CACE1D,UAAU,eACVS,KAAK,kBACLiW,OAA0B,YAAlBgG,GAER,uBACE1c,UAAU,uBACVC,MAAO,CAAE4I,MAAO,OAAQ8T,UAAW,YAErC,0BAAM3c,UAAU,QAAhB,YAEF,kBAACqD,EAAA,EAAIK,KAAL,CACE1D,UAAU,eACVS,KAAK,kBACLiW,OAA0B,aAAlBgG,GAER,uBACE1c,UAAU,4BACVC,MAAO,CAAE4I,MAAO,OAAQ8T,UAAW,YAErC,0BAAM3c,UAAU,QAAhB,aAEF,yBAAKA,UAAU,WACb,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,cACRnC,UAAU,6BACVsC,QAvDO,WACbC,EACGC,OACAC,UACAnD,MAAK,WACJM,MAAM,oBAEPJ,OAAM,SAACkD,GAAD,OAAWhD,QAAQC,IAAI+C,QAkD1B,uBACE1C,UAAU,2BACVC,MAAO,CAAE4I,MAAO,OAAQ8T,UAAW,YAErC,4BAAQ3c,UAAU,QAAlB,gBChBK4c,GA/CMhe,IAAMC,MAAK,YAAmC,IAAhCge,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAU/c,EAAY,EAAZA,MACpD,OACE,yBAAKE,MAAO,CAAEmG,gBAAiB,YAC7B,yBAAKnG,MAAO,CAAE8c,QAAS,aACrB,yBAAK/c,UAAU,4BAA4BC,MAAO,CAAE6I,OAAQ,SAEzDgU,EACC,kBAACjW,GAAA,EAAD,CACE1E,QAAQ,cACRnC,UAAU,iBACVS,KAAMqc,GAEN,uBAAG9c,UAAU,6BALf,YAQE,MAEN,yBACEA,UAAU,4BACVC,MAAO,CACLwV,cAAe,SAIjB,wBAAIzV,UAAU,mBAAmBD,IAElC8c,EACC,yBACE7c,UAAU,qCACVC,MAAO,CACLwV,cAAe,SAGhBoH,GAED,UCAGG,GAjCOpe,IAAMC,MAC1B,YAA4D,IAAzD6d,EAAwD,EAAxDA,cAAeG,EAAyC,EAAzCA,QAAS1W,EAAgC,EAAhCA,SAAUpG,EAAsB,EAAtBA,MAAO+c,EAAe,EAAfA,SAC1C,OACE,yBAAK9c,UAAU,gBAEb,kBAAC,GAAD,CAAS0c,cAAeA,IAExB,yBAAKzc,MAAO,CAAEgd,WAAY,SAAWjd,UAAU,eAE7C,kBAACkd,GAAD,CAAQL,QAASA,EAAS9c,MAAOA,EAAO+c,SAAUA,IAElD,yBACE7c,MAAO,CACL8c,QAAS,cAGV5W,IAGL,kBAAC,GAAD,CAAcf,eAAgB,IAAKI,UAAW,YCvBvC,GAKG,kBAAMzH,IAAMC,IAAI,4BALnB,GAOK,SAACQ,GAAD,OAAcT,IAAMC,IAAI,uBAAyBQ,IAPtD,GAWA,SAACP,GAAD,OAAUF,IAAMG,KAAK,0BAA2BD,IAXhD,GAeO,SAACA,GAAD,OAClBF,IAAMK,IAAI,kCAAmCH,IAhBlC,GAkBS,SAACA,GAAD,OACpBF,IAAMK,IAAI,oCAAqCH,IAnBpC,GAqBS,SAACA,GAAD,OACpBF,IAAMK,IAAI,oCAAqCH,IAtBpC,GAwBQ,SAACA,GAAD,OACnBF,IAAMK,IAAI,mCAAoCH,IAzBnC,GA2Bc,SAACA,GAAD,OACzBF,IAAMK,IAAI,yCAA0CH,IA5BzC,GA8BU,SAACA,GAAD,OACrBF,IAAMK,IAAI,qCAAsCH,IA/BrC,GAqCC,SAACO,EAAU+T,GAAX,OACZxU,IAAMC,IAAI,sBAAwBQ,EAAW,IAAM+T,IAtCxC,GA6CM,SAACtU,GAAD,OACjBF,IAAMK,IAAI,iCAAkCH,IA9CjC,GAgDS,SAACA,GAAD,OACpBF,IAAMK,IAAI,oCAAqCH,IAjDpC,GAmDa,SAACA,GAAD,OACxBF,IAAMK,IAAI,wCAAyCH,IApDxC,GAsDgB,SAACA,GAAD,OAC3BF,IAAMK,IAAI,kCAAmCH,IAvDlC,GA2DD,SAACkf,GAAD,OAAepf,IAAMK,IAAI,yBAA0B+e,IA3DlD,GAiEG,SAAClf,GAAD,OAAUF,IAAMK,IAAI,6BAA8BH,IAjErD,GAmEA,SAACA,GAAD,OAAUF,IAAMK,IAAI,0BAA2BH,IAnE/C,GAyES,SAACA,GAAD,OACpBF,IAAMK,IAAI,iCAAkCH,IA1EjC,GA4EO,SAACA,GAAD,OAAUF,IAAMK,IAAI,+BAAgCH,IA5E3D,GAgFK,SAACA,GAAD,OAAUF,IAAMK,IAAI,8BAA+BH,IAhFxD,GAsFiB,SAACO,EAAU+T,GAAX,OAC5BxU,IAAMC,IAAI,sCAAwCQ,EAAW,IAAM+T,IAvFxD,GA6FF,SAACtU,GAAD,OAAUF,IAAMG,KAAK,uBAAwBD,IA7F3C,GA+FA,SAACQ,GAAD,OAAYV,IAAMC,IAAI,0BAA4BS,IA/FlD,GAiGK,SAACR,GAAD,OAAUF,IAAMK,IAAI,+BAAgCH,IAjGzD,GAmGS,SAACA,GAAD,OACpBF,IAAMK,IAAI,mCAAoCH,IApGnC,GAsGS,SAACA,GAAD,OACpBF,IAAMK,IAAI,mCAAoCH,IAvGnC,GAyGY,SAACA,GAAD,OACvBF,IAAMK,IAAI,sCAAuCH,IA1GtC,GAgHI,kBAAMF,IAAMC,IAAI,6BAhHpB,GAkHc,SAACO,GAAD,OACzBR,IAAMC,IAAI,oCAAsCO,IAnHrC,GAqHU,SAACA,GAAD,OACrBR,IAAMC,IAAI,gCAAkCO,IAtHjC,GAwHG,SAACN,GAAD,OACdF,IAAMK,IAAI,oCAAqCH,IAzHpC,GA2HM,SAACM,GAAD,OACjBR,IAAMC,IAAI,wBAA0BO,IA5HzB,GAkII,kBAAMR,IAAMC,IAAI,6BAlIpB,GAoID,SAACof,GAAD,OAAWrf,IAAMK,IAAI,iCAAmCgf,IApIvD,GAsIC,SAACnf,GAAD,OAAUF,IAAMK,IAAI,+BAAgCH,IAtIrD,GA4IK,SAACA,GAAD,OAAUF,IAAMK,IAAI,gCAAiCH,IA5I1D,GA8IQ,SAACA,GAAD,OACnBF,IAAMG,KAAK,2CAA4CD,IA/I5C,GAiJgB,SAACA,GAAD,OAC3BF,IAAMG,KAAK,2CAA4CD,IAlJ5C,GAoJiB,SAACA,GAAD,OAC5BF,IAAMG,KAAK,4CAA6CD,IArJ7C,GAuJiB,SAACA,GAAD,OAC5BF,IAAMG,KAAK,oDAAqDD,IAxJrD,GA0JsB,SAACA,GAAD,OACjCF,IAAMG,KAAK,iDAAkDD,IC1HlDof,I,OA9BIze,IAAMC,MAAK,YAAsC,IAAnC4F,EAAkC,EAAlCA,KAAMtG,EAA4B,EAA5BA,OAAQ6D,EAAoB,EAApBA,IAAKsb,EAAe,EAAfA,SAClD,OACE,kBAACpV,GAAA,EAAU3H,KAAX,CACE4H,QAAM,EACNnI,UAAU,oDACVS,KAAM,uBAAyBuB,GAE/B,0BAAMhC,UAAU,kBAAkByE,GAClC,8BACE,uBAAGzE,UAAU,+BACZ7B,GAEH,6BACGmf,EACC,kBAACpb,EAAA,EAAD,CAAOC,QAAQ,WAAf,UAEA,kBAACD,EAAA,EAAD,CAAOC,QAAQ,UAAf,mBCsEKob,GApFY3e,IAAMC,MAAK,WAAO,IAAD,EACZI,qBADY,mBACnCC,EADmC,KAC1BC,EAD0B,KAyC1C,OAtCAC,qBAAU,WACRoe,KACGle,MAAK,SAACC,GAEL,IAEMke,EAFale,EAAItB,KAGpBoQ,QAAO,SAACC,EAAKC,GACZ,IAAImP,EACJ,OAAQnP,EAAGpQ,QACT,IAAK,WACHuf,EAAc,EACd,MACF,IAAK,aACHA,EAAc,EACd,MACF,IAAK,eACHA,EAAc,EACd,MACF,IAAK,cACHA,EAAc,EAMlB,OADApP,EAAIE,KAAJ,6BAAcD,GAAd,IAAkBmP,iBACXpP,IACN,IACF8E,MAAK,SAAC9D,EAAGlL,GAAJ,OAAUkL,EAAEoO,YAActZ,EAAEsZ,eAEpCve,EAAWse,MAEZje,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,IAEIV,EACL,kBAACye,GAAD,CAAa5d,MAAM,SAAS2c,cAAc,UACxC,kBAACtZ,EAAA,EAAD,CAAWoD,OAAK,GACd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IACzBxH,EAAQkB,OACP,oCACE,wBAAIJ,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YAArC,0BAGA,kBAAC0E,GAAA,EAAD,KACGhJ,EAAQmB,KAAI,SAACC,GAAD,OACX,kBAAC,GAAD,CACEE,IAAKF,EAAE0B,IACPyC,KAAMnE,EAAEmE,KACRtG,OAAQmC,EAAEnC,OACV6D,IAAK1B,EAAE0B,IACPsb,SAAUhd,EAAEgd,gBAMpB,yBAAKtd,UAAU,oBAAf,iBAEF,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACR2E,KAAK,KACL9G,UAAU,YACV4N,OAAK,EACLnN,KAAK,sBAEL,wBAAIT,UAAU,mBAAd,oBAOV,kBAAC,GAAD,SC9BW4d,I,OApDIhf,IAAMC,MACvB,YAAqD,IAAlDgf,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SAAe,EAC1BS,oBAAS,GADiB,mBAC3C4S,EAD2C,KACrCC,EADqC,KAG5CC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,kBACVsC,QAPa,kBAAMwP,GAAQ,IAQ3B/R,MAAM,UAEN,uBAAGC,UAAU,qBAGf,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,UACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC6d,EAAD,CACEC,UAAWA,EACXC,gBAAiBA,EACjBvf,SAAUA,YCkDXwf,GAlFQpf,IAAMC,MAC3B,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3BuU,QAASvU,OAENsC,IAAI,EAAG,0BACPrC,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACbmU,QAASF,GAEXhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAA8BvT,GAC3B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MACE,mGAEFsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAOgU,QACdjT,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4T,UAAY7T,EAAO6T,QACpC9S,UAAWd,EAAQ4T,WAAa7T,EAAO6T,UAEzC,kBAAC,KAAD,CACEje,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCgBC0T,GAlFUvf,IAAMC,MAC7B,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3B0U,UAAW1U,OAAaC,SAAS,eAGnC,OACE,kBAAC,KAAD,CACEG,cAAe,CACbsU,UAAWL,GAEbhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,0DACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,YACLsG,MAAOd,EAAOmU,UACdpT,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ+T,YAAchU,EAAOgU,UACtCjT,UAAWd,EAAQ+T,aAAehU,EAAOgU,WAEzC,4BAAQrT,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,eAAd,gBAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,YACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mB,UCkBC4T,GApFSzf,IAAMC,MAC5B,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3B4U,SAAU5U,OAEP6U,SAAS,4BACT5U,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACbwU,SAAUP,GAEZhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAA+BvT,GAC5B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,0DACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAACU,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWjX,KAAZ,WAEF,kBAAC,KAAKsD,QAAN,CACE/J,KAAK,SACL2D,KAAK,WACLsG,MAAOd,EAAOqU,SACdtT,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQiU,WAAalU,EAAOkU,SACrCnT,UAAWd,EAAQiU,YAAclU,EAAOkU,YAG5C,kBAAC,KAAD,CACEte,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCaCiU,GAjFe9f,IAAMC,MAClC,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3BiV,eAAgBjV,OAEbsC,IAAI,EAAG,kCACPrC,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACb6U,eAAgBZ,GAElBhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAAqCvT,GAClC3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,0DACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACL7G,KAAK,iBACLsG,MAAOd,EAAO0U,eACd3T,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQsU,iBAAmBvU,EAAOuU,eAC3CxT,UAAWd,EAAQsU,kBAAoBvU,EAAOuU,iBAEhD,kBAAC,KAAD,CACE3e,UAAU,cACVyE,KAAK,iBACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCiBCmU,GAlFWhgB,IAAMC,MAC9B,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3BmV,WAAYnV,OAAaC,SAAS,eAGpC,OACE,kBAAC,KAAD,CACEG,cAAe,CACb+U,WAAYd,GAEdhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAAiCvT,GAC9B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,0DACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKvW,KAAN,CAAWvH,UAAU,mBAArB,sBAGA,kBAAC,KAAK6K,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACLxK,KAAK,OACL2D,KAAK,aACLsG,MAAOd,EAAO4U,WACd7T,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQwU,aAAezU,EAAOyU,WACvC1T,UAAWd,EAAQwU,cAAgBzU,EAAOyU,aAE5C,kBAAC,KAAD,CACE7e,UAAU,cACVyE,KAAK,aACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCnDCqU,GAlBQlgB,IAAMC,MAAK,YAA4B,IAAzBL,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAC7C,OACE,kBAAC1L,GAAA,EAAD,CACE7G,UAAU,kBACVD,MAAM,SACN+G,KAAK,KACLrG,KAAM,8BAAgCjC,EAAW,IAAM+T,GAEvD,uBAAGvS,UAAU,wBCMJ+e,I,OAbKngB,IAAMC,MAAK,YAAwB,IAArBmgB,EAAoB,EAApBA,QAAS3a,EAAW,EAAXA,KACzC,OACE,kBAACwC,GAAA,EAAD,CAAQ7G,UAAU,sBAAsB8G,KAAK,KAAKrG,KAAM4D,GACrD2a,OC+EQC,GAhFUrgB,IAAMC,MAC7B,YAA+C,IAA5Cif,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBvf,EAAe,EAAfA,SACvBiL,EAAYC,KAAW,CAC3BwV,UAAWxV,OAAWC,SAAS,eAGjC,OACE,kBAAC,KAAD,CACEG,cAAe,CACboV,UAAWnB,GAEbhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClBgf,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZK,MAAML,EAAItB,MACV6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,0DACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,YACLsG,MAAOd,EAAOiV,UACdlU,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ6U,YAAc9U,EAAO8U,UACtC/T,UAAWd,EAAQ6U,aAAe9U,EAAO8U,WAEzC,4BAAQnU,OAAO,GAAf,UACA,4BAAQA,OAAO,GAAf,cAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,YACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCmHC0U,GAxKWvgB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EAClBlG,qBADkB,mBACvCgP,EADuC,KAC/B4G,EAD+B,KAc9C,OAXAzV,qBAAU,WACR,IAAMZ,EAAW2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SAE/Cgf,GAA4Bhf,GACzBc,MAAK,SAACC,GAAD,OAASsV,EAAUtV,EAAItB,SAC5BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,CAACuF,EAAM2I,WAAWC,MAAMC,OAAOxP,WAE3ByP,EACL,kBAAC0P,GAAD,CAAa5d,MAAM,QAAQ2c,cAAc,SAASI,SAAS,kBACzD,kBAAC1Z,EAAA,EAAD,CAAWoD,OAAK,GAEd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,UACA,4BACGiO,EAAOxJ,KACR,kBAAC,GAAD,CACEoZ,KAAMG,GACNF,UAAU,SACVC,gBAAiB9P,EAAOxJ,KACxBjG,SAAUyP,EAAOjM,SAMzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,SACA,4BACGiO,EAAO9P,OACR,kBAAC,GAAD,CACE0f,KAAMM,GACNL,UAAU,gBACVC,gBAAiB9P,EAAO9P,OACxBK,SAAUyP,EAAOjM,SAMzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,UACA,4BACG,IAAMiO,EAAOT,MACd,kBAAC,GAAD,CACEqQ,KAAMQ,GACNP,UAAU,SACVC,gBAAiB9P,EAAOT,MACxBhP,SAAUyP,EAAOjM,SAMzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,WACA,4BACGiO,EAAOqP,SAAW,SAAW,YAC9B,kBAAC,GAAD,CACEO,KAAMoB,GACNnB,UAAU,UACVC,gBAAiB9P,EAAOqP,SACxB9e,SAAUyP,EAAOjM,SAMzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,kBACA,4BACGiO,EAAOsB,YACR,kBAAC,GAAD,CACEsO,KAAMa,GACNZ,UAAU,iBACVC,gBAAiB9P,EAAOsB,YACxB/Q,SAAUyP,EAAOjM,SAMzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,WACU,0DAEV,wBAAIA,UAAU,aACXiO,EAAOzF,cAAcnI,KAAI,SAACwQ,EAAGuB,GAC5B,OACE,wBAAI5R,IAAKqQ,GACP,4BACGA,EACAuB,IAAQnE,EAAOzF,cAAcpI,OAAS,EACrC,kBAAC,GAAD,CACEyd,KAAMe,GACNd,UAAU,UACVC,gBAAiB9P,EAAOzF,cAAckQ,WACtCla,SAAUyP,EAAOjM,MAEjB,aASlB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,qBAAhB,SACCiO,EAAOR,OAAOrN,OACb,wBAAIJ,UAAU,QACXiO,EAAOR,OAAOpN,KAAI,SAACwQ,GAAD,OACjB,wBAAIrQ,IAAKqQ,EAAE7O,KACT,wBAAIhC,UAAU,QACX6Q,EAAEpM,KACH,kBAAC,GAAD,CAAgBjG,SAAUyP,EAAOjM,IAAKuQ,QAAS1B,EAAE7O,YAMzD,iCAEF,kBAAC,GAAD,CACEgd,QACE,oCACE,uBAAGhf,UAAU,4BACb,wCAGJqE,KACE,mCACAc,EAAM2I,WAAWC,MAAMC,OAAOxP,aAMtC,kBAACoF,EAAA,EAAD,CAAK5D,UAAU,QACb,kBAACuD,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,wBACA,4BACE,uBAAGA,UAAU,6BACZoR,KAAOnD,EAAOmR,WAAW/N,OAAO,WAO3C,kBAAC,GAAD,SCsCWgO,GArNQzgB,IAAMC,MAAK,WAChC,IAAM4K,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAasC,IAAI,EAAG,0BAA0BrC,SAAS,aAC7DxL,OAAQuL,OAEL4V,SAAS,CAAC,YAAa,aACvB3V,SAAS,aACZ4F,YAAa7F,OAAaC,SAAS,aACnC4V,QAAS7V,OAAaC,SAAS,aAC/B6D,MAAO9D,OAEJ6U,SAAS,mCACT5U,SAAS,eAGd,OACE,kBAACgU,GAAD,CACE5d,MAAM,cACN2c,cAAc,SACdI,SAAS,kBAET,kBAAC1Z,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,wBAAI1G,UAAU,QAAd,gCACA,kBAAC,KAAD,CACE8J,cAAe,CACbrF,KAAM,GACNtG,OAAQ,GACRoR,YAAa,GACbgQ,QAAS,GACT/R,MAAO,IAETzD,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdsT,GAAuBvT,GACpB3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,+BACNkF,OAAO6H,SAASlM,KAAO,oBAExBjB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MACE,2FAEFsK,GAAc,SAInB,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAG,KACN,kBAAC,KAAK+G,MAAN,cACQ,4BAAQ5K,UAAU,eAAlB,MAER,kBAAC,KAAK6K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAG,KACN,kBAAC,KAAK+G,MAAN,qBACe,4BAAQ5K,UAAU,eAAlB,MAEf,kBAAC,KAAK6K,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,SACL4G,aAAa,WACbL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQlM,SAAWiM,EAAOjM,OACnCgN,UAAWd,EAAQlM,UAAYiM,EAAOjM,QAEtC,4BAAQgC,UAAQ,GAAhB,YACA,4BAAQ4K,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,eAAd,gBAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,SACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,KACE,kBAAC,KAAKqH,MAAN,sBACa,4BAAQ5K,UAAU,eAAlB,MAEb,kBAAC,KAAK6K,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACL7G,KAAK,cACLsG,MAAOd,EAAOsF,YACdvE,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkF,cAAgBnF,EAAOmF,YACxCpE,UAAWd,EAAQkF,eAAiBnF,EAAOmF,cAE7C,kBAAC,KAAD,CACEvP,UAAU,cACVyE,KAAK,cACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,KACE,kBAAC,KAAKqH,MAAN,CAAY5K,UAAU,QAAtB,UAEE,2BAAOA,UAAU,mBAAjB,0BAGA,4BAAQA,UAAU,eAAlB,MAEF,kBAAC,KAAKuH,KAAN,CAAWvH,UAAU,mBAArB,sBAGA,kBAAC,KAAK6K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAOsV,QACdvU,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkV,UAAYnV,EAAOmV,QACpCpU,UAAWd,EAAQkV,WAAanV,EAAOmV,UAEzC,kBAAC,KAAD,CACEvf,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,cAEE,4BAAQ5K,UAAU,eAAlB,MAEF,kBAACwe,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWjX,KAAZ,WAEF,kBAAC,KAAKsD,QAAN,CACE/J,KAAK,SACLgM,YAAY,OACZrI,KAAK,QACLsG,MAAOd,EAAOuD,MACdxC,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQmD,QAAUpD,EAAOoD,MAClCrC,UAAWd,EAAQmD,SAAWpD,EAAOoD,SAGzC,kBAAC,KAAD,CACExN,UAAU,cACVyE,KAAK,QACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,QACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,qBC/IL+U,GAvDS5gB,IAAMC,MAC5B,YAA0E,IAAvE4gB,EAAsE,EAAtEA,WAAY5B,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,gBAAiBvf,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAAc,EAC/CtT,oBAAS,GADsC,mBAChE4S,EADgE,KAC1DC,EAD0D,KAGjEC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,kBACVsC,QAPa,kBAAMwP,GAAQ,IAQ3B/R,MAAO0f,GAEP,uBAAGzf,UAAU,qBAGf,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,UACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC6d,EAAD,CACEC,UAAWA,EACXC,gBAAiBA,EACjBvf,SAAUA,EACV+T,QAASA,WCmGVmN,I,OAlIE9gB,IAAMC,MAAK,YAA4B,IAAzBL,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAAc,EAC7BtT,oBAAS,GADoB,mBAC9C4S,EAD8C,KACxCC,EADwC,KAG/CC,EAAc,kBAAMD,GAAQ,IAG5BrI,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAaC,SAAS,aAC5BtF,KAAMqF,OAAaC,SAAS,eAG9B,OACE,oCACE,kBAAC9C,GAAA,EAAD,CAAQvE,QATO,kBAAMwP,GAAQ,IASA9R,UAAU,eAAe8G,KAAK,MACzD,uBAAG9G,UAAU,sBACb,gDAGF,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,iBACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC,KAAD,CACE8J,cAAe,CACbrF,KAAM,GACNJ,KAAM,IAER0F,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACdD,EAAOzL,SAAWA,EAClByL,EAAOsI,QAAUA,EAEjBiL,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,4CACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,kDAIX,gBACCqK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,aACA,kBAAC,KAAKC,QAAN,CACE/J,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAO5F,KACd2G,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQhG,OAAS+F,EAAO/F,KACjC8G,UAAWd,EAAQhG,QAAU+F,EAAO/F,OAEtC,kBAAC,KAAD,CACErE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,wBCjFLkV,GA9BM/gB,IAAMC,MAAK,YAAuC,IAApC+gB,EAAmC,EAAnCA,cAAe3U,EAAoB,EAApBA,OAAQ4U,EAAY,EAAZA,MACxD,OACE,oCACE,kBAAC,KAAKjV,MAAN,mBAEA,kBAAC,KAAKkV,KAAN,CACEC,QAAQ,sBACRC,OAAO,UACPC,MAAOJ,GAAgB,GACvBK,cAAY,SACZpgB,GAAG,OACH2E,KAAK,OACL3D,KAAK,OACLkK,SAAU,SAACmV,GACTP,EAAc,OAAQO,EAAMC,cAAcC,MAAM,IAChDT,EACE,QACAO,EAAMC,cAAcC,MAAM,GACtBF,EAAMC,cAAcC,MAAM,GAAG5b,KAC7B,KAGRwG,OAAQA,EACRqV,QAAM,IAER,kBAAC,KAAD,CAActgB,UAAU,cAAcyE,KAAK,OAAO2G,UAAU,YC2HnDmV,GA/IG3hB,IAAMC,MAAK,YAA4B,IAAzBL,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAAc,EAC9BtT,oBAAS,GADqB,mBAC/C4S,EAD+C,KACzCC,EADyC,KAGhDC,EAAc,kBAAMD,GAAQ,IAG5BrI,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAaC,SAAS,aAC5B6W,KAAM9W,OAEHC,SAAS,aACT8W,KACC,WACA,qBACA,SAAC1V,GAAD,OAAWA,GAASA,EAAMjE,MAAQ4Z,KAEnCD,KACC,aACA,wBACA,SAAC1V,GAAD,OAAWA,GAAS4V,EAAkBC,SAAS7V,EAAMjK,WAIrD4f,EAAa,IACbC,EAAoB,CACxB,YACA,aACA,YACA,aAGF,OACE,oCACE,kBAAC9Z,GAAA,EAAD,CAAQvE,QA7BO,kBAAMwP,GAAQ,IA6BA9R,UAAU,eAAe8G,KAAK,MACzD,uBAAG9G,UAAU,sBACb,qDAGF,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,sBACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC,KAAD,CACE8J,cAAe,CACbrF,KAAM,GACNob,WAAOgB,EACPL,UAAMK,GAER9W,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACd,IAAI4W,EAAc,IAAIC,SACtBD,EAAYE,OAAO,OAAQ/W,EAAOxF,MAClCqc,EAAYE,OAAO,QAAS/W,EAAO4V,OACnCiB,EAAYE,OAAO,OAAQ/W,EAAOuW,MAClCM,EAAYE,OAAO,WAAYxiB,GAC/BsiB,EAAYE,OAAO,UAAWzO,GAE9BiL,GAAuBsD,GACpBxhB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,iDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,kDAIX,gBACCqK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAmV,EARD,EAQCA,cARD,OAUC,kBAAC,KAAD,CAAMlV,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,GAAD,CACEyU,MAAO5V,EAAO4V,MACdD,cAAeA,EACf3U,OAAQV,EACRiW,KAAMvW,EAAOuW,OAGf,kBAAC,KAAK7V,MAAN,CAAY3K,UAAU,mBACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,uBC/FLwW,GA9BGriB,IAAMC,MAAK,YAAqC,IAAlC+gB,EAAiC,EAAjCA,cAAe3U,EAAkB,EAAlBA,OAAQiW,EAAU,EAAVA,IACrD,OACE,oCACE,kBAAC,KAAKtW,MAAN,YAEA,kBAAC,KAAKkV,KAAN,CACEC,QAAQ,sBACRC,OAAO,kBACPC,MAAOiB,GAAY,GACnBhB,cAAY,SACZpgB,GAAG,OACH2E,KAAK,OACL3D,KAAK,OACLkK,SAAU,SAACmV,GACTP,EAAc,OAAQO,EAAMC,cAAcC,MAAM,IAChDT,EACE,MACAO,EAAMC,cAAcC,MAAM,GACtBF,EAAMC,cAAcC,MAAM,GAAG5b,KAC7B,KAGRwG,OAAQA,EACRqV,QAAM,IAER,kBAAC,KAAD,CAActgB,UAAU,cAAcyE,KAAK,OAAO2G,UAAU,YCsHnD+V,GA1IAviB,IAAMC,MAAK,YAA4B,IAAzBL,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAAc,EAC3BtT,oBAAS,GADkB,mBAC5C4S,EAD4C,KACtCC,EADsC,KAG7CC,EAAc,kBAAMD,GAAQ,IAG5BrI,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAaC,SAAS,aAC5B6W,KAAM9W,OAEHC,SAAS,aACT8W,KACC,WACA,kBACA,SAAC1V,GAAD,OAAWA,GAASA,EAAMjE,MAAQsa,KAEnCX,KACC,aACA,wBACA,SAAC1V,GAAD,OAAWA,GAAS4V,EAAkBC,SAAS7V,EAAMjK,WAIrDsgB,EAAW,IACXT,EAAoB,CAAC,mBAE3B,OACE,oCACE,kBAAC9Z,GAAA,EAAD,CAAQvE,QAxBO,kBAAMwP,GAAQ,IAwBA9R,UAAU,oBAAoB8G,KAAK,MAC9D,uBAAG9G,UAAU,yBACb,8CAGF,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,eACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC,KAAD,CACE8J,cAAe,CACbrF,KAAM,GACNyc,SAAKL,EACLL,UAAMK,GAER9W,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACd,IAAImX,EAAc,IAAIN,SACtBM,EAAYL,OAAO,OAAQ/W,EAAOxF,MAClC4c,EAAYL,OAAO,MAAO/W,EAAOiX,KACjCG,EAAYL,OAAO,OAAQ/W,EAAOuW,MAClCa,EAAYL,OAAO,WAAYxiB,GAC/B6iB,EAAYL,OAAO,UAAWzO,GAE9BiL,GAA8B6D,GAC3B/hB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,0CACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,kDAIX,gBACCqK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAmV,EARD,EAQCA,cARD,OAUC,kBAAC,KAAD,CAAMlV,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,eACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,GAAD,CACE8V,IAAKjX,EAAOiX,IACZtB,cAAeA,EACf3U,OAAQV,EACRiW,KAAMvW,EAAOuW,OAGf,kBAAC,KAAK7V,MAAN,CAAY3K,UAAU,mBACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,uBCnGL6W,GArBM1iB,IAAMC,MAAK,YAAoC,IAAjCL,EAAgC,EAAhCA,SAAU+T,EAAsB,EAAtBA,QAAS9T,EAAa,EAAbA,OACpD,OACE,kBAACoI,GAAA,EAAD,CACE7G,UAAU,kBACVD,MAAM,SACN+G,KAAK,KACLrG,KACE,4BAA8BjC,EAAW,IAAM+T,EAAU,IAAM9T,GAGjE,uBAAGuB,UAAU,wBC8EJuhB,GArFO3iB,IAAMC,MAC1B,YAAwD,IAArDif,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,gBAAiBvf,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QACjC9I,EAAYC,KAAW,CAC3BuU,QAASvU,OAENsC,IAAI,EAAG,0BACPrC,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACbmU,QAASF,GAEXhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClByL,EAAOsI,QAAUA,EACjBiL,GAA6BvT,GAC1B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,oDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MACE,kGAEFsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAOgU,QACdjT,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4T,UAAY7T,EAAO6T,QACpC9S,UAAWd,EAAQ4T,WAAa7T,EAAO6T,UAEzC,kBAAC,KAAD,CACEje,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCsCC+W,GAzGU5iB,IAAMC,MAC7B,YAAwD,IAArDif,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,gBAAiBvf,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QACjC9I,EAAYC,KAAW,CAC3B+X,WAAY/X,OAET4V,SAAS,CAAC,YAAa,aACvB3V,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACb2X,WAAY1D,GAEdhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClByL,EAAOsI,QAAUA,EACjBiL,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,qDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,wBACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,aAEL4G,aAAcpB,EAAOwX,WACrBzW,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQoX,aAAerX,EAAOqX,WACvCtW,UAAWd,EAAQoX,cAAgBrX,EAAOqX,YAE1C,4BAAQthB,UAAQ,GAAhB,YACA,4BAAQ4K,MAAM,cAAd,cACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,0BAAd,0BAGA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,aAAd,aAEA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,6BAAd,6BAGA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,0BAAd,0BAGA,4BAAQA,MAAM,oBAAd,qBAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,aACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCFCiX,GArFc9iB,IAAMC,MACjC,YAAwD,IAArDif,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,gBAAiBvf,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QACjC9I,EAAYC,KAAW,CAC3BiV,eAAgBjV,OAEbsC,IAAI,EAAG,mBACPrC,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACb6U,eAAgBZ,GAElBhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClByL,EAAOsI,QAAUA,EACjBiL,GAAoCvT,GACjC3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,4DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,wBACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACLxK,KAAK,OACL2D,KAAK,iBACLsG,MAAOd,EAAO0U,eACd3T,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQsU,iBAAmBvU,EAAOuU,eAC3CxT,UAAWd,EAAQsU,kBAAoBvU,EAAOuU,iBAEhD,kBAAC,KAAD,CACE3e,UAAU,cACVyE,KAAK,iBACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCoBCkX,GAvFiB/iB,IAAMC,MACpC,YAAwD,IAArDif,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,gBAAiBvf,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QACjC9I,EAAYC,KAAW,CAC3BkY,SAAUlY,OAEP6U,SAAS,mCACT5U,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACb8X,SAAU7D,GAEZhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAWA,EAClByL,EAAOsI,QAAUA,EACjBiL,GAAuCvT,GACpC3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,8DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,wBACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAACU,GAAA,EAAD,CAAYxe,UAAU,QACpB,kBAAC,KAAK6K,QAAN,CACE/J,KAAK,SACL2D,KAAK,WACLsG,MAAOd,EAAO2X,SACd5W,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQuX,WAAaxX,EAAOwX,SACrCzW,UAAWd,EAAQuX,YAAcxX,EAAOwX,WAE1C,kBAACpD,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,kBAGJ,kBAAC,KAAD,CACEvH,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCsECqX,GA3IK,SAAC,GAA2B,IAAzBtjB,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAAc,EACrBtT,oBAAS,GADY,mBACtC4S,EADsC,KAChCC,EADgC,KAGvCC,EAAc,kBAAMD,GAAQ,IAG5BrI,EAAYC,KAAW,CAC3BqH,WAAYrH,OAET4V,SAAS,CAAC,YAAa,aACvB3V,SAAS,eAV+B,EAaL1K,qBAbK,mBAatC8iB,EAbsC,KAaxBC,EAbwB,KA0B7C,OAXA5iB,qBAAU,WACRoe,GAAwChf,EAAU+T,GAC/CjT,MAAK,SAACC,GACLyiB,EAAgBziB,EAAItB,SAErBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,oDAET,CAACpB,EAAU+T,IAGZ,oCACE,kBAAC1L,GAAA,EAAD,CAAQvE,QAxBO,kBAAMwP,GAAQ,IAwBA9R,UAAU,sBAAsB8G,KAAK,MAChE,uBAAG9G,UAAU,yBACb,iDAGF,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,gBACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC,KAAD,CACE8J,cAAe,CACbiH,WAAY,IAEdhH,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACd,IAAMiN,EAAG,kCAA8BlN,EAAO8G,WAArC,YAAmDvS,EAAnD,YAA+D+T,GACxEzN,OAAO6H,SAASlM,KAAO0W,KAGxB,cACClN,OADD,IAECG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GACxBuX,EACCA,EAAa3hB,OACX,oCAEE,kBAAC,KAAKwD,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,aACL4G,aAAa,WACbL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ0G,aAAe3G,EAAO2G,WACvC5F,UACEd,EAAQ0G,cAAgB3G,EAAO2G,YAGjC,4BAAQ5Q,UAAQ,GAAhB,YACC4hB,EAAa1hB,KAAI,SAAC4hB,GACjB,OACE,4BAAQzhB,IAAKyhB,EAAGlX,MAAOkX,GACpBA,OAKT,kBAAC,KAAD,CACEjiB,UAAU,cACVyE,KAAK,aACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,WAUJ,yBAAKzK,UAAU,oBAAf,6DAMF,yBAAKA,UAAU,oBACb,kBAACU,EAAA,EAAD,gBClFPwhB,GAzCQtjB,IAAMC,MAC3B,YAA+C,IAA5CsjB,EAA2C,EAA3CA,MAAO3jB,EAAoC,EAApCA,SAAU+T,EAA0B,EAA1BA,QAAS6P,EAAiB,EAAjBA,WAmB3B,OACE,kBAACvb,GAAA,EAAD,CACEC,KAAK,KACL3E,QAAQ,cACRnC,UAAU,gCACVD,MAAM,WACNuC,QAxBiB,WACnBkb,GAA4B,CAC1B2E,QACA3jB,WACA+T,UACA6P,eAEC9iB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,+DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,kDAYR,uBAAGI,UAAU,qBCSNqiB,GArCUzjB,IAAMC,MAAK,YAAsC,IAAnCyjB,EAAkC,EAAlCA,SAAU9jB,EAAwB,EAAxBA,SAAU+T,EAAc,EAAdA,QAkBzD,OACE,kBAAC1L,GAAA,EAAD,CACEC,KAAK,KACL3E,QAAQ,cACRnC,UAAU,2BACVD,MAAM,WACNuC,QAvBiB,WACnBkb,GAA0B,CACxB8E,WACA9jB,WACA+T,YAECjT,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,2DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,kDAYR,uBAAGI,UAAU,qBC+LJuiB,GA3MU3jB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EACnBlG,qBADmB,mBACtC+U,EADsC,KAC/BwO,EAD+B,KAkB7C,OAfApjB,qBAAU,WACR,IAAMZ,EAAW2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACzC+T,EAAUpN,EAAM2I,WAAWC,MAAMC,OAAOuE,QAE9CiL,GAAwBhf,EAAU+T,GAC/BjT,MAAK,SAACC,GAAD,OAASijB,EAASjjB,EAAItB,SAC3BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,CACDuF,EAAM2I,WAAWC,MAAMC,OAAOxP,SAC9B2G,EAAM2I,WAAWC,MAAMC,OAAOuE,UAGzByB,EACL,kBAAC2J,GAAD,CACE5d,MAAM,OACN2c,cAAc,SACdI,SAAU,uBAAyB3X,EAAM2I,WAAWC,MAAMC,OAAOxP,UAEjE,kBAAC4E,EAAA,EAAD,CAAWoD,OAAK,GAEd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,UACA,4BACGgU,EAAMvP,KACP,kBAAC,GAAD,CACEgb,WAAW,gBACX5B,KAAM0D,GACNzD,UAAU,SACVC,gBAAiB/J,EAAMvP,KACvBjG,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAMvB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,WACA,4BACGgU,EAAMpK,QACP,kBAAC,GAAD,CACE6V,WAAW,iBACX5B,KAAM2D,GACN1D,UAAU,UACVC,gBAAiB/J,EAAMpK,QACvBpL,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAMvB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,kBACA,4BACGgU,EAAMzE,YACP,kBAAC,GAAD,CACEkQ,WAAW,wBACX5B,KAAM6D,GACN5D,UAAU,iBACVC,gBAAiB/J,EAAMzE,YACvB/Q,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAMvB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,kBACA,4BACGgU,EAAMxB,UAAUK,MAAQ,WACzB,kBAAC,GAAD,CACE4M,WAAW,wBACX5B,KAAM8D,GACN7D,UAAU,iBACVC,gBAAiB/J,EAAMxB,UAAUK,MACjCrU,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAMvB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,cACCgU,EAAMb,OACL,oCACE,yBAAKnT,UAAU,UACb,4BAAKgU,EAAMb,OAAO1O,MAClB,kBAAC,GAAD,CACE6d,SAAUtO,EAAMb,OAAO9O,KACvB7F,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,OAGnB,kBAACgC,EAAA,EAAD,CACEC,IAAK+P,EAAMb,OAAO9O,KAClBwE,MAAM,KACNC,OAAO,MACP9I,UAAU,UAId,yBAAKA,UAAU,QACb,iCACA,kBAAC,GAAD,CACExB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAOzB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,YACCgU,EAAMI,SAAShU,OACd,4BACG4T,EAAMI,SAAS/T,KAAI,SAACib,GAAD,OAClB,wBAAI9a,IAAK8a,EAAEtZ,KACT,4BAAQ/B,MAAO,CAAEuD,MAAO,YACV,UAAX8X,EAAExa,KACD,uBAAGd,UAAU,sBACA,QAAXsb,EAAExa,KACJ,uBAAGd,UAAU,yBACX,KACHsb,EAAE7W,KACH,kBAACge,GAAD,CACEN,MAAkB,QAAX7G,EAAExa,KAAiBwa,EAAEjX,KAAO,KACnC7F,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,IACfogB,WAAY9G,EAAEtZ,YAOxB,iCAEF,yBAAKhC,UAAU,QACb,kBAAC,GAAD,CACExB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,MAEjB,kBAAC,GAAD,CACExD,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,SAMvB,kBAAC4B,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,eACCgU,EAAMd,MAAM9S,OACX,wBAAIJ,UAAU,QACXgU,EAAMd,MACJE,MAAK,SAAC9D,EAAGlL,GAAJ,OAAUkL,EAAE+D,gBAAkBjP,EAAEiP,mBACrChT,KAAI,SAACwF,GAAD,OACH,wBAAIrF,IAAKqF,EAAE7D,KACT,wBAAIhC,UAAU,QAAd,WACO6F,EAAEkL,WADT,MAEGlL,EAAEpB,KACH,kBAAC,GAAD,CACEjG,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASpN,EAAM2I,WAAWC,MAAMC,OAAOuE,QACvC9T,OAAQoH,EAAE7D,YAOtB,iCAEF,kBAAC,GAAD,CACExD,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxC+T,QAASyB,EAAMhS,UAOzB,kBAAC,GAAD,SCpLW0gB,GAlCK9jB,IAAMC,MAAK,YAAuC,IAApC+gB,EAAmC,EAAnCA,cAAe3U,EAAoB,EAApBA,OAAQ0X,EAAY,EAAZA,MACvD,OACE,oCACE,kBAAC,KAAK/X,MAAN,eAEE,4BAAQ5K,UAAU,eAAlB,KACA,2BAAOA,UAAU,QAAjB,+BAGF,kBAAC,KAAK8f,KAAN,CACEC,QAAQ,sBACRC,OAAO,UACPC,MAAO0C,GAAgB,GACvBzC,cAAY,SACZpgB,GAAG,OACH2E,KAAK,OACL3D,KAAK,OACLkK,SAAU,SAACmV,GACTP,EAAc,OAAQO,EAAMC,cAAcC,MAAM,IAChDT,EACE,QACAO,EAAMC,cAAcC,MAAM,GACtBF,EAAMC,cAAcC,MAAM,GAAG5b,KAC7B,KAGRwG,OAAQA,EACRqV,QAAM,IAER,kBAAC,KAAD,CAActgB,UAAU,cAAcyE,KAAK,OAAO2G,UAAU,YC4PnDiU,GArRQzgB,IAAMC,MAAK,SAACsG,GACjC,IACMwb,EAAoB,CACxB,YACA,aACA,YACA,aAGIlX,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAasC,IAAI,EAAG,0BAA0BrC,SAAS,aAC7DC,QAASF,OAEN4V,SAAS,CAAC,YAAa,aACvB3V,SAAS,aACZ4F,YAAa7F,OAAaC,SAAS,aACnCiZ,eAAgBlZ,OAEb6U,SAAS,mCACT5U,SAAS,aACZiL,WAAYlL,OAAaC,SAAS,aAClC6W,KAAM9W,OAEHC,SAAS,aACT8W,KACC,WACA,qBACA,SAAC1V,GAAD,OAAWA,GAASA,EAAMjE,MA1Bb,OA4Bd2Z,KACC,aACA,wBACA,SAAC1V,GAAD,OAAWA,GAAS4V,EAAkBC,SAAS7V,EAAMjK,WAI3D,OACE,kBAAC6c,GAAD,CACE5d,MAAM,aACN2c,cAAc,SACdI,SAAU,uBAAyB3X,EAAM2I,WAAWC,MAAMC,OAAOxP,UAEjE,kBAAC4E,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,wBAAI1G,UAAU,QAAd,+BACA,kBAAC,KAAD,CACE8J,cAAe,CACbrF,KAAM,GACNmF,QAAS,GACT2F,YAAa,GACbqT,eAAgB,GAChBhO,WAAY,GACZ+N,WAAO9B,EACPL,UAAMK,GAER9W,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd,IAAIiT,EAAY,IAAI4D,SACpB5D,EAAU6D,OAAO,OAAQ/W,EAAOxF,MAChC0Y,EAAU6D,OAAO,UAAW/W,EAAOL,SACnCuT,EAAU6D,OAAO,cAAe/W,EAAOsF,aACvC4N,EAAU6D,OAAO,iBAAkB/W,EAAO2Y,gBAC1CzF,EAAU6D,OAAO,aAAc/W,EAAO2K,YACtCuI,EAAU6D,OAAO,QAAS/W,EAAO0Y,OACjCxF,EAAU6D,OAAO,OAAQ/W,EAAOuW,MAChCrD,EAAU6D,OACR,WACA7b,EAAM2I,WAAWC,MAAMC,OAAOxP,UAGhCgf,GAAsBL,GACnB7d,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,8BACNkF,OAAO6H,SAASlM,KACd,uBACA0E,EAAM2I,WAAWC,MAAMC,OAAOxP,YAEjCgB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,wBACNsK,GAAc,SAInB,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAmV,EARD,EAQCA,cARD,OAUC,kBAAC,KAAD,CAAMlV,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,cAEE,4BAAQ5K,UAAU,eAAlB,MAEF,kBAAC,KAAK6K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,eAEE,4BAAQ5K,UAAU,eAAlB,MAEF,kBAAC,KAAK6K,QAAN,CACEvH,GAAG,SACHxC,KAAK,OACL2D,KAAK,UACL4G,aAAa,WACbL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQT,UAAYQ,EAAOR,QACpCuB,UAAWd,EAAQT,WAAaQ,EAAOR,SAEvC,4BAAQzJ,UAAQ,GAAhB,YACA,4BAAQ4K,MAAM,cAAd,cACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,0BAAd,0BAGA,4BAAQA,MAAM,uBAAd,uBAGA,4BAAQA,MAAM,aAAd,aAEA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,6BAAd,6BAGA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,0BAAd,0BAGA,4BAAQA,MAAM,oBAAd,qBAEF,kBAAC,KAAD,CACE/K,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,KACE,kBAAC,KAAKqH,MAAN,sBACa,4BAAQ5K,UAAU,eAAlB,MAEb,kBAAC,KAAK6K,QAAN,CACEC,UAAU,MACVxH,GAAG,WACHgI,KAAK,IACL7G,KAAK,cACLsG,MAAOd,EAAOsF,YACdvE,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkF,cAAgBnF,EAAOmF,YACxCpE,UAAWd,EAAQkF,eAAiBnF,EAAOmF,cAE7C,kBAAC,KAAD,CACEvP,UAAU,cACVyE,KAAK,cACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,yBAEE,4BAAQ5K,UAAU,eAAlB,MAEF,kBAAC,KAAK6K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,aACLsG,MAAOd,EAAO2K,WACd5J,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQuK,aAAexK,EAAOwK,WACvCzJ,UAAWd,EAAQuK,cAAgBxK,EAAOwK,aAE5C,kBAAC,KAAD,CACE5U,UAAU,cACVyE,KAAK,aACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,GAAD,CACE8e,MAAO1Y,EAAO0Y,MACd/C,cAAeA,EACf3U,OAAQV,EACRiW,KAAMvW,EAAOuW,SAKnB,kBAAC,KAAK5c,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,kCAEE,4BAAQ5K,UAAU,eAAlB,MAEF,kBAACwe,GAAA,EAAD,CAAYxe,UAAU,QACpB,kBAAC,KAAK6K,QAAN,CACE/J,KAAK,SACL2D,KAAK,iBACLsG,MAAOd,EAAO2Y,eACd5X,SAAUV,EACVW,OAAQV,EACRW,QACEb,EAAQuY,iBAAmBxY,EAAOwY,eAEpCzX,UACEd,EAAQuY,kBAAoBxY,EAAOwY,iBAGvC,kBAACpE,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,CAAiBzH,GAAG,gBAApB,aAKJ,kBAAC,KAAD,CACEE,UAAU,cACVyE,KAAK,iBACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,QACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,qBCjDLoY,GAnNMjkB,IAAMC,MAAK,SAACsG,GAC/B,IAAMsE,EAAYC,KAAW,CAC3BjF,KAAMiF,OAAaC,SAAS,aAC5B4F,YAAa7F,OAAaC,SAAS,aACnCqJ,SAAUtJ,OAEP6U,SAAS,mCACT5U,SAAS,aACZiK,SAAUlK,OAEP6U,SAAS,mCACT5U,SAAS,eAGd,OACE,kBAACgU,GAAD,CACE5d,MAAM,eACN2c,cAAc,SACdI,SAAQ,qCAAgC3X,EAAM2I,WAAWC,MAAMC,OAAOxP,SAA9D,YAA0E2G,EAAM2I,WAAWC,MAAMC,OAAOuE,UAEhH,kBAACnP,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,wBAAI1G,UAAU,QAAd,iCACA,oCAAUmF,EAAM2I,WAAWC,MAAMC,OAAO+C,WAAxC,KACA,6BACA,6BACA,kBAAC,KAAD,CACEjH,cAAe,CACbrF,KAAM,GACNuO,SAAU,GACVzD,YAAa,GACbqE,SAAU,IAEZ7J,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOzL,SAAW2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SAChDyL,EAAOsI,QAAUpN,EAAM2I,WAAWC,MAAMC,OAAOuE,QAC/CtI,EAAO8G,WAAa5L,EAAM2I,WAAWC,MAAMC,OAAO+C,WAClD9G,EAAOoJ,gBACiB,UAAtBpJ,EAAO8G,WACH,EACsB,uBAAtB9G,EAAO8G,WACP,EACsB,iBAAtB9G,EAAO8G,WACP,EACsB,0BAAtB9G,EAAO8G,WACP,EACsB,aAAtB9G,EAAO8G,WACP,EACA,EAENyM,GAAqBvT,GAClB3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gCACNkF,OAAO6H,SAASlM,KAAhB,qCAAqD0E,EAAM2I,WAAWC,MAAMC,OAAOxP,SAAnF,YAA+F2G,EAAM2I,WAAWC,MAAMC,OAAOuE,YAE9H/S,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,wBACNsK,GAAc,SAInB,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAACL,EAAA,EAAD,KACE,kBAAC,KAAKqH,MAAN,cAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,OACLsG,MAAOd,EAAOxF,KACduG,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ5F,OAAS2F,EAAO3F,KACjC0G,UAAWd,EAAQ5F,QAAU2F,EAAO3F,OAEtC,kBAAC,KAAD,CACEzE,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,6BAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAACye,GAAA,EAAD,KACE,kBAAC,KAAK3T,QAAN,CACEC,UAAU,KACVhK,KAAK,SACL2D,KAAK,WACLsG,MAAOd,EAAO2J,SACd5I,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQuJ,WAAaxJ,EAAOwJ,SACrCzI,UAAWd,EAAQuJ,YAAcxJ,EAAOwJ,WAE1C,kBAAC4K,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,CAAiBzH,GAAG,gBAApB,eAKJ,kBAAC,KAAD,CACEE,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAACye,GAAA,EAAD,KACE,kBAAC,KAAK3T,QAAN,CACEC,UAAU,KACVhK,KAAK,SACL2D,KAAK,WACLsG,MAAOd,EAAO+I,SACdhI,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ2I,WAAa5I,EAAO4I,SACrC7H,UAAWd,EAAQ2I,YAAc5I,EAAO4I,WAE1C,kBAACwL,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,CAAiBzH,GAAG,gBAApB,aAKJ,kBAAC,KAAD,CACEE,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,QACpB,kBAAC,KAAK4K,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEvH,GAAG,WACHgI,KAAK,IACLR,UAAU,MACVhK,KAAK,OACL2D,KAAK,cACLsG,MAAOd,EAAOsF,YACdvE,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkF,cAAgBnF,EAAOmF,YACxCpE,UAAWd,EAAQkF,eAAiBnF,EAAOmF,cAE7C,kBAAC,KAAD,CACEvP,UAAU,cACVyE,KAAK,cACL2G,UAAU,SAId,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,QACpB,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLX,SAAUsK,GAHZ,qBC7KL4S,I,OAtBIze,IAAMC,MAAK,YAA2B,IAAxB4F,EAAuB,EAAvBA,KAAMrC,EAAiB,EAAjBA,MAAOJ,EAAU,EAAVA,IAC5C,OACE,kBAACkG,GAAA,EAAU3H,KAAX,CACE4H,QAAM,EACNnI,UAAU,qDACVS,KAAM,mBAAqBuB,GAE3B,0BAAMhC,UAAU,mBAAmByE,GACnC,8BACE,uBAAGzE,UAAU,mBACZoC,QCqCM0gB,GA7COlkB,IAAMC,MAAK,WAAO,IAAD,EACLI,qBADK,mBAC9B8jB,EAD8B,KACpBC,EADoB,KAYrC,OATA5jB,qBAAU,WACRoe,KACGle,MAAK,SAACC,GAAD,OAASyjB,EAAYzjB,EAAItB,SAC9BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,IAEImjB,EACL,kBAACpF,GAAD,CAAa5d,MAAM,UAAU2c,cAAc,WACzC,kBAACtZ,EAAA,EAAD,CAAWoD,OAAK,GACd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IACzBqc,EAAS3iB,OACR,oCACE,wBAAIJ,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YAArC,2BAGA,kBAAC0E,GAAA,EAAD,KACG6a,EAAS1iB,KAAI,SAAC4iB,GAAD,OACZ,kBAACC,GAAD,CACE1iB,IAAKyiB,EAAEjhB,IACPyC,KAAMwe,EAAExe,KAAO,IAAMwe,EAAEve,aACvBtC,MAAO6gB,EAAE7gB,MACTJ,IAAKihB,EAAEjhB,WAMf,yBAAKhC,UAAU,oBAAf,sBAOV,kBAAC,GAAD,SCuGWmjB,GA9IavkB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EAClBlG,qBADkB,mBACzC4C,EADyC,KAChCuhB,EADgC,KAgBhD,OAbAhkB,qBAAU,WACR,IAAMb,EAAY4G,EAAM2I,WAAWC,MAAMC,OAAOzP,UAEhDif,GAA6Bjf,GAC1Be,MAAK,SAACC,GACL6jB,EAAW7jB,EAAItB,SAEhBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,CAACuF,EAAM2I,WAAWC,MAAMC,OAAOzP,YAE3BsD,EACL,kBAAC8b,GAAD,CACEb,SAAS,kBACT/c,MAAM,qBACN2c,cAAc,WAEd,kBAACtZ,EAAA,EAAD,CAAWoD,OAAK,GAEd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,WACA,4BAAK6B,EAAQO,MAAMoC,MAAM,IAAK,GAAG,MAIrC,kBAACZ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,yBACA,4BAAK6B,EAAQO,SAIjB,kBAACwB,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,mBACA,4BACG6B,EAAQ4C,KACP,IACA5C,EAAQ6C,aACR,IACA7C,EAAQqK,iBAKhB,kBAACtI,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,qBACA,4BACE,uBAAGA,UAAU,6BACZoR,KAAOvP,EAAQwhB,cAAchS,OAAO,SAK3C,kBAACzN,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,qBAAhB,oBACC6B,EAAQ3C,QAAQkB,OACf,wBAAIJ,UAAU,QACX6B,EAAQ3C,QAAQmB,KAAI,SAACC,GACpB,OACE,wBAAIE,IAAKF,EAAE0B,KACT,wBAAIhC,UAAU,QAAQM,EAAEmE,WAMhC,uCAEF,kBAAC,GAAD,CACEua,QACE,oCACE,uBAAGhf,UAAU,8BACb,gDAGJqE,KACE,+BACAc,EAAM2I,WAAWC,MAAMC,OAAOzP,cAMtC,kBAACqF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,qBAAhB,sDAGA,wBAAIA,UAAU,QACX6B,EAAQyhB,SAASljB,OAChB,MACAyB,EAAQyhB,SAASpL,QAAO,SAAC5I,GAAD,OAAmB,KAAZA,EAAEkK,SAAcpZ,QAEnD,kBAAC,GAAD,CACE4e,QACE,oCACE,uBAAGhf,UAAU,wBACb,gDAGJqE,KACE,2BACAc,EAAM2I,WAAWC,MAAMC,OAAOzP,cAMtC,kBAACqF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,YACC6B,EAAQwO,QAAQjQ,OACf,4BACGyB,EAAQwO,QAAQhQ,KAAI,SAACiQ,GACpB,OACE,wBAAI9P,IAAK8P,EAAE7L,MACT,wBAAIzE,UAAU,QAAQsQ,EAAE7L,WAMhC,gDAOV,kBAAC,GAAD,SClEW8e,I,OA1EW3kB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EACRlG,oBAAS,GADD,mBACvCukB,EADuC,KAC1BC,EAD0B,KAG9CrkB,qBAAU,WACR,IAAMb,EAAY4G,EAAM2I,WAAWC,MAAMC,OAAOzP,UAEhDif,GAAqCjf,GAClCe,MAAK,SAACC,GAAD,OAASkkB,EAAelkB,EAAItB,SACjCuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,CAACuF,EAAM2I,WAAWC,MAAMC,OAAOzP,YAmBlC,OAAOilB,EACL,kBAAC7F,GAAD,CACE5d,MAAM,gBACN2c,cAAc,UACdI,SAAU,mBAAqB3X,EAAM2I,WAAWC,MAAMC,OAAOzP,WAE7D,kBAAC6E,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,6DACA,0BAAM1G,UAAU,QAAhB,4DAGCwjB,EAAYpjB,OACX,kBAAC8H,GAAA,EAAD,CAAW/F,QAAQ,QAAQnC,UAAU,QAClCwjB,EAAYnjB,KAAI,SAACqjB,GAAD,OACf,kBAACxb,GAAA,EAAU3H,KAAX,CAAgBC,IAAKkjB,EAAE1hB,IAAKhC,UAAU,eACpC,wBAAIA,UAAU,QAAQ0jB,EAAEjf,MACxB,kBAACoC,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,qBACVsC,QAAS,kBAtCP9D,EAsC0BklB,EAAE1hB,SArChDwb,GAA0B,CACxBhf,WACAD,UAAW4G,EAAM2I,WAAWC,MAAMC,OAAOzP,YAExCe,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,sCACNkF,OAAO6H,SAASlM,KACd,mBAAqB0E,EAAM2I,WAAWC,MAAMC,OAAOzP,aAEtDiB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,0BAbS,IAACpB,IAwCF,uBAAGwB,UAAU,8BALf,gBAYN,yBAAKA,UAAU,oBACb,yFAQZ,kBAAC,GAAD,UCKW2jB,GA1Ea/kB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EAClBlG,oBAAS,GADS,mBACzC2kB,EADyC,KAChCC,EADgC,KAchD,OAXAzkB,qBAAU,WACR,IAAMb,EAAY4G,EAAM2I,WAAWC,MAAMC,OAAOzP,UAEhDif,GAAiCjf,GAC9Be,MAAK,SAACC,GAAD,OAASskB,EAAWtkB,EAAItB,SAC7BuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,CAACuF,EAAM2I,WAAWC,MAAMC,OAAOzP,YAE3BqlB,EACL,kBAACjG,GAAD,CACE5d,MAAM,2BACN2c,cAAc,UACdI,SAAU,mBAAqB3X,EAAM2I,WAAWC,MAAMC,OAAOzP,WAE7D,kBAAC6E,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IAC1B,wBAAI1G,UAAU,QAAd,kBACC4jB,EAAQxjB,OACP,kBAAC+R,GAAA,EAAD,CAAO2R,UAAQ,EAAChd,KAAK,MACnB,+BACE,4BACE,wBACE9G,UAAU,mBACVC,MAAO,CAAEmG,gBAAiB,YAE1B,wBAAIpG,UAAU,QAAd,UAEF,wBACEA,UAAU,mBACVC,MAAO,CAAEmG,gBAAiB,YAE1B,wBAAIpG,UAAU,QAAd,WAEF,wBACEA,UAAU,mBACVC,MAAO,CAAEmG,gBAAiB,YAE1B,wBAAIpG,UAAU,QAAd,sBAIN,+BACG4jB,EAAQvjB,KAAI,SAAC0jB,GACZ,OACE,wBAAIvjB,IAAKujB,EAAE/hB,KACT,4BAAKoP,KAAO2S,EAAE7S,MAAMG,OAAO,MAC3B,4BAAK0S,EAAEhU,KAAKtL,MACZ,wBAAIzE,UAAU,eAAe+jB,EAAEvK,aAOzC,yBAAKxZ,UAAU,oBACb,kFAQZ,kBAAC,GAAD,SCaWgkB,GApFMplB,IAAMC,MAAK,YAAuB,IAApBue,EAAmB,EAAnBA,MAAOhb,EAAY,EAAZA,MAClCqH,EAAYC,KAAW,CAC3BG,KAAMH,OAAaC,SAAS,eAG9B,OACE,oCACE,wBAAI3J,UAAU,kBAAd,aACA,kBAAC,KAAD,CACE8J,cAAe,CACbD,KAAM,IAERE,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,IACRC,EADuC,EAApBA,gBACL,GACdD,EAAOmT,MAAQA,EACfnT,EAAO7H,MAAQA,EACf6hB,GAAsBha,GACnB3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,qDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,+DAIX,gBACCqK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKsH,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,OACLsG,MAAOd,EAAOJ,KACdmB,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQR,OAASO,EAAOP,KACjCsB,UAAWd,EAAQR,QAAUO,EAAOP,OAEtC,kBAAC,KAAD,CACE7J,UAAU,cACVyE,KAAK,OACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,KACE,kBAAC9D,GAAA,EAAD,CACE1E,QAAQ,OACRrB,KAAK,SACLd,UAAU,iBACVG,SAAUsK,GAJZ,mBCsICyZ,GA5LGtlB,IAAMC,MAAK,YAAkB,IAAfgO,EAAc,EAAdA,QAAc,EACpB5N,oBAAS,GADW,mBACrC4S,EADqC,KAC/BC,EAD+B,KAmB5C,OACE,oCACE,kBAAC5J,GAAA,EAAU3H,KAAX,CACEP,UAAU,8BACVmI,QAAM,EACN7F,QAjBa,WACjBkb,GAAsB3Q,EAAQ7K,KAC3B1C,MAAK,kBAAMI,QAAQC,IAAI,mBACvBH,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIgc,UAChBhc,EAAIgc,SAASxd,KAAKkmB,IACdvkB,MAAMH,EAAIgc,SAASxd,KAAKkmB,KACxBvkB,MAAM,2DAEdkS,GAAQ,KAUJ,yBAAK9R,UAAU,sBACb,yCACCoR,KAAOvE,EAAQ2O,QAAQnK,OAAO,MAEjC,yBAAKrR,UAAU,2BACb,0CACC6M,EAAQ1C,QAEX,yBAAKnK,UAAU,2BACb,0CACC6M,EAAQzK,OAEX,yBAAKpC,UAAU,2BACb,mDACmC,IAAlC6M,EAAQjD,QAAQwa,QAAQ,KACvBvX,EAAQjD,QAER,6BACE,0BAAM5J,UAAU,WACb6M,EAAQjD,QAAQya,OAAO,EAAGxX,EAAQjD,QAAQwa,QAAQ,OAErD,kBAACpgB,EAAA,EAAD,CACEC,IAAK4I,EAAQjD,QAAQya,OACnBxX,EAAQjD,QAAQwa,QAAQ,KAAO,EAC/B,KAEFvb,MAAM,KACNC,OAAO,MACP9I,UAAU,WAKjB6M,EAAQyX,KAAO,KACd,uBACEtkB,UAAU,0CACVC,MAAO,CAAEC,SAAU,QACnBH,MAAM,UAGT8M,EAAQ0O,SACP,uBACEvb,UAAU,2CACVC,MAAO,CAAEC,SAAU,QACnBH,MAAM,eAEN,MAGN,kBAACiS,GAAA,EAAD,CAAOH,KAAMA,EAAMoC,SAAS,SAASC,UAAU,GAC7C,kBAAClC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,2BAEpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,QAAd,cACA,kBAAC6G,GAAA,EAAD,CACE7G,UAAU,oBACVmC,QAAQ,OACR2E,KAAK,KACL/G,MAAM,SACNuC,QAlFQ,WAClBwP,GAAQ,GACRhN,OAAO6H,SAASuR,WAkFN,uBAAGle,UAAU,eAAeC,MAAO,CAAEC,SAAU,YAGnD,kBAAC0D,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,aAAd,UACC6M,EAAQ1C,QAEX,kBAAC5G,EAAA,EAAD,KACoB,YAAjBsJ,EAAQ/L,KACP,yBAAKd,UAAU,sBACb,wBAAIA,UAAU,aAAd,WACC6M,EAAQvO,UAGX,yBAAK0B,UAAU,sBACb,wBAAIA,UAAU,aAAd,UACC6M,EAAQpI,OAIf,kBAAClB,EAAA,EAAD,KACE,wBAAIvD,UAAU,aAAd,SACCoR,KAAOvE,EAAQ2O,QAAQnK,OAAO,OAGnC,6BACoB,YAAjBxE,EAAQ/L,KACP,yBAAKd,UAAU,2BACb,wBAAIA,UAAU,aAAd,UACC6M,EAAQpI,MAET,KACJ,yBAAKzE,UAAU,2BACb,wBAAIA,UAAU,aAAd,mBACmC,IAAlC6M,EAAQjD,QAAQwa,QAAQ,KACvBvX,EAAQjD,QAER,6BACE,0BAAM5J,UAAU,WACb6M,EAAQjD,QAAQya,OAAO,EAAGxX,EAAQjD,QAAQwa,QAAQ,OAErD,kBAACpgB,EAAA,EAAD,CACEC,IAAK4I,EAAQjD,QAAQya,OACnBxX,EAAQjD,QAAQwa,QAAQ,KAAO,EAC/B,KAEFvb,MAAM,KACNC,OAAO,MACP9I,UAAU,WAKlB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,aAAd,UACC6M,EAAQzK,OAEX,wBAAIpC,UAAU,kBAAd,WACA,kBAAC,KAAD,KACE,kBAAC,KAAK2K,MAAN,KACE,kBAAC,KAAKE,QAAN,CACEvH,GAAG,WACHgI,KAAK,IACLwB,YAAaD,EAAQhD,KACrB1J,UAAQ,MAKM,WAAnB0M,EAAQ1C,OAAsB,KAAQ0C,EAAQ0O,SAG7C,oCACE,wBAAIvb,UAAU,kBAAd,aACA,kBAAC,KAAD,KACE,kBAAC,KAAK2K,MAAN,KACE,kBAAC,KAAKE,QAAN,CACEvH,GAAG,WACHgI,KAAK,IACLwB,YAAaD,EAAQ4O,SACrBtb,UAAQ,MAId,2BAAOH,UAAU,cAAjB,iBACiBoR,KAAOvE,EAAQ6O,aAAarK,OAAO,SAftD,kBAAC,GAAD,CAAc+L,MAAOvQ,EAAQ7K,IAAKI,MAAOyK,EAAQzK,eC/DhDmiB,GAxGO3lB,IAAMC,MAAK,WAAO,IAAD,EACLI,qBADK,mBAC9Boc,EAD8B,KACpBM,EADoB,OAEL1c,qBAFK,mBAE9BulB,EAF8B,KAEpBC,EAFoB,OAGTxlB,qBAHS,mBAG9BiZ,EAH8B,KAGtBwM,EAHsB,KAKrCtlB,qBAAU,WACRoe,KACGle,MAAK,SAACC,GACLoc,EAAYpc,EAAItB,MAChBwmB,EAAYllB,EAAItB,SAEjBuB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAET,IAEH,IAAM+kB,EAAiB,SAACC,GACtB,OAAQA,GACN,IAAK,MACHF,EAAUE,IAAa1M,EAAS,KAAO0M,GACvCH,EACEG,IAAa1M,EAASmD,EAAWA,EAASnD,QAAO,SAACiM,GAAD,OAAUA,EAAIG,SAEjE,MACF,QACEI,EAAUE,IAAa1M,EAAS,KAAO0M,GACvCH,EACEG,IAAa1M,EACTmD,EACAA,EAASnD,QAAO,SAACiM,GAAD,OAASA,EAAIha,SAAWya,QAK9CC,EACJ,yBAAK7kB,UAAU,UACb,kBAAC6G,GAAA,EAAD,CACE1G,UAAUkb,EACV3E,OAAmB,QAAXwB,EACR/V,QAAQ,kBACRnC,UAAU,YACVsC,QAAS,kBAAMqiB,EAAe,SALhC,UASA,kBAAC9d,GAAA,EAAD,CACE1G,UAAUkb,EACV3E,OAAmB,WAAXwB,EACR/V,QAAQ,gBACRnC,UAAU,iBACVsC,QAAS,kBAAMqiB,EAAe,YALhC,UASA,kBAAC9d,GAAA,EAAD,CACE1G,UAAUkb,EACV3E,OAAmB,SAAXwB,EACR/V,QAAQ,gBACRnC,UAAU,iBACVsC,QAAS,kBAAMqiB,EAAe,UALhC,QASA,kBAAC9d,GAAA,EAAD,CACE1G,UAAUkb,EACV3E,OAAmB,aAAXwB,EACR/V,QAAQ,gBACRnC,UAAU,iBACVsC,QAAS,kBAAMqiB,EAAe,cALhC,aAYJ,OAAOH,EACL,kBAAC7G,GAAD,CAAa5d,MAAM,WAAW2c,cAAc,WAAWG,QAASgI,GAC9D,kBAACzhB,EAAA,EAAD,CAAWoD,OAAK,GACd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKM,GAAI,CAAE4C,OAAQ,EAAGC,KAAM,IACzB8d,EAASpkB,OACR,oCACE,wBAAIJ,UAAU,OAAOC,MAAO,CAAEuD,MAAO,YAArC,kDAGA,kBAAC0E,GAAA,EAAD,KACGsc,EAASnkB,KAAI,SAACib,GAAD,OACZ,kBAAC,GAAD,CAAW9a,IAAK8a,EAAEtZ,IAAK6K,QAASyO,SAKtC,yBAAKtb,UAAU,oBAAf,uBAOV,kBAAC,GAAD,SCjDW8kB,GAtDQlmB,IAAMC,MAC3B,YAA+D,IAA5D4gB,EAA2D,EAA3DA,WAAY5B,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,gBAAiBtf,EAAa,EAAbA,OAAa,EACpCQ,oBAAS,GAD2B,mBACrD4S,EADqD,KAC/CC,EAD+C,KAGtDC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,kBACVsC,QAPa,kBAAMwP,GAAQ,IAQ3B/R,MAAO0f,GAEP,uBAAGzf,UAAU,oBAGf,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACzB,kBAACC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAd,UACA,kBAAC6G,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC6d,EAAD,CACEC,UAAWA,EACXC,gBAAiBA,EACjBtf,OAAQA,WCMTsmB,GAxCSnmB,IAAMC,MAAK,YAAuC,IAApCyF,EAAmC,EAAnCA,KAAMuZ,EAA6B,EAA7BA,KAAMpf,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SAAe,EAC/CS,oBAAS,GADsC,mBAChE4S,EADgE,KAC1DC,EAD0D,KAGjEC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CAAQvE,QAJO,kBAAMwP,GAAQ,IAIA3P,QAAQ,UAAUnC,UAAU,aAEvD,8BAAOsE,IAGT,kBAAC0N,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,EAAajL,KAAK,KAAKmN,SAAS,UACzD,kBAACjC,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kBAAkBsE,GAChC,kBAACuC,GAAA,EAAD,CACE1E,QAAQ,OACRnC,UAAU,oBACVsC,QAASyP,GAET,uBAAG/R,UAAU,mBAGjB,yBAAKA,UAAU,QACb,kBAAC6d,EAAD,CAAMpf,OAAQA,EAAQD,SAAUA,WCuD7BwmB,GA9EMpmB,IAAMC,MAAK,YAA6C,IAA1Cif,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,gBAAiBtf,EAAa,EAAbA,OACvDgL,EAAYC,KAAW,CAC3BuU,QAASvU,OAAaC,SAAS,eAGjC,OACE,kBAAC,KAAD,CACEG,cAAe,CACbmU,QAASF,GAEXhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOxL,OAASA,EAEhB+e,GAA4BvT,GACzB3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,sDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAOgU,QACdjT,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4T,UAAY7T,EAAO6T,QACpC9S,UAAWd,EAAQ4T,WAAa7T,EAAO6T,UAEzC,kBAAC,KAAD,CACEje,UAAU,cACVyE,KAAK,UACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBC2BGwa,GAxFUrmB,IAAMC,MAC7B,YAA6C,IAA1Cif,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,gBAAiBtf,EAAa,EAAbA,OACvBgL,EAAYC,KAAW,CAC3Bwb,YAAaxb,OAEV6U,SAAS,mCACT5U,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACbob,YAAanH,GAEfhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOxL,OAASA,EAEhB+e,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,2DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAACU,GAAA,EAAD,CAAYxe,UAAU,QACpB,kBAAC,KAAK6K,QAAN,CACEC,UAAU,KACVhK,KAAK,SACL2D,KAAK,cACLsG,MAAOd,EAAOib,YACdla,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ6a,cAAgB9a,EAAO8a,YACxC/Z,UAAWd,EAAQ6a,eAAiB9a,EAAO8a,cAE7C,kBAAC1G,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,CAAiBzH,GAAG,gBAApB,aAGJ,kBAAC,KAAD,CACEE,UAAU,cACVyE,KAAK,cACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCiBC0a,GAvFUvmB,IAAMC,MAC7B,YAA6C,IAA1Cif,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,gBAAiBtf,EAAa,EAAbA,OACvBgL,EAAYC,KAAW,CAC3B0b,YAAa1b,OAEV6U,SAAS,mCACT5U,SAAS,eAGd,OACE,kBAAC,KAAD,CACEG,cAAe,CACbsb,YAAarH,GAEfhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOxL,OAASA,EAEhB+e,GAAgCvT,GAC7B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,8DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAACU,GAAA,EAAD,CAAYxe,UAAU,QACpB,kBAAC,KAAK6K,QAAN,CACE/J,KAAK,SACL2D,KAAK,cACLsG,MAAOd,EAAOmb,YACdpa,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ+a,cAAgBhb,EAAOgb,YACxCja,UAAWd,EAAQ+a,eAAiBhb,EAAOgb,cAE7C,kBAAC5G,GAAA,EAAWqD,OAAZ,KACE,kBAACrD,GAAA,EAAWjX,KAAZ,CAAiBzH,GAAG,gBAApB,eAGJ,kBAAC,KAAD,CACEE,UAAU,cACVyE,KAAK,cACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCaC4a,GAlFazmB,IAAMC,MAChC,YAA6C,IAA1Cif,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,gBAAiBtf,EAAa,EAAbA,OACvBgL,EAAYC,KAAW,CAC3BiV,eAAgBjV,OAAaC,SAAS,eAGxC,OACE,kBAAC,KAAD,CACEG,cAAe,CACb6U,eAAgBZ,GAElBhU,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOxL,OAASA,EAEhB+e,GAAmCvT,GAChC3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,8DACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,KAAakT,GACb,kBAAC,KAAKjT,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,iBACLsG,MAAOd,EAAO0U,eACd3T,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQsU,iBAAmBvU,EAAOuU,eAC3CxT,UAAWd,EAAQsU,kBAAoBvU,EAAOuU,iBAEhD,kBAAC,KAAD,CACE3e,UAAU,cACVyE,KAAK,iBACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBChED6a,GAAqB1mB,IAAMC,MAAK,YAAiB,IAAdJ,EAAa,EAAbA,OACxCgL,EAAYC,KAAW,CAC3BuM,aAAcvM,OAAaC,SAAS,aACpC4N,sBAAuB7N,OACvB6b,SAAU7b,OAAaC,SAAS,aAChC6b,SAAU9b,OAAaC,SAAS,aAChC8b,SAAU/b,OAAaC,SAAS,aAChC+b,SAAUhc,OAAaC,SAAS,aAChCgc,eAAgBjc,OAAaC,SAAS,aACtCwP,SAAUzP,SAGZ,OACE,kBAAC,KAAD,CACEI,cAAe,CACbmM,aAAc,GACdsB,sBAAuB,GACvBgO,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBxM,SAAU,IAEZpP,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOgM,aAAehM,EAAOgM,aAAauB,OAC1CvN,EAAOsN,sBAAwBtN,EAAOsN,sBAAsBC,OAC5DvN,EAAOsb,SAAWtb,EAAOsb,SAAS/N,OAClCvN,EAAOub,SAAWvb,EAAOub,SAAShO,OAClCvN,EAAOwb,SAAWxb,EAAOwb,SAASjO,OAClCvN,EAAOyb,SAAWzb,EAAOyb,SAASlO,OAClCvN,EAAO0b,eAAiB1b,EAAO0b,eAAenO,OAC9CvN,EAAO2b,qBAAuB3b,EAAOkP,SAAS3B,OAE9CvN,EAAOxL,OAASA,EAEhB+e,GAAuCvT,GACpC3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,eACLsG,MAAOd,EAAOgM,aACdjL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4L,eAAiB7L,EAAO6L,aACzC9K,UAAWd,EAAQ4L,gBAAkB7L,EAAO6L,eAE9C,kBAAC,KAAD,CACEjW,UAAU,cACVyE,KAAK,eACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,kCACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,wBACLsG,MAAOd,EAAOsN,sBACdvM,SAAUV,EACVW,OAAQV,EACRW,QACEb,EAAQkN,wBAA0BnN,EAAOmN,sBAE3CpM,UACEd,EAAQkN,yBACNnN,EAAOmN,wBAGb,kBAAC,KAAD,CACEvX,UAAU,cACVyE,KAAK,wBACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOsb,SACdva,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkb,WAAanb,EAAOmb,SACrCpa,UAAWd,EAAQkb,YAAcnb,EAAOmb,WAE1C,kBAAC,KAAD,CACEvlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOub,SACdxa,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQmb,WAAapb,EAAOob,SACrCra,UAAWd,EAAQmb,YAAcpb,EAAOob,WAE1C,kBAAC,KAAD,CACExlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOwb,SACdza,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQob,WAAarb,EAAOqb,SACrCta,UAAWd,EAAQob,YAAcrb,EAAOqb,WAE1C,kBAAC,KAAD,CACEzlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOyb,SACd1a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQqb,WAAatb,EAAOsb,SACrCva,UAAWd,EAAQqb,YAActb,EAAOsb,WAE1C,kBAAC,KAAD,CACE1lB,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,iBACLsG,MAAOd,EAAO0b,eACd3a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQsb,iBAAmBvb,EAAOub,eAC3Cxa,UAAWd,EAAQsb,kBAAoBvb,EAAOub,iBAEhD,kBAAC,KAAD,CACE3lB,UAAU,cACVyE,KAAK,iBACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,WACLsG,MAAOd,EAAOkP,SACdnO,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8O,WAAa/O,EAAO+O,SACrChO,UAAWd,EAAQ8O,YAAc/O,EAAO+O,WAE1C,kBAAC,KAAD,CACEnZ,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCvQCob,GAAqBjnB,IAAMC,MAAK,YAAiB,IAAdJ,EAAa,EAAbA,OACxCgL,EAAYC,KAAW,CAC3BuM,aAAcvM,OAAaC,SAAS,aACpC4N,sBAAuB7N,OACvB6O,gBAAiB7O,OAAaC,SAAS,aACvCmc,QAASpc,OACTqc,SAAUrc,OACVyP,SAAUzP,SAGZ,OACE,kBAAC,KAAD,CACEI,cAAe,CACbmM,aAAc,GACdsB,sBAAuB,GACvBgB,gBAAiB,GACjBuN,QAAS,GACTC,SAAU,GACV5M,SAAU,IAEZpP,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOgM,aAAehM,EAAOgM,aAAauB,OAC1CvN,EAAOsN,sBAAwBtN,EAAOsN,sBAAsBC,OAC5DvN,EAAOsO,gBAAkBtO,EAAOsO,gBAAgBf,OAChDvN,EAAO6b,QAAU7b,EAAO6b,QAAQtO,OAChCvN,EAAO8b,SAAW9b,EAAO8b,SAASvO,OAClCvN,EAAOkP,SAAWlP,EAAOkP,SAAS3B,OAClCvN,EAAOxL,OAASA,EAEhB+e,GAA+BvT,GAC5B3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,eACLsG,MAAOd,EAAOgM,aACdjL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4L,eAAiB7L,EAAO6L,aACzC9K,UAAWd,EAAQ4L,gBAAkB7L,EAAO6L,eAE9C,kBAAC,KAAD,CACEjW,UAAU,cACVyE,KAAK,eACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,kCACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,wBACLsG,MAAOd,EAAOsN,sBACdvM,SAAUV,EACVW,OAAQV,EACRW,QACEb,EAAQkN,wBAA0BnN,EAAOmN,sBAE3CpM,UACEd,EAAQkN,yBACNnN,EAAOmN,wBAGb,kBAAC,KAAD,CACEvX,UAAU,cACVyE,KAAK,wBACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,8BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAO6b,QACd9a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQyb,UAAY1b,EAAO0b,QACpC3a,UAAWd,EAAQyb,WAAa1b,EAAO0b,UAEzC,kBAAC,KAAD,CACE9lB,UAAU,cACVyE,KAAK,UACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,kBACLsG,MAAOd,EAAOsO,gBACdvN,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkO,kBAAoBnO,EAAOmO,gBAC5CpN,UAAWd,EAAQkO,mBAAqBnO,EAAOmO,kBAEjD,kBAAC,KAAD,CACEvY,UAAU,cACVyE,KAAK,kBACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,4BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAO8b,SACd/a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ0b,WAAa3b,EAAO2b,SACrC5a,UAAWd,EAAQ0b,YAAc3b,EAAO2b,WAE1C,kBAAC,KAAD,CACE/lB,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,WACLsG,MAAOd,EAAOkP,SACdnO,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8O,WAAa/O,EAAO+O,SACrChO,UAAWd,EAAQ8O,YAAc/O,EAAO+O,WAE1C,kBAAC,KAAD,CACEnZ,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCrMCub,GAAsBpnB,IAAMC,MAAK,YAA2B,IAAxBJ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SAEjDmiB,EAAoB,CACxB,YACA,aACA,YACA,aAGIlX,EAAYC,KAAW,CAC3BuM,aAAcvM,OAAaC,SAAS,aACpC6W,KAAM9W,OAEHC,SAAS,aACT8W,KACC,WACA,qBACA,SAAC1V,GAAD,OAAWA,GAASA,EAAMjE,MAhBb,OAkBd2Z,KACC,aACA,wBACA,SAAC1V,GAAD,OAAWA,GAAS4V,EAAkBC,SAAS7V,EAAMjK,SAEzDyX,gBAAiB7O,OAAaC,SAAS,aACvCmc,QAASpc,OACTqc,SAAUrc,OACVyP,SAAUzP,SAGZ,OACE,kBAAC,KAAD,CACEI,cAAe,CACbmM,aAAc,GACd4J,WAAOgB,EACPL,UAAMK,EACNtI,gBAAiB,GACjBuN,QAAS,GACTC,SAAU,GACV5M,SAAU,IAEZpP,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd,IAAI+b,EAAe,IAAIlF,SACvBkF,EAAajF,OAAO,eAAgB/W,EAAOgM,aAAauB,QACxDyO,EAAajF,OAAO,QAAS/W,EAAO4V,OACpCoG,EAAajF,OAAO,OAAQ/W,EAAOuW,MACnCyF,EAAajF,OAAO,kBAAmB/W,EAAOsO,gBAAgBf,QAC9DyO,EAAajF,OAAO,UAAW/W,EAAO6b,QAAQtO,QAC9CyO,EAAajF,OAAO,WAAY/W,EAAO8b,SAASvO,QAChDyO,EAAajF,OAAO,WAAY/W,EAAOkP,SAAS3B,QAEhDyO,EAAajF,OAAO,SAAUviB,GAC9BwnB,EAAajF,OAAO,WAAYxiB,GAEhCgf,GAAwCyI,GACrC3mB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAmV,EARD,EAQCA,cARD,OAUC,kBAAC,KAAD,CAAMlV,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,eACLsG,MAAOd,EAAOgM,aACdjL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4L,eAAiB7L,EAAO6L,aACzC9K,UAAWd,EAAQ4L,gBAAkB7L,EAAO6L,eAE9C,kBAAC,KAAD,CACEjW,UAAU,cACVyE,KAAK,eACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAAC,KAAK4K,MAAN,cAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,KAGA,2BAAOC,UAAU,QAAjB,+BAEF,kBAAC,KAAK8f,KAAN,CACEC,QAAQ,sBACRC,OAAO,UACPC,MAAOhW,EAAO4V,MAAQ5V,EAAO4V,MAAQ,GACrCK,cAAY,SACZpgB,GAAG,OACH2E,KAAK,OACL3D,KAAK,OACLkK,SAAU,SAACmV,GACTP,EAAc,OAAQO,EAAMC,cAAcC,MAAM,IAChDT,EACE,QACAO,EAAMC,cAAcC,MAAM,GACtBF,EAAMC,cAAcC,MAAM,GAAG5b,KAC7B,KAGRwG,OAAQV,EACR+V,QAAM,IAER,kBAAC,KAAD,CAActgB,UAAU,cAAcyE,KAAK,OAAO2G,UAAU,SAG9D,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,8BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAO6b,QACd9a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQyb,UAAY1b,EAAO0b,QACpC3a,UAAWd,EAAQyb,WAAa1b,EAAO0b,UAEzC,kBAAC,KAAD,CACE9lB,UAAU,cACVyE,KAAK,UACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,kBACLsG,MAAOd,EAAOsO,gBACdvN,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkO,kBAAoBnO,EAAOmO,gBAC5CpN,UAAWd,EAAQkO,mBAAqBnO,EAAOmO,kBAEjD,kBAAC,KAAD,CACEvY,UAAU,cACVyE,KAAK,kBACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,4BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAO8b,SACd/a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ0b,WAAa3b,EAAO2b,SACrC5a,UAAWd,EAAQ0b,YAAc3b,EAAO2b,WAE1C,kBAAC,KAAD,CACE/lB,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,WACLsG,MAAOd,EAAOkP,SACdnO,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8O,WAAa/O,EAAO+O,SACrChO,UAAWd,EAAQ8O,YAAc/O,EAAO+O,WAE1C,kBAAC,KAAD,CACEnZ,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCnOCyb,GAA2BtnB,IAAMC,MAAK,YAAiB,IAAdJ,EAAa,EAAbA,OAC9CgL,EAAYC,KAAW,CAC3BuM,aAAcvM,OAAaC,SAAS,aACpC4N,sBAAuB7N,OACvByc,gBAAiBzc,OAAaC,SAAS,aACvCyc,gBAAiB1c,OAAaC,SAAS,aACvC0c,SAAU3c,OACV4c,SAAU5c,OACV6c,UAAW7c,OACX8c,UAAW9c,OACXyP,SAAUzP,SAGZ,OACE,kBAAC,KAAD,CACEI,cAAe,CACbmM,aAAc,GACdsB,sBAAuB,GACvB4O,gBAAiB,GACjBE,SAAU,GACVE,UAAW,GACXH,gBAAiB,GACjBE,SAAU,GACVE,UAAW,GACXrN,SAAU,IAEZpP,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdD,EAAOgM,aAAehM,EAAOgM,aAAauB,OAC1CvN,EAAOsN,sBAAwBtN,EAAOsN,sBAAsBC,OAC5DvN,EAAOkc,gBAAkBlc,EAAOkc,gBAAgB3O,OAChDvN,EAAOsc,UAAYtc,EAAOoc,SAAS7O,OACnCvN,EAAOsc,UAAYtc,EAAOsc,UAAU/O,OACpCvN,EAAOmc,gBAAkBnc,EAAOmc,gBAAgB5O,OAChDvN,EAAOqc,SAAWrc,EAAOqc,SAAS9O,OAClCvN,EAAOuc,UAAYvc,EAAOuc,UAAUhP,OACpCvN,EAAOkP,SAAWlP,EAAOkP,SAAS3B,OAElCvN,EAAOxL,OAASA,EAEhB+e,GAA6CvT,GAC1C3K,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,kBAAC,KAAD,CAAMC,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,eACLsG,MAAOd,EAAOgM,aACdjL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4L,eAAiB7L,EAAO6L,aACzC9K,UAAWd,EAAQ4L,gBAAkB7L,EAAO6L,eAE9C,kBAAC,KAAD,CACEjW,UAAU,cACVyE,KAAK,eACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,kCACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,wBACLsG,MAAOd,EAAOsN,sBACdvM,SAAUV,EACVW,OAAQV,EACRW,QACEb,EAAQkN,wBAA0BnN,EAAOmN,sBAE3CpM,UACEd,EAAQkN,yBACNnN,EAAOmN,wBAGb,kBAAC,KAAD,CACEvX,UAAU,cACVyE,KAAK,wBACL2G,UAAU,UAKhB,wBAAIpL,UAAU,aAAd,eACA,kBAAC,KAAK4D,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,8BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOoc,SACdrb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQgc,WAAajc,EAAOic,SACrClb,UAAWd,EAAQgc,YAAcjc,EAAOic,WAE1C,kBAAC,KAAD,CACErmB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,kBACLsG,MAAOd,EAAOkc,gBACdnb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8b,kBAAoB/b,EAAO+b,gBAC5Chb,UAAWd,EAAQ8b,mBAAqB/b,EAAO+b,kBAEjD,kBAAC,KAAD,CACEnmB,UAAU,cACVyE,KAAK,kBACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,4BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,YACLsG,MAAOd,EAAOsc,UACdvb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkc,YAAcnc,EAAOmc,UACtCpb,UAAWd,EAAQkc,aAAenc,EAAOmc,YAE3C,kBAAC,KAAD,CACEvmB,UAAU,cACVyE,KAAK,YACL2G,UAAU,UAKhB,wBAAIpL,UAAU,aAAd,eACA,kBAAC,KAAK4D,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,8BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOqc,SACdtb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQic,WAAalc,EAAOkc,SACrCnb,UAAWd,EAAQic,YAAclc,EAAOkc,WAE1C,kBAAC,KAAD,CACEtmB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,kBACLsG,MAAOd,EAAOmc,gBACdpb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ+b,kBAAoBhc,EAAOgc,gBAC5Cjb,UAAWd,EAAQ+b,mBAAqBhc,EAAOgc,kBAEjD,kBAAC,KAAD,CACEpmB,UAAU,cACVyE,KAAK,kBACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,4BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,YACLsG,MAAOd,EAAOuc,UACdxb,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQmc,YAAcpc,EAAOoc,UACtCrb,UAAWd,EAAQmc,aAAepc,EAAOoc,YAE3C,kBAAC,KAAD,CACExmB,UAAU,cACVyE,KAAK,YACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,WACLsG,MAAOd,EAAOkP,SACdnO,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8O,WAAa/O,EAAO+O,SACrChO,UAAWd,EAAQ8O,YAAc/O,EAAO+O,WAE1C,kBAAC,KAAD,CACEnZ,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBC/QCgc,GAA0B7nB,IAAMC,MAAK,YAA2B,IAAxBJ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SAErDmiB,EAAoB,CACxB,YACA,aACA,YACA,aAGIlX,EAAYC,KAAW,CAC3BuM,aAAcvM,OAAaC,SAAS,aACpC6W,KAAM9W,OAEHC,SAAS,aACT8W,KACC,WACA,qBACA,SAAC1V,GAAD,OAAWA,GAASA,EAAMjE,MAhBb,OAkBd2Z,KACC,aACA,wBACA,SAAC1V,GAAD,OAAWA,GAAS4V,EAAkBC,SAAS7V,EAAMjK,SAEzDykB,SAAU7b,OAAaC,SAAS,aAChC6b,SAAU9b,OAAaC,SAAS,aAChC8b,SAAU/b,OAAaC,SAAS,aAChC+b,SAAUhc,OAAaC,SAAS,aAChC4O,gBAAiB7O,OAAaC,SAAS,aACvCmc,QAASpc,OACTqc,SAAUrc,OACVyP,SAAUzP,SAGZ,OACE,kBAAC,KAAD,CACEI,cAAe,CACbmM,aAAc,GACd4J,WAAOgB,EACPL,UAAMK,EACN0E,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVnN,gBAAiB,GACjBuN,QAAS,GACTC,SAAU,GACV5M,SAAU,IAEZpP,iBAAkBN,EAClBO,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GAEd,IAAI+b,EAAe,IAAIlF,SACvBkF,EAAajF,OAAO,eAAgB/W,EAAOgM,aAAauB,QACxDyO,EAAajF,OAAO,QAAS/W,EAAO4V,OACpCoG,EAAajF,OAAO,OAAQ/W,EAAOuW,MACnCyF,EAAajF,OAAO,WAAY/W,EAAOsb,SAAS/N,QAChDyO,EAAajF,OAAO,WAAY/W,EAAOub,SAAShO,QAChDyO,EAAajF,OAAO,WAAY/W,EAAOwb,SAASjO,QAChDyO,EAAajF,OAAO,WAAY/W,EAAOyb,SAASlO,QAChDyO,EAAajF,OAAO,kBAAmB/W,EAAOsO,gBAAgBf,QAC9DyO,EAAajF,OAAO,UAAW/W,EAAO6b,QAAQtO,QAC9CyO,EAAajF,OAAO,WAAY/W,EAAO8b,SAASvO,QAChDyO,EAAajF,OAAO,WAAY/W,EAAOkP,SAAS3B,QAEhDyO,EAAajF,OAAO,SAAUviB,GAC9BwnB,EAAajF,OAAO,WAAYxiB,GAEhCgf,GAAwCyI,GACrC3mB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAChB2B,MAAM,gDACNkF,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNG,MAAM,6CACNsK,GAAc,GACdxK,QAAQC,IAAIF,SAIjB,gBACCwK,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAmV,EARD,EAQCA,cARD,OAUC,kBAAC,KAAD,CAAMlV,YAAU,EAACV,SAAUQ,GAEzB,kBAAC,KAAK5G,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,sBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,eACLsG,MAAOd,EAAOgM,aACdjL,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ4L,eAAiB7L,EAAO6L,aACzC9K,UAAWd,EAAQ4L,gBAAkB7L,EAAO6L,eAE9C,kBAAC,KAAD,CACEjW,UAAU,cACVyE,KAAK,eACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAAC,KAAK4K,MAAN,cAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,KAGA,2BAAOC,UAAU,QAAjB,+BAEF,kBAAC,KAAK8f,KAAN,CACEC,QAAQ,sBACRC,OAAO,UACPC,MAAOhW,EAAO4V,MAAQ5V,EAAO4V,MAAQ,GACrCK,cAAY,SACZpgB,GAAG,OACH2E,KAAK,OACL3D,KAAK,OACLkK,SAAU,SAACmV,GACTP,EAAc,OAAQO,EAAMC,cAAcC,MAAM,IAChDT,EACE,QACAO,EAAMC,cAAcC,MAAM,GACtBF,EAAMC,cAAcC,MAAM,GAAG5b,KAC7B,KAGRwG,OAAQV,EACR+V,QAAM,IAER,kBAAC,KAAD,CAActgB,UAAU,cAAcyE,KAAK,OAAO2G,UAAU,SAG9D,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOsb,SACdva,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkb,WAAanb,EAAOmb,SACrCpa,UAAWd,EAAQkb,YAAcnb,EAAOmb,WAE1C,kBAAC,KAAD,CACEvlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOub,SACdxa,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQmb,WAAapb,EAAOob,SACrCra,UAAWd,EAAQmb,YAAcpb,EAAOob,WAE1C,kBAAC,KAAD,CACExlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOwb,SACdza,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQob,WAAarb,EAAOqb,SACrCta,UAAWd,EAAQob,YAAcrb,EAAOqb,WAE1C,kBAAC,KAAD,CACEzlB,UAAU,cACVyE,KAAK,WACL2G,UAAU,SAGd,kBAAC,KAAKT,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAOyb,SACd1a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQqb,WAAatb,EAAOsb,SACrCva,UAAWd,EAAQqb,YAActb,EAAOsb,WAE1C,kBAAC,KAAD,CACE1lB,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,CAAU5D,UAAU,QAClB,kBAACuD,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,8BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,UACLsG,MAAOd,EAAO6b,QACd9a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQyb,UAAY1b,EAAO0b,QACpC3a,UAAWd,EAAQyb,WAAa1b,EAAO0b,UAEzC,kBAAC,KAAD,CACE9lB,UAAU,cACVyE,KAAK,UACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,iBAEE,4BAAQ5K,UAAU,cAAcD,MAAM,aAAtC,MAIF,kBAAC,KAAK8K,QAAN,CACEC,UAAU,MACVhK,KAAK,OACL2D,KAAK,kBACLsG,MAAOd,EAAOsO,gBACdvN,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQkO,kBAAoBnO,EAAOmO,gBAC5CpN,UAAWd,EAAQkO,mBAAqBnO,EAAOmO,kBAEjD,kBAAC,KAAD,CACEvY,UAAU,cACVyE,KAAK,kBACL2G,UAAU,SAGd,kBAAC7H,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,KAAK+G,MAAN,4BACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,KACVhK,KAAK,OACL2D,KAAK,WACLsG,MAAOd,EAAO8b,SACd/a,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ0b,WAAa3b,EAAO2b,SACrC5a,UAAWd,EAAQ0b,YAAc3b,EAAO2b,WAE1C,kBAAC,KAAD,CACE/lB,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKxH,IAAN,KACE,kBAAC,KAAK+G,MAAN,CAAYrH,GAAIC,KACd,kBAAC,KAAKqH,MAAN,mBACA,kBAAC,KAAKC,QAAN,CACEC,UAAU,MACVhK,KAAK,OACLwC,GAAG,WACHgI,KAAK,IACL7G,KAAK,WACLsG,MAAOd,EAAOkP,SACdnO,SAAUV,EACVW,OAAQV,EACRW,QAASb,EAAQ8O,WAAa/O,EAAO+O,SACrChO,UAAWd,EAAQ8O,YAAc/O,EAAO+O,WAE1C,kBAAC,KAAD,CACEnZ,UAAU,cACVyE,KAAK,WACL2G,UAAU,UAKhB,kBAAC,KAAKT,MAAN,CAAY3K,UAAU,cACpB,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,OAAOrB,KAAK,SAASX,SAAUsK,GAA/C,mBCnRGic,GA7Da9nB,IAAMC,MAAK,YAAuC,IAApCL,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,OAAQkoB,EAAiB,EAAjBA,WAAiB,EAcnD1nB,oBAAS,GAd0C,mBAcpE4S,EAdoE,KAc9DC,EAd8D,KAgBrEC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACjL,GAAA,EAAD,CACEC,KAAK,KACL9G,UAAU,eACVsC,QAPa,kBAAMwP,GAAQ,IAQ3B/R,MAAM,UAEN,uBAAGC,UAAU,kBAGf,kBAACgS,GAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,EAAaqF,UAAQ,GAC9C,kBAACpF,GAAA,EAAMrG,OAAP,CAAc0L,aAAW,GACvB,kBAACrF,GAAA,EAAM1K,MAAP,KACE,uBAAGtH,UAAU,qCADf,gBAKF,kBAACgS,GAAA,EAAM3K,KAAP,CAAYrH,UAAU,oBACpB,0BAAMA,UAAU,QAAhB,mEAGA,yBAAKA,UAAU,+CACb,kBAAC6G,GAAA,EAAD,CAAQ1E,QAAQ,SAASG,QAzCf,WAClBkb,GAA4B,CAAEhf,WAAUC,SAAQkoB,eAC7CrnB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAItB,MAEhB6G,OAAO6H,SAASuR,YAEjB1e,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAgCF,UAGA,kBAACiH,GAAA,EAAD,CAAQ1E,QAAQ,OAAOnC,UAAU,OAAOsC,QAASyP,GAAjD,mBC7CC6U,GAAsBhoB,IAAMC,MACvC,YAAsC,IAAnCL,EAAkC,EAAlCA,SAAUkZ,EAAwB,EAAxBA,UAAWjZ,EAAa,EAAbA,OACtB,OACE,kBAACmF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,QAAd,kCAC2B0X,EAAUtX,OADrC,MAGA,yBAAKJ,UAAU,2BACb,kBAACmS,GAAA,EAAD,CAAO2R,UAAQ,EAAC+C,SAAO,EAAC/f,KAAK,MAC3B,+BACE,4BACE,wBACE7G,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,kBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,iBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,aAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,6BAIhB,+BACG0X,EAAUrX,KAAI,SAAC8X,GACd,OACE,wBAAI3X,IAAK2X,EAAEnW,KACT,wBAAIhC,UAAU,gBAAgBmY,EAAElC,cAChC,wBAAIjW,UAAU,gBACXmY,EAAEZ,sBACCY,EAAEZ,sBAAsBjT,KACxB,MAEN,wBAAItE,UAAU,gBACX8mB,OAAO,GAAD,OACF3O,EAAEI,gBAAgB,GAAGS,eADnB,YACqCb,EAAEI,gBAAgB,GAAG9M,OAD1D,YACoE0M,EAAEI,gBAAgB,GAAGW,kBAC9F1B,QAEJ,wBAAIxX,UAAU,gBAAgBmY,EAAEgB,UAChC,wBAAInZ,UAAU,4BACZ,kBAAC,GAAD,CACExB,SAAUA,EACVC,OAAQA,EACRkoB,WAAYxO,EAAEnW,mBC9D3B+kB,GAAgCnoB,IAAMC,MACjD,YAAsC,IAAnC6Y,EAAkC,EAAlCA,UAAWjZ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SACpB,OACE,kBAACoF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,QAAd,6CACsC0X,EAAUtX,OADhD,MAGA,yBAAKJ,UAAU,2BACb,kBAACmS,GAAA,EAAD,CAAO2R,UAAQ,EAAC+C,SAAO,EAAC/f,KAAK,MAC3B,+BACE,4BACE,wBACE7G,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,kBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,UAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,aAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,6BAIhB,+BACG0X,EAAUrX,KAAI,SAAC8X,GACd,OACE,wBAAI3X,IAAK2X,EAAEnW,KACT,wBAAIhC,UAAU,gBAAgBmY,EAAElC,cAChC,wBAAIjW,UAAU,gBACZ,kBAACgE,EAAA,EAAD,CACEC,IAAKkU,EAAEZ,sBAAsBpB,UAC7BtN,MAAM,KACNC,OAAO,KACP9I,UAAU,eAGd,wBAAIA,UAAU,gBACX8mB,OAAO,GAAD,OACF3O,EAAEI,gBAAgB,GAAGS,eADnB,YACqCb,EAAEI,gBAAgB,GAAG9M,OAD1D,YACoE0M,EAAEI,gBAAgB,GAAGW,kBAC9F1B,QAEJ,wBAAIxX,UAAU,gBAAgBmY,EAAEgB,UAChC,wBAAInZ,UAAU,4BACZ,kBAAC,GAAD,CACExB,SAAUA,EACVC,OAAQA,EACRkoB,WAAYxO,EAAEnW,mBCjE3BglB,GAA+BpoB,IAAMC,MAChD,YAAsC,IAAnC6Y,EAAkC,EAAlCA,UAAWjZ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SACpB,OACE,kBAACoF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,QAAd,8CACiC0X,EAAUtX,OAD3C,MAGA,yBAAKJ,UAAU,2BACb,kBAACmS,GAAA,EAAD,CAAO2R,UAAQ,EAAC+C,SAAO,EAAC/f,KAAK,MAC3B,+BACE,4BACE,wBACE7G,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,kBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,iBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,YAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,aAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,6BAIhB,+BACG0X,EAAUrX,KAAI,SAAC8X,GACd,OACE,wBAAI3X,IAAK2X,EAAEnW,KACT,wBAAIhC,UAAU,gBAAgBmY,EAAElC,cAChC,wBAAIjW,UAAU,gBACXmY,EAAEZ,sBACCY,EAAEZ,sBAAsBjT,KACxB,MAEN,wBAAItE,UAAU,gBACXmY,EAAEK,gBAAgBlC,YAAYlW,OAC3B+X,EAAEK,gBAAgBlC,YAAYjW,KAAI,SAACC,EAAG8R,GAAJ,OAChC,kBAAC,IAAMmB,SAAP,CAAgB/S,IAAK4R,GACnB,0BAAMpS,UAAU,QAAhB,UAA2BM,IAC1B6X,EAAEK,gBAAgBlC,YAAYlW,SAC/BgS,EAAM,EAAI,KACR,wBAAIpS,UAAU,aAIpB,MAEN,wBAAIA,UAAU,gBACXmY,EAAEI,gBAAgB,GAAG9M,QAExB,wBAAIzL,UAAU,gBAAgBmY,EAAEgB,UAChC,wBAAInZ,UAAU,4BACZ,kBAAC,GAAD,CACExB,SAAUA,EACVC,OAAQA,EACRkoB,WAAYxO,EAAEnW,mBC/E3BilB,GAA4BroB,IAAMC,MAC7C,YAAsC,IAAnC6Y,EAAkC,EAAlCA,UAAWjZ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SACpB,OACE,kBAACoF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,QAAd,qDAC8C0X,EAAUtX,OADxD,MAGA,yBAAKJ,UAAU,2BACb,kBAACmS,GAAA,EAAD,CAAO2R,UAAQ,EAAC+C,SAAO,EAAC/f,KAAK,MAC3B,+BACE,4BACE,wBACE7G,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,kBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,iBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,6BAIhB,+BACG0X,EAAUrX,KAAI,SAAC8X,GACd,OACE,wBAAI3X,IAAK2X,EAAEnW,KACT,wBAAIhC,UAAU,gBAAgBmY,EAAElC,cAChC,wBAAIjW,UAAU,gBACXmY,EAAEZ,sBACCY,EAAEZ,sBAAsBjT,KACxB,MAEN,wBAAItE,UAAU,gBACXmY,EAAEI,gBAAgBlY,KAAI,SAAC6mB,EAAI9U,GAC1B,OACE,kBAAC,IAAMmB,SAAP,CAAgB/S,IAAK0mB,EAAGllB,KACtB,8BACG8kB,OAAO,GAAD,OACFI,EAAGlO,eADD,YACmBkO,EAAGzb,OADtB,YACgCyb,EAAGhO,kBACxC1B,QAEHW,EAAEI,gBAAgBnY,SAAWgS,EAAM,EAAI,KACtC,wBAAIpS,UAAU,cAMxB,wBAAIA,UAAU,gBAAgBmY,EAAEgB,UAChC,wBAAInZ,UAAU,4BACZ,kBAAC,GAAD,CACExB,SAAUA,EACVC,OAAQA,EACRkoB,WAAYxO,EAAEnW,mBCzE3BmlB,GAA+BvoB,IAAMC,MAChD,YAAsC,IAAnC6Y,EAAkC,EAAlCA,UAAWjZ,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SACpB,OACE,kBAACoF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,wBAAIvD,UAAU,QAAd,8CACiC0X,EAAUtX,OAD3C,MAGA,yBAAKJ,UAAU,2BACb,kBAACmS,GAAA,EAAD,CAAO2R,UAAQ,EAAC+C,SAAO,EAAC/f,KAAK,MAC3B,+BACE,4BACE,wBACE7G,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,kBAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,UAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,YAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,aAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,0BAFZ,cAMA,wBACEC,MAAO,CAAEmG,gBAAiB,WAC1BpG,UAAU,6BAIhB,+BACG0X,EAAUrX,KAAI,SAAC8X,GACd,OACE,wBAAI3X,IAAK2X,EAAEnW,KACT,wBAAIhC,UAAU,gBAAgBmY,EAAElC,cAChC,wBAAIjW,UAAU,gBACZ,kBAACgE,EAAA,EAAD,CACEC,IAAKkU,EAAEZ,sBAAsBpB,UAC7BtN,MAAM,KACNC,OAAO,KACP9I,UAAU,eAGd,wBAAIA,UAAU,gBACXmY,EAAEK,gBAAgBlC,YAAYlW,OAC3B+X,EAAEK,gBAAgBlC,YAAYjW,KAAI,SAACC,EAAG8R,GAAJ,OAChC,kBAAC,IAAMmB,SAAP,CAAgB/S,IAAK4R,GACnB,0BAAMpS,UAAU,QAAhB,UAA2BM,IAC1B6X,EAAEK,gBAAgBlC,YAAYlW,SAC/BgS,EAAM,EAAI,KACR,wBAAIpS,UAAU,aAIpB,MAEN,wBAAIA,UAAU,gBACXmY,EAAEI,gBAAgB,GAAG9M,QAExB,wBAAIzL,UAAU,gBAAgBmY,EAAEgB,UAChC,wBAAInZ,UAAU,4BACZ,kBAAC,GAAD,CACExB,SAAUA,EACVC,OAAQA,EACRkoB,WAAYxO,EAAEnW,mBC2KzBolB,GArOSxoB,IAAMC,MAAK,SAACsG,GAAW,IAAD,EACpBlG,qBADoB,mBACrC8Q,EADqC,KAC/BF,EAD+B,OAGE5Q,mBAAS,IAHX,mBAGrCooB,EAHqC,KAGpBC,EAHoB,OAIoBroB,mBAAS,IAJ7B,mBAIrCsoB,EAJqC,KAIXC,EAJW,OAKkBvoB,mBAAS,IAL3B,mBAKrCwoB,EALqC,KAKZC,EALY,OASxCzoB,mBAAS,IAT+B,mBAO1C0oB,EAP0C,KAQ1CC,EAR0C,OAaxC3oB,mBAAS,IAb+B,mBAW1C4oB,EAX0C,KAY1CC,EAZ0C,KAgD5C,OAjCA1oB,qBAAU,WACR,IAAMX,EAAS0G,EAAM2I,WAAWC,MAAMC,OAAOvP,OAE7C+e,GAAuB/e,GACpBa,MAAK,SAACC,GACLsQ,EAAQtQ,EAAItB,MAEZqpB,EACE/nB,EAAItB,KAAKyZ,UAAUQ,QAAO,kBAAyB,WAAzB,EAAG6P,UAE/BP,EACEjoB,EAAItB,KAAKyZ,UAAUQ,QAAO,kBAAyB,kBAAzB,EAAG6P,UAE/BL,EACEnoB,EAAItB,KAAKyZ,UAAUQ,QAAO,kBAAyB,mBAAzB,EAAG6P,UAE/BH,EACEroB,EAAItB,KAAKyZ,UAAUQ,QAAO,kBAAyB,eAAzB,EAAG6P,UAE/BD,EACEvoB,EAAItB,KAAKyZ,UAAUQ,QACjB,kBAAyB,0BAAzB,EAAG6P,aAIRvoB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAM,4BAIT,IAEImQ,EACL,kBAAC4N,GAAD,CACE5d,MAAM,SACN2c,cAAc,SACdI,SACE,8BACA3X,EAAM2I,WAAWC,MAAMC,OAAOxP,SAC9B,IACA2G,EAAM2I,WAAWC,MAAMC,OAAOuE,SAGhC,kBAACnP,EAAA,EAAD,CAAWoD,OAAK,GAEd,kBAAC5C,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,UACA,4BACG+P,EAAKtL,KACN,kBAAC,GAAD,CACEgb,WAAW,gBACX5B,KAAMmH,GACNlH,UAAU,SACVC,gBAAiBhO,EAAKtL,KACtBhG,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,YAM9C,kBAACmF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,cACA,4BAAK+P,EAAKgB,cAId,kBAACnN,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,eACA,sCACM+P,EAAKiD,SADX,YAEE,kBAAC,GAAD,CACEyM,WAAW,qBACX5B,KAAMoH,GACNnH,UAAU,cACVC,gBAAiBhO,EAAKiD,SACtBvU,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,YAM9C,kBAACmF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,wBACA,wBACEA,UACE+P,EAAK6D,SAAW7D,EAAK2H,UAAUtX,OAAS,cAAgB,MAF5D,UAKM2P,EAAK6D,SALX,cAME,kBAAC,GAAD,CACE6L,WAAW,8BACX5B,KAAMsH,GACNrH,UAAU,uBACVC,gBAAiBhO,EAAK6D,SACtBnV,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,YAM9C,kBAACmF,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,sBACA,sCAAQ+P,EAAK2H,UAAUtX,OAAvB,iBAIJ,kBAACwD,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,KACE,0BAAMvD,UAAU,cAAhB,kBACA,4BACG+P,EAAKR,YACN,kBAAC,GAAD,CACEkQ,WAAW,wBACX5B,KAAMwH,GACNvH,UAAU,iBACVC,gBAAiBhO,EAAKR,YACtB9Q,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,YAM9C,6BACA,wBAAIuB,UAAU,eAAd,oBACA,yBAAKA,UAAU,oDACb,6BACE,kBAAC,GAAD,CACEvB,OAAQsR,EAAK/N,IACb6b,KAAMgI,GACNvhB,KAAK,cAGT,yBAAKtE,UAAU,QACb,kBAAC,GAAD,CACEvB,OAAQsR,EAAK/N,IACbxD,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCqf,KAAMmI,GACN1hB,KAAK,yBAGT,yBAAKtE,UAAU,QACb,kBAAC,GAAD,CACEvB,OAAQsR,EAAK/N,IACb6b,KAAMqI,GACN5hB,KAAK,+BAGT,yBAAKtE,UAAU,QACb,kBAAC,GAAD,CACEvB,OAAQsR,EAAK/N,IACb6b,KAAMyH,GACNhhB,KAAK,2BAGT,yBAAKtE,UAAU,QACb,kBAAC,GAAD,CACEvB,OAAQsR,EAAK/N,IACbxD,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCqf,KAAM4I,GACNniB,KAAK,uCAKV+iB,EAAgBjnB,OACf,kBAACwmB,GAAD,CACEpoB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCkZ,UAAW2P,EACX5oB,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,SAEtC,KACH8oB,EAAyBnnB,OACxB,kBAAC2mB,GAAD,CACEvoB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCkZ,UAAW6P,EACX9oB,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,SAEtC,KACHgpB,EAAwBrnB,OACvB,kBAAC4mB,GAAD,CACExoB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCkZ,UAAW+P,EACXhpB,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,SAEtC,KACHkpB,EAA8BvnB,OAC7B,kBAAC6mB,GAAD,CACEzoB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCkZ,UAAWiQ,EACXlpB,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,SAEtC,KACHopB,EAAiCznB,OAChC,kBAAC+mB,GAAD,CACE3oB,SAAU2G,EAAM2I,WAAWC,MAAMC,OAAOxP,SACxCkZ,UAAWmQ,EACXppB,OAAQ0G,EAAM2I,WAAWC,MAAMC,OAAOvP,SAEtC,KACJ,6BACA,+BAIJ,kBAAC,GAAD,SC/OW,cACb,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOkQ,OAAK,EAACC,KAAK,iBAAiBxD,UAAW4c,KAC9C,kBAAC,IAAD,CACErZ,OAAK,EACLC,KAAK,gCACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAmB2I,WAAY3I,OAEpD,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,qBAAqBxD,UAAW6c,KAGlD,kBAAC,IAAD,CACEtZ,OAAK,EACLC,KAAK,gDACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAkB2I,WAAY3I,OAEnD,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,4CACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC+iB,GAAD,CAAepa,WAAY3I,OAIhD,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,yDACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAc2I,WAAY3I,OAE/C,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,sDACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAiB2I,WAAY3I,OAIlD,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,kBAAkBxD,UAAW0X,KAC/C,kBAAC,IAAD,CACEnU,OAAK,EACLC,KAAK,6BACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAqB2I,WAAY3I,OAEtD,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,yCACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAmB2I,WAAY3I,OAEpD,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,qCACLE,OAAQ,SAAC3J,GAAD,OAAW,kBAAC,GAAD,CAAqB2I,WAAY3I,OAItD,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,kBAAkBxD,UAAWmZ,KAK/C,kBAAC,IAAD,CAAUxV,KAAK,IAAIC,GAAG,qBCvDbmZ,GAdIvpB,IAAMC,MAAK,kBAC5B,kBAAC,GAAgBupB,SAAjB,MACG,SAACjM,GACA,MAAsB,YAAfA,EACL,kBAACkM,GAAD,MACiB,YAAflM,EACF,kBAACmM,GAAD,MAEA,kBAACC,GAAD,YCDOvM,OARH,WACV,OACE,kBAAC,gBAAD,KACE,kBAAC,GAAD,UCIAwM,GAAcC,QACW,cAA7B3jB,OAAO6H,SAAS+b,UAEe,UAA7B5jB,OAAO6H,SAAS+b,UAEhB5jB,OAAO6H,SAAS+b,SAAS3a,MACvB,2DAsCN,SAAS4a,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTtpB,MAAK,SAAA2pB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnqB,QACf8pB,UAAUC,cAAcO,YAI1B5pB,QAAQC,IACN,iHAKEkpB,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBvpB,QAAQC,IAAI,sCAGRkpB,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BzpB,OAAM,SAAAkD,GACLhD,QAAQgD,MAAM,4CAA6CA,M,6DC9ElD+mB,GAlBS,WAA2B,IAA1BzqB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCAChD,OAAQA,EAAOrH,MACb,IAAK,gBACH,MAAO,CACLkB,IAAKmG,EAAOlK,KAAK+D,IACjByC,KAAM0D,EAAOlK,KAAKwG,KAClBC,aAAcyD,EAAOlK,KAAKyG,aAC1BwH,cAAe/D,EAAOlK,KAAKiO,cAC3B9J,MAAO+F,EAAOlK,KAAKmE,MACnB9D,SAAU6J,EAAOlK,KAAKmE,MAAMoC,MAAM,IAAK,GAAG,IAE9C,IAAK,iBACH,OAAO,KACT,QACE,OAAOxF,ICHE0qB,GAXY,WAA2B,IAA1B1qB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCACnD,OAAQA,EAAOrH,MACb,IAAK,iBACH,OAAO,aAAIqH,EAAOlK,MACpB,IAAK,mBACH,OAAO,KACT,QACE,OAAOe,ICOE2qB,GAdQ,WAA2B,IAA1B3qB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCAC/C,OAAQA,EAAOrH,MACb,IAAK,aACH,MAAO,CACLkB,IAAKmG,EAAOlK,KAAK+D,IACjByC,KAAM0D,EAAOlK,KAAKwG,MAEtB,IAAK,eACH,OAAO,KACT,QACE,OAAOzF,ICWE4qB,GArBM,WAA2B,IAA1B5qB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCAC7C,OAAQA,EAAOrH,MACb,IAAK,WACH,OAAOqH,EAAOlK,KAChB,IAAK,cACH,OAAO,6BACFe,GADL,IAEE0V,SAAUvM,EAAOlK,OAErB,IAAK,kBACH,OAAO,6BACFe,GADL,IAEEkb,QAAS/R,EAAOlK,OAEpB,IAAK,aACH,OAAO,KACT,QACE,OAAOe,ICNE6qB,GAXU,WAA2B,IAA1B7qB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCACjD,OAAQA,EAAOrH,MACb,IAAK,aACH,OAAOqH,EAAOlK,KAChB,IAAK,iBACH,OAAO,KACT,QACE,OAAOe,ICIE4qB,GAXM,WAA2B,IAA1B5qB,EAAyB,uDAAjB,KAAMmJ,EAAW,uCAC7C,OAAQA,EAAOrH,MACb,IAAK,aACH,OAAO,EACT,IAAK,cACH,OAAO,EACT,QACE,OAAO9B,ICUE8qB,GATKC,aAAgB,CAClCloB,WACAsC,cACA8J,UACA8B,QACA2E,YACA5V,aCCIkrB,GAAgB,CACpBxpB,IAAK,UACLypB,cAGIC,GAAmBC,aAAeH,GAAeF,IAEjDM,GAAQC,aACZH,GACAplB,OAAOwlB,8BAAgCxlB,OAAOwlB,gCAG1CC,GAAYC,aAAaJ,IAQ/BK,IAAS3b,OACP,kBAAC,IAAD,CAAUsb,MAAOA,IACf,kBAAC,KAAD,CAAaM,QAAS,KAAMH,UAAWA,IACrC,kBAAC,GAAD,QAGJ5kB,SAAS4P,eAAe,SRnBnB,SAAkBsT,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6B,IAAIxpB,GAAwB2D,OAAO6H,SAASlM,MACpDmqB,SAAW9lB,OAAO6H,SAASie,OAIvC,OAGF9lB,OAAOc,iBAAiB,QAAQ,WAC9B,IAAMgjB,EAAK,UAAMznB,GAAN,sBAEPqnB,KAgEV,SAAiCI,EAAOC,GAEtCgC,MAAMjC,EAAO,CACXkC,QAAS,CAAE,iBAAkB,YAE5BxrB,MAAK,SAAAmc,GAEJ,IAAMsP,EAActP,EAASqP,QAAQ9sB,IAAI,gBAEnB,MAApByd,EAASuP,QACO,MAAfD,IAA8D,IAAvCA,EAAY3G,QAAQ,cAG5C0E,UAAUC,cAAckC,MAAM3rB,MAAK,SAAA2pB,GACjCA,EAAaiC,aAAa5rB,MAAK,WAC7BwF,OAAO6H,SAASuR,eAKpByK,GAAgBC,EAAOC,MAG1BrpB,OAAM,WACLE,QAAQC,IACN,oEAvFAwrB,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAckC,MAAM3rB,MAAK,WACjCI,QAAQC,IACN,iHAMJgpB,GAAgBC,EAAOC,OQH/BE,K","file":"static/js/main.ccbe7d9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/salaespera.bfc35e39.png\";","module.exports = __webpack_public_path__ + \"static/media/salonesamplios.b8bc4f11.png\";","module.exports = __webpack_public_path__ + \"static/media/audiovisual.911237c3.png\";","module.exports = __webpack_public_path__ + \"static/media/dosplantas.300aa6a0.png\";","import axios from \"axios\";\r\n\r\nexport default {\r\n  // ==============================================\r\n  // GUEST\r\n  // ==============================================\r\n\r\n  fetchSchoolDropdownItems: () =>\r\n    axios.get(\"/api/guest/fetchSchoolDropdownItems\"),\r\n\r\n  fetchLandingPageCourses: () => axios.get(\"/api/guest/fetchCourses\"),\r\n\r\n  postMessage: (data) => axios.post(\"/api/guest/postMessage\", data),\r\n\r\n  fetchCoursesBySchool: (school) =>\r\n    axios.get(\"/api/guest/fetchCoursesBySchool/\" + school),\r\n\r\n  // ==============================================\r\n  // STUDENTS\r\n  // ==============================================\r\n\r\n  buyCourse: (data) => axios.put(\"/api/student/buyCourse\", data),\r\n\r\n  fetchStudentByUID: (uid) => axios.get(\"/api/student/fetchByUID/\" + uid),\r\n\r\n  registerNewStudent: (data) => axios.post(\"/api/student/new\", data),\r\n\r\n  fetchMessages: (username) => axios.get(\"/api/student/messages/\" + username),\r\n\r\n  fetchUnseeenMessages: (studentId) =>\r\n    axios.get(\"/api/student/messages/unseen/\" + studentId),\r\n\r\n  markAllMessagesSeen: (studentId) =>\r\n    axios.put(\"/api/student/messages/markAllSeen/\" + studentId),\r\n\r\n  // student panel\r\n\r\n  fetchDashboard: (studentId) =>\r\n    axios.get(\"/api/student/fetchDashboard/\" + studentId),\r\n\r\n  // ==============================================\r\n  // COURSES\r\n  // ==============================================\r\n\r\n  fetchCourseInfo: (courseId, studentId) =>\r\n    axios.get(\"/api/course/info/\" + courseId + \"/\" + studentId),\r\n\r\n  // ==============================================\r\n  // EXAMS\r\n  // ==============================================\r\n\r\n  fetchExamInfo: (examId) => axios.get(\"/api/exam/info/\" + examId),\r\n\r\n  registerAttempt: (data) => axios.put(\"/api/exam/registerAttempt\", data),\r\n  registerPerfectGrade: (data) =>\r\n    axios.put(\"/api/exam/registerPerfectGrade\", data),\r\n  registerReward: (data) => axios.put(\"/api/exam/registerReward\", data),\r\n\r\n  unlockExam: (data) => axios.put(\"/api/exam/unlockExam\", data),\r\n\r\n  // ==============================================\r\n  // FREESTYLE\r\n  // ==============================================\r\n\r\n  fetchFreestyle: (topicName) => axios.get(\"/api/freestyle/\" + topicName),\r\n\r\n  registerFreestyleAttempt: (data) =>\r\n    axios.put(\"/api/freestyle/registerAttempt\", data),\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavDropdown, Spinner } from \"react-bootstrap\";\r\nimport \"./coursesdropdown.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst CoursesDropdown = React.memo(() => {\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    API.fetchSchoolDropdownItems()\r\n      .then((res) => setCourses(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error, actualiza la página\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <NavDropdown\r\n      id=\"coursesDropdownTextToggle\"\r\n      title={\r\n        <span id=\"coursesDropdownText\" className=\"px-0\">\r\n          {zenMode ? <s>Cursos</s> : <span>Cursos</span>}\r\n          <i\r\n            className=\"fas fa-chevron-down ml-1\"\r\n            style={{ fontSize: \"13px\" }}\r\n          />\r\n        </span>\r\n      }\r\n      disabled={zenMode ? true : false}\r\n    >\r\n      {courses ? (\r\n        courses.length ? (\r\n          courses.map((c) => (\r\n            <NavDropdown.Item\r\n              key={c}\r\n              href={\"/courses/\" + c}\r\n              className=\"dropdownStyle\"\r\n            >\r\n              {c}\r\n            </NavDropdown.Item>\r\n          ))\r\n        ) : null\r\n      ) : (\r\n        <div className=\"my-2 text-center\">\r\n          <Spinner animation=\"border\" role=\"status\" />\r\n        </div>\r\n      )}\r\n    </NavDropdown>\r\n  );\r\n});\r\n\r\nexport default CoursesDropdown;\r\n","export const loginStudent = (data) => {\r\n  return {\r\n    type: \"student/login\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutStudent = () => {\r\n  return {\r\n    type: \"student/logout\",\r\n  };\r\n};\r\n","import fbApp from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nexport default fbApp.initializeApp(config);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavDropdown, Badge } from \"react-bootstrap\";\r\nimport \"./studentdropdown.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as studentActions from \"../../../redux/actions/student\";\r\nimport firebase from \"../../../firebase/firebase\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst StudentDropdown = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const student = useSelector((state) => state.student);\r\n\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(studentActions.logoutStudent());\r\n        alert(\"¡Adiós, vuelve pronto!\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const [unseen, setUnseen] = useState();\r\n\r\n  useEffect(() => {\r\n    API.fetchUnseeenMessages(student._id)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setUnseen(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error al cargar tus mensajes, actualiza la página\");\r\n      });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <NavDropdown\r\n      id=\"studentDropdownToggle\"\r\n      alignRight\r\n      title={\r\n        <span id=\"studentDropdownText\">\r\n          {unseen > 0 ? (\r\n            <Badge variant=\"danger\" className=\"mr-1\" title=\"Nuevos mensajes\">\r\n              {unseen}\r\n            </Badge>\r\n          ) : null}\r\n          {student ? (\r\n            zenMode ? (\r\n              <s>{student.email}</s>\r\n            ) : (\r\n              <span>{student.email}</span>\r\n            )\r\n          ) : null}\r\n          <i\r\n            className=\"fas fa-chevron-down ml-1\"\r\n            style={{ fontSize: \"13px\" }}\r\n          />\r\n        </span>\r\n      }\r\n      disabled={zenMode ? true : false}\r\n    >\r\n      <NavDropdown.Item href=\"/dashboard\" className=\"dropdownStyle\">\r\n        Mis cursos\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item href=\"/messages\" className=\"dropdownStyle\">\r\n        {unseen > 0 ? (\r\n          <Badge variant=\"danger\" className=\"mr-1\" title=\"Nuevos mensajes\">\r\n            {unseen}\r\n          </Badge>\r\n        ) : null}\r\n        Mis mensajes\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Divider />\r\n      <NavDropdown.Item onClick={logout} className=\"dropdownStyle\">\r\n        Cerrar sesión\r\n      </NavDropdown.Item>\r\n    </NavDropdown>\r\n  );\r\n});\r\n\r\nexport default StudentDropdown;\r\n","import React from \"react\";\r\nimport \"./navbar.scss\";\r\nimport { Navbar, Nav, Col, Container } from \"react-bootstrap\";\r\nimport CoursesDropdown from \"./components/CoursesDropdown\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StudentDropdown from \"./components/StudentDropdown\";\r\n\r\nconst MyNavbar = React.memo(() => {\r\n  const student = useSelector((state) => state.student);\r\n\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  return (\r\n    <Navbar\r\n      fixed=\"top\"\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      id=\"mynavbar\"\r\n      variant=\"dark\"\r\n      className=\"py-2 shadow\"\r\n    >\r\n      {zenMode ? (\r\n        <Navbar.Brand className=\"d-block d-lg-none\">\r\n          <h2 className=\"mb-0 mainLogo zenLogo\">\r\n            <s>MeXmáticas</s>\r\n          </h2>\r\n        </Navbar.Brand>\r\n      ) : (\r\n        <Navbar.Brand href=\"/\" className=\"d-block d-lg-none\">\r\n          <h2 className=\"mb-0 mainLogo\">MeXmáticas</h2>\r\n        </Navbar.Brand>\r\n      )}\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Container className=\"px-0 px-lg-3\">\r\n          {/* left */}\r\n          <Nav as={Col} className=\"d-none d-lg-block pr-0\">\r\n            <div className=\"d-flex flex-row\">\r\n              <CoursesDropdown />\r\n            </div>\r\n          </Nav>\r\n          {/* middle */}\r\n          <Nav as={Col} className=\"d-none d-lg-block text-center pr-0\">\r\n            {zenMode ? (\r\n              <Navbar.Brand>\r\n                <h2 className=\"mb-0 mainLogo zenLogo\">\r\n                  <s>MeXmáticas</s>\r\n                </h2>\r\n              </Navbar.Brand>\r\n            ) : (\r\n              <Navbar.Brand href=\"/\">\r\n                <h2 className=\"mb-0 mainLogo\">MeXmáticas</h2>\r\n              </Navbar.Brand>\r\n            )}\r\n          </Nav>\r\n          {/* right */}\r\n          <Nav\r\n            as={Col}\r\n            className=\"justify-content-end align-items-lg-end mt-2 mt-lg-0 pr-0\"\r\n          >\r\n            {student ? (\r\n              <>\r\n                {/* small */}\r\n                <div className=\"d-block d-lg-none\">\r\n                  <h6\r\n                    className=\"dropdown-header px-0 pb-0\"\r\n                    style={{ color: \"#3d4d53\" }}\r\n                  >\r\n                    CURSOS\r\n                  </h6>\r\n                  <CoursesDropdown />\r\n                  <h6\r\n                    className=\"dropdown-header px-0 pb-0\"\r\n                    style={{ color: \"#3d4d53\" }}\r\n                  >\r\n                    MI USUARIO\r\n                  </h6>\r\n                  <StudentDropdown unseenMessages={student.unseenMessages} />\r\n                </div>\r\n                <div className=\"d-none d-lg-block\">\r\n                  <StudentDropdown unseenMessages={student.unseenMessages} />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Nav.Link className=\"navbarItem mr-lg-4\" href=\"/login\">\r\n                  Inicia Sesión\r\n                </Nav.Link>\r\n                <Nav.Link className=\"navbarItem\" href=\"/signup\">\r\n                  Regístrate\r\n                </Nav.Link>\r\n                <Nav className=\"d-block d-lg-none\">\r\n                  <CoursesDropdown />\r\n                </Nav>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n});\r\n\r\nexport default MyNavbar;\r\n","import React from \"react\";\r\nimport { Image, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./footer.scss\";\r\n\r\nconst MyFooter = React.memo(() => {\r\n  return (\r\n    <footer id=\"myfooter\" className=\"mt-auto\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={3}>\r\n            <h3 id=\"footerLogo\" className=\"mb-0\">\r\n              MeXmáticas\r\n            </h3>\r\n            <p className=\"mb-2 text-light\">\r\n              <em>Matemáticas Simplificadas</em>\r\n            </p>\r\n            <p className=\"mb-1\">\r\n              <a\r\n                href=\"https://www.instagram.com/mexmaticas/?hl=en\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <i\r\n                  className=\"fab fa-instagram mr-3 socials\"\r\n                  title=\"Instagram\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://www.facebook.com/MeXmaticas/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <i\r\n                  className=\"fab fa-facebook-f mr-3 socials\"\r\n                  title=\"Facebook\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://www.youtube.com/mexmaticas\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <i className=\"fab fa-youtube socials\" title=\"Youtube\" />\r\n              </a>\r\n            </p>\r\n            <small>MeXmáticas 2018 ©</small>\r\n          </Col>\r\n          <Col md={3} className=\"mt-3 mt-lg-1\">\r\n            <h5 className=\"footerTitle\">\r\n              <i className=\"far fa-id-card mr-2\" />\r\n              Contacto\r\n            </h5>\r\n            <p className=\"mb-0\">M.C. Luis Rodrigo López Utrera</p>\r\n            <p className=\"mb-0\">229 909 1675</p>\r\n            <p className=\"mb-0\">mexmaticas23@gmail.com</p>\r\n          </Col>\r\n          <Col md={3} className=\"mt-3 mt-lg-1\">\r\n            <h5 className=\"footerTitle\">\r\n              <i className=\"fas fa-home mr-2\" />\r\n              Dirección\r\n            </h5>\r\n            <p className=\"mb-0\">Avenida Graciano Sánchez #5</p>\r\n            <p className=\"mb-0\">Col. Ejido Primero de Mayo Sur</p>\r\n            <p className=\"mb-0\">Boca del Río, Veracruz</p>\r\n          </Col>\r\n          <Col md={3} className=\"mt-3 mt-lg-1\">\r\n            <h5 className=\"footerTitle\">\r\n              <i className=\"far fa-clock mr-2\" />\r\n              Horarios\r\n            </h5>\r\n            <p className=\"mb-0\">Lunes a Viernes: 16:00 a 20:00</p>\r\n            <p className=\"mb-0\">Sábados: 10:00 a 14:00</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Image src=\"/images/footerback.png\" className=\"w-100 footerImg\" />\r\n    </footer>\r\n  );\r\n});\r\n\r\nexport default MyFooter;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./mybreadcrumb.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyBreadcrumb = React.memo(() => {\r\n  const breadcrumb = useSelector((state) => state.breadcrumb);\r\n\r\n  return breadcrumb ? (\r\n    <Container className=\"py-4\" style={{ fontSize: \"15px\" }}>\r\n      {breadcrumb.map((b) =>\r\n        b.link ? (\r\n          <span key={b.text}>\r\n            <a className=\"breadcrumbItem\" href={b.link}>\r\n              {b.text}\r\n            </a>\r\n            <span className=\"mx-2 breadcrumbItem text-muted\">/</span>\r\n          </span>\r\n        ) : (\r\n          <span key={b.text} className=\"text-muted breadcrumbItem\">\r\n            {b.text}\r\n          </span>\r\n        )\r\n      )}\r\n    </Container>\r\n  ) : null;\r\n});\r\n\r\nexport default MyBreadcrumb;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./studentnav.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst StudentNav = React.memo(() => {\r\n  const student = useSelector((state) => state.student);\r\n\r\n  return (\r\n    <div id=\"studentNav\">\r\n      <Container>\r\n        <div className=\"d-flex\">\r\n          <div className=\"d-flex flex-column\">\r\n            <h2 className=\"mb-1 text-white\">\r\n              {student ? student.email.split(\"@\", 1)[0] : null}\r\n            </h2>\r\n            <span className=\"text-light\">\r\n              <i className=\"fas fa-user mr-2\" />\r\n              {student ? student.name + \" \" + student.firstSurname : null}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StudentNav;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./scrollbutton.scss\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass ScrollButton extends PureComponent {\r\n  state = {\r\n    intervalId: 0,\r\n    is_visible: false,\r\n  };\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delayInMs\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (window.pageYOffset > 300) {\r\n      this.setState({\r\n        is_visible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        is_visible: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let scrollComponent = this;\r\n    document.addEventListener(\"scroll\", function (e) {\r\n      scrollComponent.toggleVisibility();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.state.is_visible ? (\r\n      <Fade right>\r\n        <span\r\n          onClick={() => {\r\n            this.scrollToTop();\r\n          }}\r\n          className=\"scroll d-flex align-items-center justify-content-center\"\r\n          title=\"Ir arriba\"\r\n        >\r\n          <i className=\"fas fa-chevron-up\" />\r\n        </span>\r\n      </Fade>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nScrollButton.propTypes = {\r\n  scrollStepInPx: PropTypes.number.isRequired,\r\n  delayInMs: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ScrollButton;\r\n","import React from \"react\";\r\nimport MyNavbar from \"./navbar/MyNavbar\";\r\nimport MyFooter from \"./footer\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./layout.scss\";\r\nimport MyBreadCrumb from \"../components/breadcrumb/MyBreadcrumb\";\r\nimport StudentNav from \"./studentnav/StudentNav\";\r\nimport ScrollButton from \"./scrollbutton\";\r\n\r\n// for public routes\r\nexport const Layout = React.memo(({ children, backgroundColor = \"white\" }) => {\r\n  return (\r\n    <>\r\n      <MyNavbar />\r\n      <div\r\n        className=\"d-flex flex-column marginTop h-100\"\r\n        style={{ backgroundColor }}\r\n      >\r\n        {children}\r\n        <MyFooter />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n\r\n// for protected routes\r\nexport const StudentLayout = React.memo(({ breadcrumb, children }) => {\r\n  return (\r\n    <>\r\n      <MyNavbar />\r\n      <div className=\"marginTop\" />\r\n      <StudentNav />\r\n      <MyBreadCrumb breadcrumb={breadcrumb} />\r\n      {children}\r\n      <ScrollButton scrollStepInPx={150} delayInMs={16.66} />\r\n    </>\r\n  );\r\n});\r\n\r\nStudentLayout.propTypes = {\r\n  breadcrumb: PropTypes.array,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Jumbotron, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"./welcomejumbotron.scss\";\r\n\r\nconst MyJumbotron = React.memo(() => {\r\n  return (\r\n    <Jumbotron fluid className=\"wj_jumboStyle\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 7 }}>\r\n            {/* title */}\r\n            <Fade bottom cascade>\r\n              <h2 className=\"text-left wj_title mb-0\">MATEMÁTICAS</h2>\r\n              <h2 className=\"text-left wj_title\">SIMPLIFICADAS</h2>\r\n              {/* list */}\r\n              <p className=\"mb-1 mt-3 mt-lg-0\">\r\n                <i className=\"fas fa-plus-circle wj_plusIcon\" />\r\n                <span className=\"wj_text\">\r\n                  Cursos de matemáticas para estudiantes de cualquier grado\r\n                  educativo\r\n                </span>\r\n              </p>\r\n              <p className=\"mb-1\">\r\n                <i className=\"fas fa-plus-circle wj_plusIcon\" />\r\n                <span className=\"wj_text\">\r\n                  Miles de ejercicios con explicaciones y videos tutoriales\r\n                </span>\r\n              </p>\r\n              <p className=\"mb-1\">\r\n                <i className=\"fas fa-plus-circle wj_plusIcon\" />\r\n                <span className=\"wj_text\">\r\n                  Aprendiendo matemáticas a tu propio ritmo y con un método\r\n                  único\r\n                </span>\r\n              </p>\r\n            </Fade>\r\n            {/* button */}\r\n            <Button\r\n              size=\"lg\"\r\n              className=\"shadow mt-4 wj_registerButton\"\r\n              href=\"/signup\"\r\n            >\r\n              Regístrate\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n});\r\n\r\nexport default MyJumbotron;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sectiontitle.scss\";\r\n\r\nconst SectionTitle = React.memo(({ title, text }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-left text-md-center sectionTitle mb-4\">{title}</h1>\r\n      <p className=\"text-left text-md-center sectionText pb-3\">{text}</p>\r\n    </div>\r\n  );\r\n});\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst OfferCard = React.memo(({ img, title, text }) => {\r\n  return (\r\n    <Card className=\"bg-transparent border-0\">\r\n      <div className=\"text-center mt-4\">\r\n        <Card.Img variant=\"top\" src={img} alt=\"cursos\" className=\"tc_pic\" />\r\n      </div>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <strong>{title}</strong>\r\n        </Card.Title>\r\n        <Card.Text>{text}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n\r\nOfferCard.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default OfferCard;\r\n","import React from \"react\";\r\nimport { CardDeck, Container } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport SectionTitle from \"../SectionTitle\";\r\nimport OfferCard from \"./components/OfferCard\";\r\nimport \"./threecolumns.scss\";\r\n\r\nconst ThreeColumns = React.memo(() => {\r\n  return (\r\n    <Container className=\"tc_container\">\r\n      <Fade>\r\n        <SectionTitle\r\n          title=\"¿Qué Ofrecemos?\"\r\n          text=\"En MeXmáticas contamos con tres servicios para así poder llegar a más\r\n          estudiantes a nivel local y nacional.\"\r\n        />\r\n        <CardDeck>\r\n          <OfferCard\r\n            img=\"/images/laptop.png\"\r\n            title=\"Cursos en Línea\"\r\n            text=\"Una manera innovadora de aprender matemáticas, nuestra\r\n                plataforma en línea se acopla al programa educativo de la SEP.\"\r\n          />\r\n          <OfferCard\r\n            img=\"/images/document.png\"\r\n            title=\"Método MeXmáticas\"\r\n            text=\"La mejor manera de aprender matemáticas desde sus cimientos, para\r\n            que así seas el número uno en tu clase.\"\r\n          />\r\n          <OfferCard\r\n            img=\"/images/chat.png\"\r\n            title=\"Clases de Regularización\"\r\n            text=\"Abarcamos temas de matemáticas para alumnos de cualquier\r\n            nivel educativo, de manera presencial o en línea.\"\r\n          />\r\n        </CardDeck>\r\n      </Fade>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default ThreeColumns;\r\n","import React from \"react\";\r\nimport { Card, Col, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HomeCard = React.memo(({ courses, link }) => {\r\n  return (\r\n    <Card\r\n      className=\"border rounded shadow-sm\"\r\n      style={{ backgroundColor: \"#f4fbf8\" }}\r\n    >\r\n      <Card.Body>\r\n        <Card.Text className=\"px-0\" as={Col}>\r\n          {courses.map((l) => {\r\n            return (\r\n              <div key={l.title}>\r\n                <div className=\"lead\">\r\n                  <i\r\n                    className=\"fas fa-check-circle mr-2\"\r\n                    style={{ color: \"#48bf84\" }}\r\n                  />\r\n                  <span style={{ fontWeight: 700 }}>{l.title}</span>\r\n                </div>\r\n                <ul>\r\n                  {l.list.map((ll) => {\r\n                    return <li key={ll}>{ll}</li>;\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            );\r\n          })}\r\n        </Card.Text>\r\n        <Card.Text className=\"mt-4\">\r\n          <Button href={link} className=\"shadow-sm seemorebttn\">\r\n            Ir a compras\r\n            <i className=\"fas fa-long-arrow-alt-right ml-2\" />\r\n          </Button>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n\r\nHomeCard.propTypes = {\r\n  courses: PropTypes.array.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HomeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Tab, ListGroup, Spinner } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport HomeCard from \"./components/HomeCard\";\r\nimport SectionTitle from \"../SectionTitle\";\r\nimport \"./ourcourses.scss\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst OurCourses = React.memo(() => {\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    API.fetchLandingPageCourses()\r\n      .then((res) => {\r\n        setCourses(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"oc_jumbo\">\r\n      <Fade>\r\n        {/* title */}\r\n        <SectionTitle\r\n          title=\"Nuestros Cursos\"\r\n          text=\"Cursos de matemáticas para los siguientes niveles educativos.\"\r\n        />\r\n        {/* content */}\r\n        {courses ? (\r\n          courses.length ? (\r\n            <Tab.Container defaultActiveKey={\"#\" + courses[0].school}>\r\n              <Row>\r\n                <Col md={5}>\r\n                  <ListGroup className=\"mb-3 mb-md-0\">\r\n                    {courses.map((c) => {\r\n                      return (\r\n                        <ListGroup.Item\r\n                          key={c.school}\r\n                          action\r\n                          href={\"#\" + c.school}\r\n                          className=\"courseMenuItem shadow-sm rounded border border-lignt\"\r\n                        >\r\n                          <h4 className=\"mb-0\" style={{ fontWeight: 900 }}>\r\n                            <i\r\n                              className=\"fas fa-graduation-cap mr-3\"\r\n                              style={{ color: \"#49bf84\" }}\r\n                            />\r\n                            {c.school}\r\n                          </h4>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md={7}>\r\n                  <Tab.Content>\r\n                    {courses.map((c) => {\r\n                      return (\r\n                        <Tab.Pane key={c.school} eventKey={\"#\" + c.school}>\r\n                          <HomeCard\r\n                            courses={c.courses.map((cc) => {\r\n                              return {\r\n                                title: cc.name,\r\n                                list: [...cc.topicsSummary],\r\n                              };\r\n                            })}\r\n                            link={\"/courses/\" + c.school}\r\n                          />\r\n                        </Tab.Pane>\r\n                      );\r\n                    })}\r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <div className=\"text-center\" style={{ margin: \"150px 0px\" }}>\r\n            <Spinner animation=\"border\" role=\"status\" />\r\n          </div>\r\n        )}\r\n      </Fade>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default OurCourses;\r\n","import React, { useEffect } from \"react\";\r\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport YouTubePlayer from \"youtube-player\";\r\nimport \"./teacherjumbotron.scss\";\r\n\r\nconst TeacherJumbotron = React.memo(() => {\r\n  useEffect(() => {\r\n    // var player1, firstStateChange;\r\n    var player1;\r\n\r\n    player1 = YouTubePlayer(\"player-2\", {\r\n      videoId: \"LssEXs7noKQ\",\r\n      width: 450,\r\n      height: 250,\r\n    });\r\n\r\n    player1\r\n      // Play video is a Promise.\r\n      // 'playVideo' is queued and will execute as soon as player is ready.\r\n      //   .playVideo()\r\n      .stopVideo()\r\n      .then(() => {\r\n        // console.log(\"Iniciando video 2\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Jumbotron className=\"teacherJumbo\" fluid>\r\n      <Container>\r\n        <Row>\r\n          <Col lg={7} className=\"d-flex align-items-center mt-3 mt-lg-0\">\r\n            <Fade cascade>\r\n              <blockquote className=\"blockquote mb-0\">\r\n                <p className=\"lead mb-1 text-muted mb-1\">FUNDADOR</p>\r\n                <h2 style={{ color: \"#4e545b\" }}>\r\n                  \"Nuestro compromiso con cada uno de los cursos se refleja en\r\n                  los resultados obtenidos.\"\r\n                </h2>\r\n                <footer className=\"blockquote-footer mb-3 mb-md-0\">\r\n                  M.C. Luis Rodrigo López Utrera\r\n                </footer>\r\n              </blockquote>\r\n            </Fade>\r\n          </Col>\r\n          <Col lg={5} className=\"d-flex align-items-center\">\r\n            <div id=\"player-2\"></div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n});\r\n\r\nexport default TeacherJumbotron;\r\n","import React from \"react\";\r\nimport { Container, Carousel, Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"./facilitiesjumbotron.scss\";\r\nimport SectionTitle from \"../SectionTitle\";\r\n// images\r\nimport salaespera from \"./images/salaespera.png\";\r\nimport salonesamplios from \"./images/salonesamplios.png\";\r\nimport audiovisual from \"./images/audiovisual.png\";\r\nimport dosplantas from \"./images/dosplantas.png\";\r\n\r\nconst FacilitiesJumbotron = React.memo(() => {\r\n  return (\r\n    <Container className=\"facj_jumbo\">\r\n      <Fade>\r\n        {/* title */}\r\n        <SectionTitle\r\n          title=\"Instalaciones\"\r\n          text=\"En MeXmáticas nos preocupamos por el más mínimo detalle para que\r\n          nuestros alumnos tengan el mejor desempeño.\"\r\n        />\r\n      </Fade>\r\n      <Row>\r\n        <Col>\r\n          <Carousel className=\"shadow\">\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100 rounded\"\r\n                src={salaespera}\r\n                alt={salaespera}\r\n              />\r\n              <Carousel.Caption>\r\n                <h3 className=\"text-white\" style={{ fontWeight: 700 }}>\r\n                  Sala de espera\r\n                </h3>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100 rounded\"\r\n                src={salonesamplios}\r\n                alt={salonesamplios}\r\n              />\r\n              <Carousel.Caption>\r\n                <h3 className=\"text-white\" style={{ fontWeight: 700 }}>\r\n                  Salones amplios\r\n                </h3>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100 rounded\"\r\n                src={audiovisual}\r\n                alt={audiovisual}\r\n              />\r\n              <Carousel.Caption>\r\n                <h3 className=\"text-white\" style={{ fontWeight: 700 }}>\r\n                  Audiovisual\r\n                </h3>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100 rounded\"\r\n                src={dosplantas}\r\n                alt={dosplantas}\r\n              />\r\n              <Carousel.Caption>\r\n                <h3 className=\"text-white\" style={{ fontWeight: 700 }}>\r\n                  2 plantas\r\n                </h3>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default FacilitiesJumbotron;\r\n","import React from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport API from \"../../../../utils/API\";\r\n\r\nconst ContactForm = () => {\r\n  const yupschema = yup.object({\r\n    name: yup.string().required(\"Requerido\"),\r\n    email: yup.string().email(\"Formato inválido\").required(\"Requerido\"),\r\n    subject: yup.string().required(\"Requerido\"),\r\n    body: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        email: \"\",\r\n        subject: \"\",\r\n        body: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        values.source = \"Inicio\";\r\n        API.postMessage(values)\r\n          .then((res) => {\r\n            // console.log(res);\r\n            alert(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* user */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"150\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.name && !errors.name}\r\n                isInvalid={touched.name && !!errors.name}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"name\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* email */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Correo</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"150\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.email && !errors.email}\r\n                isInvalid={touched.email && !!errors.email}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* subject */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Asunto</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue=\"Elige...\"\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                // value={values.subject}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.subject && !errors.subject}\r\n                isInvalid={touched.subject && !!errors.subject}\r\n              >\r\n                <option disabled>Elige...</option>\r\n                <option value=\"Información sobre un curso\">\r\n                  Información sobre un curso\r\n                </option>\r\n                <option value=\"Información sobre costos\">\r\n                  Información sobre costos\r\n                </option>\r\n                <option value=\"Otro\">Otro</option>\r\n              </Form.Control>\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"subject\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* cuerpo */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Mensaje</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                name=\"body\"\r\n                value={values.body}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.body && !errors.body}\r\n                isInvalid={touched.body && !!errors.body}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"body\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"genericButton\"\r\n            >\r\n              Enviar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  Accordion,\r\n  Card,\r\n  Image,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"./faqjumbotron.scss\";\r\nimport ContactForm from \"./components/ContactForm\";\r\n\r\nconst FAQJumbotron = React.memo(() => {\r\n  const question = ({ key, question, answer }) => {\r\n    return (\r\n      <Card className=\"fj_accordionItem border rounded\">\r\n        <Accordion.Toggle\r\n          as={Card.Header}\r\n          eventKey={key}\r\n          className=\"fj_cardHeader\"\r\n        >\r\n          <div className=\"d-flex fj_question\">\r\n            <strong>{question}</strong>\r\n            <i className=\"fas fa-plus ml-auto plusSymbol\" />\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={key}>\r\n          <Card.Body className=\"fj_answer bg-light\">{answer}</Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Image src=\"/images/top.png\" id=\"fj_image\" />\r\n      <Jumbotron className=\"fj_jumbo\" fluid>\r\n        <Container className=\"fj_paddingsides\">\r\n          <Fade>\r\n            <h1 className=\"mb-4 pb-2 text-center\" style={{ fontWeight: 600 }}>\r\n              Preguntas Frecuentes\r\n            </h1>\r\n            <Accordion className=\"px-3 px-lg-0\">\r\n              {question({\r\n                key: 0,\r\n                question: \"¿Los cursos son exclusivos para estudiantes?\",\r\n                answer:\r\n                  \"No, el contenido de MeXmáticas está diseñado y dirigido a todo público independientemente de la edad o grado educativo. Cualquier persona que quiera desarrollar su habilidad numérica puede suscribirse a nuestra plataforma.\",\r\n              })}\r\n              {question({\r\n                key: 1,\r\n                question:\r\n                  \"¿Cuántas veces puedo hacer uso del contenido de cada curso?\",\r\n                answer:\r\n                  \"Al suscribirte al curso de tu elección, podrás hacer uso de los PDFs, ejercicios y videos de manera ilimitada.\",\r\n              })}\r\n              {question({\r\n                key: 2,\r\n                question: \"¿Puedo repetir un curso al terminarlo?\",\r\n                answer:\r\n                  \"Sí. Todo el material que utilizaste durante el curso puede ser reusado cuantas veces quieras hasta que hayas comprendido por completo los temas incluso los exámenes serán diferentes cada vez que los tomes.\",\r\n              })}\r\n              {question({\r\n                key: 3,\r\n                question:\r\n                  \"¿Otorgan algún certificado o reconocimiento al concluir satisfactoriamente los cursos?\",\r\n                answer:\r\n                  \"Por el momento no, sin embargo todos nuestros cursos están basados en el plan de estudios de la SEP.\",\r\n              })}\r\n              {question({\r\n                key: 4,\r\n                question: \"¿Cómo puedo pagar un curso?\",\r\n                answer:\r\n                  \"Mediante una tarjeta de crédito o débito de cualquier banco, también es posible realizar una transferencia electrónica o a través de Pay Pal.\",\r\n              })}\r\n              <Card className=\"fj_accordionItem border rounded\">\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"contactForm\"\r\n                  className=\"fj_cardHeader\"\r\n                >\r\n                  <div className=\"d-flex fj_question\">\r\n                    <strong>\r\n                      ¿Cómo me pongo en contacto con ustedes en caso de\r\n                      presentarse dudas?\r\n                    </strong>\r\n                    <i className=\"fas fa-plus ml-auto plusSymbol\" />\r\n                  </div>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"contactForm\">\r\n                  <Card.Body className=\"fj_answer d-flex flex-column bg-light\">\r\n                    <span className=\"mb-2\">\r\n                      Para cualquier aclaración ya sean preguntas relacionadas\r\n                      al curso, dudas o servicios extras, te invitamos a llenar\r\n                      el siguiente formulario para poder darte una pronta y\r\n                      eficaz atención:\r\n                    </span>\r\n                    <Row>\r\n                      <Col md={{ offset: 2, span: 8 }}>\r\n                        <ContactForm />\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Fade>\r\n        </Container>\r\n      </Jumbotron>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default FAQJumbotron;\r\n","import React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport WelcomeJumbotron from \"./welcomejumbotron\";\r\nimport ThreeColumns from \"./threecolumns\";\r\nimport OurCourses from \"./ourcourses\";\r\nimport TeacherJumbotron from \"./teacherjumbotron\";\r\nimport FacilitiesJumbotron from \"./facilitiesjumbotron\";\r\nimport FAQJumbotron from \"./faqjumbotron/FAQJumbotron\";\r\nimport ScrollButton from \"../../components/scrollbutton\";\r\n\r\nconst Home = React.memo(() => {\r\n  return (\r\n    <Layout>\r\n      <WelcomeJumbotron />\r\n      <ThreeColumns />\r\n      <OurCourses />\r\n      <TeacherJumbotron />\r\n      <FacilitiesJumbotron />\r\n      <FAQJumbotron />\r\n      <ScrollButton scrollStepInPx={150} delayInMs={16.66} />\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst NoMatch = React.memo(() => {\r\n  return (\r\n    <Layout>\r\n      <div className=\"p-4 mt-4 text-center\">\r\n        <Image\r\n          src=\"https://image.flaticon.com/icons/svg/2965/2965549.svg\"\r\n          width=\"175\"\r\n          height=\"175\"\r\n          className=\"mb-3\"\r\n        />\r\n        <h1 className=\"display-1 mb-0\">404</h1>\r\n        <h2>Error, la página que estás buscando no existe</h2>\r\n        <p>\r\n          Regresa a nuestra <a href=\"/\">página principal</a>\r\n        </p>\r\n      </div>\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport firebase from \"../../../firebase/firebase\";\r\nimport * as yup from \"yup\";\r\nimport API from \"../../../utils/API\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as studentActions from \"../../../redux/actions/student\";\r\n\r\nconst SignUpForm = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const yupSchema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(\"Formato de email incorrecto\")\r\n      .required(\"Requerido\"),\r\n    name: yup\r\n      .string()\r\n      .min(2, \"Debe ser más largo que 2 letras\")\r\n      .matches(\r\n        /^[a-zA-Z-zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙñÑ ]+$/,\r\n        \"Sólo letras\"\r\n      )\r\n      .required(\"Requerido\"),\r\n    firstSurname: yup\r\n      .string()\r\n      .min(2, \"Debe ser más largo que 2 letras\")\r\n      .matches(\r\n        /^[a-zA-Z-zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙñÑ ]+$/,\r\n        \"Sólo letras\"\r\n      )\r\n      .required(\"Requerido\"),\r\n    secondSurname: yup\r\n      .string()\r\n      .min(2, \"Debe ser más largo que 2 letras\")\r\n      .matches(\r\n        /^[a-zA-Z-zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙñÑ ]+$/,\r\n        \"Sólo letras\"\r\n      )\r\n      .required(\"Requerido\"),\r\n    password: yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        name: \"\",\r\n        firstSurname: \"\",\r\n        secondSurname: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={yupSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        //////// signup ////////\r\n        firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(values.email, values.password)\r\n          .then((fbRes) => {\r\n            console.log(\"1 - then del createUserWithEmailAndPassword\");\r\n            fbRes.user\r\n              .updateProfile({\r\n                displayName: \"Student\",\r\n              })\r\n              .then(() => {\r\n                console.log(\"2 - then del updateProfile\");\r\n                // add new client to db\r\n                API.registerNewStudent({\r\n                  firebaseUID: fbRes.user.uid,\r\n                  name: values.name,\r\n                  firstSurname: values.firstSurname,\r\n                  secondSurname: values.secondSurname,\r\n                  email: values.email,\r\n                })\r\n                  .then((res) => {\r\n                    console.log(\"3 - then del registerNewStudent\", res.data);\r\n                    API.fetchStudentByUID(fbRes.user.uid)\r\n                      .then((res) => {\r\n                        console.log(\"4 - then del fetchStudentByUID\", res.data);\r\n                        dispatch(studentActions.loginStudent(res.data));\r\n                        alert(`Bienvenido, ${res.data.name}`);\r\n                        window.location.href = \"/dashboard\";\r\n                      })\r\n                      .catch((error) => {\r\n                        alert(\r\n                          \"Ocurrió un error al iniciar sesión, vuelve a intentarlo.\"\r\n                        );\r\n                        console.log(error);\r\n                        setSubmitting(false);\r\n                      });\r\n                  })\r\n                  .catch((err) => {\r\n                    alert(\r\n                      \"Ocurrió un error al editar usuario nuevo, por favor vuelve a intentarlo.\"\r\n                    );\r\n                    console.log(err);\r\n                  });\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.code);\r\n            console.log(err.message);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                <strong>Correo</strong>\r\n                <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"50\"\r\n                placeholder=\"ejemplo@ejemplo.com\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.email && !errors.email}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                <strong>Nombre(s)</strong>\r\n                <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"50\"\r\n                // placeholder=\"Apellido paterno\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.name && !errors.name}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"name\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md={6}>\r\n              <Form.Label>\r\n                <strong>Apellido Paterno</strong>\r\n                <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"50\"\r\n                // placeholder=\"Apellido paterno\"\r\n                type=\"text\"\r\n                name=\"firstSurname\"\r\n                value={values.firstSurname}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.firstSurname && !errors.firstSurname}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"firstSurname\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md={6}>\r\n              <Form.Label>\r\n                <strong>Apellido Materno</strong>\r\n                <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"50\"\r\n                // placeholder=\"Apellido paterno\"\r\n                type=\"text\"\r\n                name=\"secondSurname\"\r\n                value={values.secondSurname}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.secondSurname && !errors.secondSurname}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"secondSurname\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                <strong>Contraseña</strong>\r\n                <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n                <br />\r\n                <small className=\"text-muted\">\r\n                  Las contraseñas deben tener por lo menos 6 caracteres\r\n                </small>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                // placeholder=\"Apellido paterno\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.password && !errors.password}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"password\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Button\r\n            className=\"shadow-sm mt-3 genericButton\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Registrarme\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./signup.scss\";\r\nimport SignUpForm from \"./components/SignUpForm\";\r\n\r\nconst SignUp = React.memo(() => {\r\n  return (\r\n    <Layout>\r\n      <Container id=\"su_container\">\r\n        <Row className=\"px-0 px-lg-3\">\r\n          <Col lg={6} id=\"su_leftCol\" className=\"d-flex flex-column\">\r\n            <h1 className=\"mb-1 display-3 text-light su_title\">Registro</h1>\r\n            <h1 className=\"mb-3 text-light su_title\">\r\n              Aprende matemáticas con nosotros\r\n            </h1>\r\n            <p className=\"text-light mt-auto\">\r\n              ¿Ya tienes cuenta? Accede\r\n              <a href=\"/login\" className=\"text-warning ml-1\">\r\n                aquí\r\n              </a>\r\n            </p>\r\n          </Col>\r\n          <Col lg={6} id=\"su_rightCol\">\r\n            <SignUpForm />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport firebase from \"../../../firebase/firebase\";\r\nimport fbApp from \"firebase/app\";\r\nimport * as yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as studentActions from \"../../../redux/actions/student\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst SignUpForm = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const yupSchema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(\"Formato de email incorrecto\")\r\n      .required(\"Requerido\"),\r\n    password: yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={yupSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        //////// login ////////\r\n        firebase\r\n          .auth()\r\n          .setPersistence(fbApp.auth.Auth.Persistence.LOCAL)\r\n          .then(() => {\r\n            return firebase\r\n              .auth()\r\n              .signInWithEmailAndPassword(values.email, values.password)\r\n              .then((res) => {\r\n                // if anything goes wrong from here, logout the user in firebase\r\n                API.fetchStudentByUID(res.user.uid)\r\n                  .then((res) => {\r\n                    if (res.data) {\r\n                      dispatch(studentActions.loginStudent(res.data));\r\n                      alert(`Iniciaste sesión con éxito, ${res.data.name}`);\r\n                      // window.location.href = \"/dashboard\";\r\n                    } else {\r\n                      alert(\"Ocurrió un error al iniciar sesión.\");\r\n                      firebase.auth().signOut();\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    alert(\"Ocurrió un error al iniciar sesión.\");\r\n                    console.log(error);\r\n                    setSubmitting(false);\r\n                  });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            alert(\r\n              \"Tu correo y/o contraseña son incorrectos. Verifica tus datos y vuelve a intentarlo.\"\r\n            );\r\n            console.log(error.code);\r\n            console.log(error.message);\r\n            setSubmitting(false);\r\n          });\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                <strong>Correo</strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"50\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.email && !errors.email}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                <strong>Contraseña</strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.password && !errors.password}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"password\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Button\r\n            className=\"shadow-sm mt-4 genericButton\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Entrar\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = React.memo(() => {\r\n  return (\r\n    <Layout>\r\n      <Container id=\"log_container\">\r\n        <Row className=\"px-0 px-lg-3\">\r\n          <Col lg={6} id=\"log_leftCol\" className=\"d-flex flex-column\">\r\n            <h2\r\n              className=\"display-3 mb-0 text-light\"\r\n              style={{ fontWeight: 700 }}\r\n            >\r\n              Hola\r\n            </h2>\r\n            <h2 className=\"text-light\">¡Qué bueno verte de vuelta!</h2>\r\n            <p className=\"text-light mt-auto\">\r\n              ¿No tienes cuenta? Crea una\r\n              <a href=\"/signup\" className=\"text-warning ml-1\">\r\n                aquí\r\n              </a>\r\n            </p>\r\n          </Col>\r\n          <Col lg={6} id=\"log_rightCol\">\r\n            <LoginForm />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Badge, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./courseinfocard.scss\";\r\nimport API from \"../../../utils/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CourseInfoCard = React.memo(\r\n  ({ courseId, title, price, topics, lessonCounter }) => {\r\n    const student = useSelector((state) => state.student);\r\n\r\n    const buyCourseSimulation = () => {\r\n      API.buyCourse({ courseId, studentId: student._id })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          alert(\"Has comprado el curso satisfactoriamente\");\r\n          window.location.href = \"/\";\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error, vuelve a intentarlo.\");\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div className=\"mb-4\">\r\n        <Card\r\n          className=\"courseInfoCard border rounded mr-0 mr-lg-4 shadow-sm h-100\"\r\n          style={{ marginTop: \"30px\", backgroundColor: \"#f4fbf8\" }}\r\n        >\r\n          <Card.Body className=\"d-flex flex-column\">\r\n            <div className=\"d-flex flex-row\">\r\n              {/* title */}\r\n              <h2 className=\"pr-2 mb-0\" style={{ color: \"#0f5257\" }}>\r\n                {title}\r\n              </h2>\r\n              {/* topics counter */}\r\n              <Badge className=\"ml-auto d-flex align-items-center courseCounterBadge\">\r\n                {lessonCounter + \" lecciones\"}\r\n              </Badge>\r\n            </div>\r\n            {/* description */}\r\n            <p className=\"mt-4\">\r\n              En la compra de este curso obtienes material didáctico, videos\r\n              exclusivos, asistencia personalizada y cientos de ejercicios sobre\r\n              los siguientes temas:\r\n            </p>\r\n            {/* topics list */}\r\n            {topics.map((l) => {\r\n              return (\r\n                <div key={l}>\r\n                  <i\r\n                    className=\"fas fa-check-circle mr-2\"\r\n                    style={{ color: \"#48bf84\" }}\r\n                  />\r\n                  <span>{l}</span>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"text-center mt-auto\">\r\n              <strong\r\n                className=\"mt-1 lead\"\r\n                style={{\r\n                  color: \"#212529\",\r\n                  backgroundColor: \"#c6d9d7\",\r\n                }}\r\n              >\r\n                Único pago de:\r\n              </strong>\r\n            </div>\r\n            {/* price */}\r\n            <Row>\r\n              <Col>\r\n                <h1 className=\"mb-0 text-center coursePrice\">\r\n                  {\"$\" + price + \" MXN\"}\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            {/* button */}\r\n            <Row>\r\n              <Col md={{ span: 6, offset: 3 }}>\r\n                <Button\r\n                  block\r\n                  className=\"shadow-sm mt-2 mb-3 py-3 buyButton\"\r\n                  onClick={\r\n                    student\r\n                      ? () => buyCourseSimulation()\r\n                      : () =>\r\n                          alert(\r\n                            \"Para comprar un curso es necesario estar registrado\"\r\n                          )\r\n                  }\r\n                  size=\"lg\"\r\n                >\r\n                  Comprar\r\n                  <i className=\"fas fa-cart-plus ml-2\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCourseInfoCard.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  topics: PropTypes.array.isRequired,\r\n  lessonCounter: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CourseInfoCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport ScrollButton from \"../../components/scrollbutton\";\r\nimport { Row, Col, Container, Button, Spinner } from \"react-bootstrap\";\r\nimport CourseInfoCard from \"./components/CourseInfoCard\";\r\nimport API from \"../../utils/API\";\r\nimport \"./courseinfostyle.scss\";\r\n\r\nconst CourseInfo = React.memo((props) => {\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    API.fetchCoursesBySchool(props.routeProps.match.params.course)\r\n      .then((res) => setCourses(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error, actualiza la página\");\r\n      });\r\n  }, [props.routeProps.match.params.course]);\r\n\r\n  const setDescription = () => {\r\n    switch (props.routeProps.match.params.course) {\r\n      case \"Primaria\":\r\n        return \"Compuesto por las bases de la Aritmética este curso es ideal para que los alumnos desde 3er grado hasta 6to desarrollen y practiquen sus habilidades lógico-matemáticas, así como para los estudiantes        que necesiten fortalecer sus bases en Aritmética puedan disponer del curso en cualquier momento del día.\";\r\n      case \"Secundaria\":\r\n        return \"La secundaria es una de las etapas más importantes de la vida ya que es donde empieza la transición de niño a adulto; las matemáticas pueden parecer igual de confusas para un adolescente, sin embargo este curso ha sido diseñado de una forma tal que el alumno aprenda y refuerce los conocimientos básicos del Álgebra y esté preparado para enfrentar los cursos posteriores en preparatoria.\";\r\n      case \"Preparatoria\":\r\n        return \"Independientemente de la carrera por la cual se llegue a decidir, la Trigonometría, Álgebra y Estadística son de los retos que el estudiante en Preparatoria puede llegar a enfrentar, el curso ha sido pensado para acompañar, practicar y aprender estos temas que lo ayudarán a prepararse de tal forma que en su vida universitaria el alumno pueda llevar una vida equilibrada entre asignaciones.\";\r\n      case \"Universidad\":\r\n        return \"lorem ipsum\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout backgroundColor=\"white\">\r\n      <Container\r\n        style={{\r\n          paddingTop: \"40px\",\r\n          marginBottom: \"80px\",\r\n        }}\r\n      >\r\n        {/* back button */}\r\n        <Button className=\"backToHomeBttn\" href=\"/\">\r\n          <i className=\"fas fa-long-arrow-alt-left mr-2\" />\r\n          <span>Regresar</span>\r\n        </Button>\r\n        {/* title */}\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <div className=\"text-center\">\r\n              <h1 className=\"courseinfoheader\">\r\n                {props.routeProps.match.params.course}\r\n              </h1>\r\n            </div>\r\n            <p className=\"lead text-left text-md-center mt-3\">\r\n              {setDescription()}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        {/* courses */}\r\n        <div className=\"d-flex flex-wrap justify-content-center my-3\">\r\n          {courses ? (\r\n            courses.length ? (\r\n              courses.map((c) => (\r\n                <CourseInfoCard\r\n                  key={c._id}\r\n                  courseId={c._id}\r\n                  lessonCounter={c.topics.length}\r\n                  title={c.name}\r\n                  price={c.price}\r\n                  topics={c.topics.reduce((acc, cv) => {\r\n                    acc.push(cv.name);\r\n                    return acc;\r\n                  }, [])}\r\n                />\r\n              ))\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <div className=\"my-4 text-center\" style={{ marginTop: \"150px\" }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Container>\r\n      <ScrollButton scrollStepInPx={150} delayInMs={16.66} />\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default CourseInfo;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport fbApp from \"firebase/app\";\r\nimport \"./adminlogin.scss\";\r\n\r\nconst Login = () => {\r\n  const loginSchema = yup.object({\r\n    email: yup.string().email(\"Formato inválido\").required(\"Requerido\"),\r\n    password: yup.string().min(6, \"Longitud incorrecta\").required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <Container fluid className=\"h-100\" id=\"tlcstyle\">\r\n      <Row>\r\n        <Col md={{ span: 4, offset: 4 }}>\r\n          <h1 className=\"text-center py-3 my-4\" id=\"tllstyle\">\r\n            MexMáticas\r\n          </h1>\r\n          <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              //////// login ////////\r\n              firebase\r\n                .auth()\r\n                .setPersistence(fbApp.auth.Auth.Persistence.SESSION)\r\n                .then(() => {\r\n                  return firebase\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(values.email, values.password)\r\n                    .then((res) => {\r\n                      // console.log(res);\r\n                      alert(\"Bienvenido, administrador.\");\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                  alert(\"Usuario incorrecto\");\r\n                  console.log(error.code);\r\n                  console.log(error.message);\r\n                  setSubmitting(false);\r\n                });\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label className=\"text-light\">\r\n                      Correo electrónico\r\n                      <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                        *\r\n                      </strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      maxLength=\"100\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.email && !errors.email}\r\n                    />\r\n                    <ErrorMessage\r\n                      className=\"text-danger\"\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label className=\"text-light\">\r\n                      Contraseña\r\n                      <strong className=\"ml-1 text-danger\" title=\"Requerido\">\r\n                        *\r\n                      </strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      maxLength=\"15\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.password && !errors.password}\r\n                    />\r\n                    <ErrorMessage\r\n                      className=\"text-danger\"\r\n                      name=\"password\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Button\r\n                  id=\"tlbuttonstyle\"\r\n                  className=\"mt-3 shadow-sm\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Entrar\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LandingPage from \"../pages/landingpage\";\r\nimport NoMatch from \"../pages/nomatch/NoMatch\";\r\nimport SignUp from \"../pages/signup/SignUp\";\r\nimport Login from \"../pages/login/Login\";\r\nimport CourseInfo from \"../pages/courseinfo/CourseInfo\";\r\nimport AdminLogin from \"../admin/login/AdminLogin\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route exact path=\"/signup\" component={SignUp} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n\r\n      <Route\r\n        exact\r\n        path=\"/courses/:course\"\r\n        render={(props) => <CourseInfo routeProps={props} />}\r\n      />\r\n\r\n      <Redirect from=\"/dashboard\" to=\"/\" />\r\n      <Redirect from=\"/course\" to=\"/\" />\r\n\r\n      {/* ================= ADMIN ================= */}\r\n      <Route exact path=\"/admin\" component={AdminLogin} />\r\n\r\n      <Redirect from=\"/admin/*\" to=\"/admin\" />\r\n\r\n      {/* 404 not found */}\r\n      <Route component={NoMatch} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Image, Button, Spinner } from \"react-bootstrap\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst NoCourses = React.memo(() => {\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    API.fetchSchoolDropdownItems()\r\n      .then((res) => setCourses(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error, actualiza la página\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"text-center mt-4\">\r\n      <Image src=\"/images/emptybox.png\" className=\"emptyBox\" />\r\n      <em className=\"d-block lead\" style={{ color: \"#b3b3b3\" }}>\r\n        No tienes cursos en tu cuenta...\r\n      </em>\r\n      <div className=\"d-flex mt-4 justify-content-center\">\r\n        {courses ? (\r\n          courses.length ? (\r\n            courses.map((c) => (\r\n              <Button\r\n                key={c}\r\n                href={\"/courses/\" + c}\r\n                size=\"lg\"\r\n                className=\"shadow mr-3 genericButton\"\r\n              >\r\n                {c}\r\n              </Button>\r\n            ))\r\n          ) : null\r\n        ) : (\r\n          <div>\r\n            <Spinner animation=\"border\" role=\"status\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default NoCourses;\r\n","import React from \"react\";\r\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./dashboardcoursecard.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as courseActions from \"../../../redux/actions/course\";\r\n\r\nconst DashboardCourseCard = React.memo(({ course }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const buttonClicked = async (courseId, courseName) => {\r\n    dispatch(courseActions.setCourse({ _id: courseId, name: courseName }));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"dashboardCourseCard shadow-sm\">\r\n      <Card.Body>\r\n        <Card.Title className=\"d-flex flex-row\">\r\n          <h2 className=\"mb-0\">{course.name}</h2>\r\n        </Card.Title>\r\n        <Card.Text>{course.description}</Card.Text>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        {course.topics.map((ct) => (\r\n          <ListGroupItem\r\n            key={ct._id}\r\n            className=\"d-flex flex-row align-items-center\"\r\n          >\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"p-0 text-left dashboardCourseLink\"\r\n              onClick={() =>\r\n                buttonClicked(course._id, course.name).then(\r\n                  () => (window.location.href = \"/course/#\" + ct.name)\r\n                )\r\n              }\r\n              title={\"Ir a \" + ct.name}\r\n            >\r\n              <strong>\r\n                <i\r\n                  className=\"fas fa-location-arrow mr-2\"\r\n                  style={{ fontSize: \"13px\" }}\r\n                />\r\n                {ct.name}\r\n              </strong>\r\n            </Button>\r\n\r\n            {ct.hasReward ? (\r\n              <i className=\"fas fa-medal text-warning ml-2\" title=\"Aprobado\" />\r\n            ) : null}\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      <Card.Body>\r\n        <Button\r\n          className=\"shadow-sm genericButton\"\r\n          onClick={() =>\r\n            buttonClicked(course._id, course.name).then(\r\n              () => (window.location.href = \"/course\")\r\n            )\r\n          }\r\n        >\r\n          <strong>Abrir</strong>\r\n          <i className=\"fas fa-sign-in-alt ml-2\" />\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n\r\nDashboardCourseCard.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DashboardCourseCard;\r\n","export const setCourse = (data) => {\r\n  return {\r\n    type: \"course/set\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const clearCourse = () => {\r\n  return {\r\n    type: \"course/clear\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DashboardCourseCard from \"./components/DashboardCourseCard\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\n\r\nconst MyCourses = React.memo(({ courses }) => {\r\n  return (\r\n    <CardColumns className=\"mt-4\">\r\n      {courses.map((c) => (\r\n        <DashboardCourseCard key={c._id} course={c} />\r\n      ))}\r\n    </CardColumns>\r\n  );\r\n});\r\n\r\nMyCourses.propTypes = {\r\n  courses: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MyCourses;\r\n","export const setExam = (data) => {\r\n  return {\r\n    type: \"exam/set\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const setResults = (data) => {\r\n  return {\r\n    type: \"exam/setResults\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const clearExam = () => {\r\n  return {\r\n    type: \"exam/clear\",\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport { StudentLayout } from \"../../components/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./dashboard.scss\";\r\nimport NoCourses from \"./NoCourses\";\r\nimport MyCourses from \"./MyCourses\";\r\nimport API from \"../../utils/API\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as breadcrumbActions from \"../../redux/actions/breadcrumb\";\r\nimport * as courseActions from \"../../redux/actions/course\";\r\nimport * as examActions from \"../../redux/actions/exam\";\r\nimport * as zenModeActions from \"../../redux/actions/zenMode\";\r\n\r\nconst Dashboard = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const student = useSelector((state) => state.student);\r\n  const course = useSelector((state) => state.course);\r\n  const exam = useSelector((state) => state.exam);\r\n  const breadcrumb = useSelector((state) => state.breadcrumb);\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  const [myCourses, setMyCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    // clear redux\r\n    if (course) dispatch(courseActions.clearCourse());\r\n    if (exam) dispatch(examActions.clearExam());\r\n    if (breadcrumb) dispatch(breadcrumbActions.clearBreadcrumb());\r\n    if (zenMode) dispatch(zenModeActions.zenModeOff());\r\n\r\n    // fetch student's courses\r\n    if (student) {\r\n      API.fetchDashboard(student._id)\r\n        .then((res) => {\r\n          setMyCourses(res.data.courses);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error inesperado\");\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [student, dispatch]);\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <Container className=\"pb-4\">\r\n        <h2 className=\"studentTitle\">Bienvenido a tus cursos</h2>\r\n        <br />\r\n        {myCourses ? (\r\n          myCourses.length ? (\r\n            <MyCourses courses={myCourses} />\r\n          ) : (\r\n            <NoCourses />\r\n          )\r\n        ) : (\r\n          <div className=\"text-center mt-4 pt-4\">\r\n            <Spinner animation=\"border\" variant=\"success\" />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </StudentLayout>\r\n  );\r\n});\r\n\r\nexport default Dashboard;\r\n","export const setBreadcrumb = (data) => {\r\n  return {\r\n    type: \"breadcrumb/set\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const clearBreadcrumb = () => {\r\n  return {\r\n    type: \"breadcrumb/clear\",\r\n  };\r\n};\r\n","export const zenModeOn = () => {\r\n  return {\r\n    type: \"zenMode/on\",\r\n  };\r\n};\r\n\r\nexport const zenModeOff = () => {\r\n  return {\r\n    type: \"zenMode/off\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport \"./mytopic.scss\";\r\n\r\nconst MyTopic = ({ topicName }) => {\r\n  return (\r\n    <div className=\"mb-1\">\r\n      <Link\r\n        smooth\r\n        to={\"/course/#\" + topicName}\r\n        title={\"Ir a \" + topicName}\r\n        className=\"mytopicstyle\"\r\n      >\r\n        <strong style={{ fontSize: \"17px\" }}>\r\n          <i\r\n            className=\"fas fa-location-arrow mr-2\"\r\n            style={{ fontSize: \"13px\" }}\r\n          />\r\n          {topicName}\r\n        </strong>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nMyTopic.propTypes = {\r\n  topicName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MyTopic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport \"./medaltable.scss\";\r\n\r\nconst MedalTable = ({ rewards }) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      {rewards.map((r) =>\r\n        r.hasReward ? (\r\n          <OverlayTrigger\r\n            key={r.medalName}\r\n            placement=\"top\"\r\n            overlay={\r\n              <Tooltip>\r\n                <strong>{r.medalName}</strong>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <Image\r\n              src={r.link}\r\n              width=\"80\"\r\n              height=\"120\"\r\n              className=\"my-1 mx-3 medalstyle\"\r\n            />\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <Image\r\n            key={r.medalName}\r\n            src=\"/images/emptyMedal.png\"\r\n            width=\"80\"\r\n            height=\"120\"\r\n            className=\"my-1 mx-3 emptyMedalstyle\"\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMedalTable.propTypes = {\r\n  rewards: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MedalTable;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyTopic from \"./badge/MyTopic\";\r\nimport MedalTable from \"./medaltable/MedalTable\";\r\nimport \"./courseintro.scss\";\r\n\r\nconst CourseIntro = React.memo(({ name, topics, rewards }) => {\r\n  return (\r\n    <div id=\"courseintrostyle\">\r\n      <Container>\r\n        {/* topic name */}\r\n        <h1 className=\"display-1 topicNameIntro text-white\">{name}</h1>\r\n        <br />\r\n        <Row>\r\n          {/* temario */}\r\n          <Col lg={6}>\r\n            <h3 style={{ color: \"#828c90\" }} className=\"mb-3\">\r\n              Temario\r\n            </h3>\r\n            {/* <br /> */}\r\n            <div className=\"d-flex flex-column\">\r\n              {topics.map((t) => (\r\n                <MyTopic key={t.name} topicName={t.name} />\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* medallero */}\r\n          <Col lg={6} className=\"mt-4 mt-lg-0 pb-3 pb-lg-0\">\r\n            <h3 style={{ color: \"#828c90\" }} className=\"mb-3\">\r\n              Medallero\r\n            </h3>\r\n            <MedalTable rewards={rewards} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n\r\nCourseIntro.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  topics: PropTypes.array.isRequired,\r\n  rewards: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default CourseIntro;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DifficultyStars = React.memo(({ difficulty }) => {\r\n  const calculateDifficulty = () => {\r\n    switch (difficulty) {\r\n      case \"Basic\":\r\n        return (\r\n          <>\r\n            <i className=\"fas fa-star\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <br />\r\n            <span className=\"text-danger\">\r\n              <strong>Básico</strong>\r\n            </span>\r\n          </>\r\n        );\r\n      case \"Basic-Intermediate\":\r\n        return (\r\n          <>\r\n            <i className=\"fas fa-star\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <br />\r\n            <span className=\"text-danger\">\r\n              <strong>Básico-Intermedio</strong>\r\n            </span>\r\n          </>\r\n        );\r\n      case \"Intermediate\":\r\n        return (\r\n          <>\r\n            <i className=\"fas fa-star\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <br />\r\n            <span className=\"text-danger\">\r\n              <strong>Intermedio</strong>\r\n            </span>\r\n          </>\r\n        );\r\n      case \"Intermediate-Advanced\":\r\n        return (\r\n          <>\r\n            <i className=\"fas fa-star\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"far fa-star ml-1\" />\r\n            <br />\r\n            <span className=\"text-danger\">\r\n              <strong>Intermedio-Avanzado</strong>\r\n            </span>\r\n          </>\r\n        );\r\n      case \"Advanced\":\r\n        return (\r\n          <>\r\n            <i className=\"fas fa-star\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <i className=\"fas fa-star ml-1\" />\r\n            <br />\r\n            <span className=\"text-danger\">\r\n              <strong>Avanzado</strong>\r\n            </span>\r\n          </>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className=\"text-danger\" title=\"Dificultad\">\r\n      {calculateDifficulty()}\r\n    </span>\r\n  );\r\n});\r\n\r\nDifficultyStars.propTypes = {\r\n  difficulty: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DifficultyStars;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nconst LastVisited = React.memo(({ date }) => {\r\n  const formattedDate = date\r\n    ? moment(date).format(\"LLLL\")\r\n    : \"No has presentado este examen\";\r\n\r\n  return (\r\n    <span style={{ fontSize: \"14px\" }} title=\"Último intento\">\r\n      <i className=\"fas fa-calendar-alt mr-2\" />\r\n      {formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1)}\r\n    </span>\r\n  );\r\n});\r\n\r\nexport default LastVisited;\r\n","import React from \"react\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst NotAvailableeBttn = React.memo(() => {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          <Tooltip id=\"tooltip-disabled\">\r\n            Para iniciar este examen es necesario aprobar el nivel previo con 8\r\n            o más\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <span className=\"d-inline-block\">\r\n          <Button\r\n            className=\"shadow-sm genericButton\"\r\n            style={{ pointerEvents: \"none\" }}\r\n            disabled\r\n          >\r\n            <i className=\"fas fa-lock px-3\" />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NotAvailableeBttn;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Table } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nconst Leaderboards = React.memo(({ top10 }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const formattedDate = (date) => moment(date).format(\"LL\");\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={handleShow}\r\n        style={{ fontSize: \"14px\" }}\r\n        className=\"p-0 text-danger\"\r\n      >\r\n        <i className=\"fas fa-trophy mr-2\" />\r\n        Leaderboards\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>\r\n          <div className=\"text-center\">\r\n            <Image\r\n              src=\"/images/trophy.png\"\r\n              lenght=\"75\"\r\n              width=\"75\"\r\n              className=\"mb-2 mt-3\"\r\n            />\r\n            <h2>Leaderboards</h2>\r\n          </div>\r\n          {/* top 10 */}\r\n          {top10.length ? (\r\n            <Table size=\"sm\" className=\"mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"py-2 text-center bg-light border-top-0\">#</th>\r\n                  <th className=\"py-2 text-center bg-light border-top-0\">\r\n                    Puntos\r\n                  </th>\r\n                  <th className=\"py-2 text-center bg-light border-top-0\">\r\n                    Usuario\r\n                  </th>\r\n                  <th className=\"py-2 text-center bg-light border-top-0\">\r\n                    Fecha\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top10.map((t, idx) => (\r\n                  <tr key={t._id}>\r\n                    <td className=\"text-center\">{idx + 1}</td>\r\n                    <td className=\"text-center\">{t.score}</td>\r\n                    <td className=\"text-center\">{t.username}</td>\r\n                    <td className=\"text-right\">{formattedDate(t.date)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"my-4 text-center\">\r\n              <em className=\"text-muted\">No hay scores para mostrar.</em>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"text-center mt-4 mb-2\">\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"shadow-sm\"\r\n              onClick={handleClose}\r\n            >\r\n              Aceptar\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nLeaderboards.propTypes = {\r\n  top10: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Leaderboards;\r\n","import React from \"react\";\r\nimport { Card, Button, Accordion, Row, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport LastVisited from \"./LastVisited\";\r\nimport Leaderboards from \"./modal/Leaderboards\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as examActions from \"../../redux/actions/exam\";\r\n\r\nconst FreestyleCard = React.memo(({ topicName, topicId, freestyle }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const setExamInRedux = async (obj) => {\r\n    dispatch(examActions.setExam(obj));\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header style={{ backgroundColor: \"#e7edee\" }}>\r\n        <Accordion.Toggle\r\n          as={Button}\r\n          variant=\"link\"\r\n          eventKey=\"freestyle\"\r\n          className=\"text-danger\"\r\n        >\r\n          <i className=\"fas fa-bolt mr-2\" />\r\n          <strong>Modo rápido</strong>\r\n        </Accordion.Toggle>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"freestyle\">\r\n        <Card.Body>\r\n          <h2 className=\"mb-3\">Modo rápido</h2>\r\n          {/* description */}\r\n          <strong style={{ fontSize: \"14px\" }} className=\"mb-2 mt-2 d-block\">\r\n            Este es el examen modo rápido\r\n          </strong>\r\n          {/* last visited */}\r\n          <LastVisited date={freestyle.lastVisit} />\r\n          <br />\r\n          {/* duration */}\r\n          <span style={{ fontSize: \"14px\" }} title=\"Duración\">\r\n            <i className=\"fas fa-stopwatch mr-2\" />\r\n            {freestyle.timer + \" mins.\"}\r\n          </span>\r\n          <br />\r\n          <Leaderboards top10={freestyle.top10} />\r\n          <br />\r\n          {/* columns */}\r\n          <Row className=\"my-3\">\r\n            <Col className=\"text-center\">\r\n              <h1 className=\"mb-0 text-danger\">\r\n                <span title=\"Puntuación más alta\">\r\n                  {freestyle.myHighestScore}\r\n                </span>\r\n              </h1>\r\n              <h4>\r\n                <small className=\"text-muted\">Puntos</small>\r\n              </h4>\r\n            </Col>\r\n            <Col className=\"text-center\">\r\n              <h1 className=\"mb-0 text-danger\">\r\n                <span title=\"Número de intentos\">{freestyle.myTryouts}</span>\r\n              </h1>\r\n              <h4>\r\n                <small className=\"text-muted\">Intentos</small>\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n          {/* button */}\r\n          <Button\r\n            variant=\"danger\"\r\n            className=\"shadow-sm\"\r\n            onClick={() =>\r\n              setExamInRedux({\r\n                duration: freestyle.timer,\r\n                name: \"Modo rápido\",\r\n                topicName: topicName,\r\n                topicId: topicId,\r\n              })\r\n                .then(() => (window.location.href = \"/course/freestyle\"))\r\n                .catch((err) => {\r\n                  console.log(\"error\", err);\r\n                  alert(\"Ocurrió un error inesperado\");\r\n                  window.location.href = \"/course\";\r\n                })\r\n            }\r\n          >\r\n            Iniciar\r\n          </Button>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  );\r\n});\r\n\r\nFreestyleCard.propTypes = {\r\n  freestyle: PropTypes.object.isRequired,\r\n  topicName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FreestyleCard;\r\n","import React from \"react\";\r\nimport { Row, Col, Accordion, Button, Card } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport DifficultyStars from \"./DifficultyStars\";\r\nimport LastVisited from \"./LastVisited\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as examActions from \"../../redux/actions/exam\";\r\nimport NotAvailableBttn from \"./buttons/NotAvailableBttn\";\r\nimport FreestyleCard from \"./FreestyleCard\";\r\n\r\nconst ExamsAccordion = React.memo(\r\n  ({ exams, reward, freestyle, topicName, topicId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const setExamInRedux = async (_id, name, difficulty, duration) => {\r\n      dispatch(\r\n        examActions.setExam({\r\n          _id,\r\n          reward,\r\n          name,\r\n          difficulty,\r\n          duration,\r\n          topicName,\r\n          topicId,\r\n        })\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Accordion className=\"shadow-sm\">\r\n        {exams\r\n          .sort((a, b) => a.examOrderNumber - b.examOrderNumber)\r\n          .map((ex, idx) => (\r\n            <React.Fragment key={idx}>\r\n              <Card>\r\n                {/* TITLE */}\r\n                <Card.Header style={{ backgroundColor: \"#e7edee\" }}>\r\n                  <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"link\"\r\n                    eventKey={ex._id}\r\n                  >\r\n                    <i className=\"fas fa-chevron-down mr-2\" />\r\n                    <strong style={{ color: \"#0f5257\" }}>{ex.name}</strong>\r\n                    {/* exam cheked (passed) */}\r\n                    {ex.highestGrade >= 8 ? (\r\n                      <i\r\n                        className=\"fas fa-check-circle text-warning ml-2\"\r\n                        title=\"Aprobado\"\r\n                      />\r\n                    ) : null}\r\n                    {/* crown for perfect grade */}\r\n                    {ex.hasPerfectGrade ? (\r\n                      <i\r\n                        className=\"fas fa-crown text-warning ml-2\"\r\n                        title=\"Calificación perfecta\"\r\n                      />\r\n                    ) : null}\r\n                    {/* locked exam */}\r\n                    {ex.isAvailable ? null : (\r\n                      <i className=\"fas fa-lock ml-2\" title=\"Bloqueado\" />\r\n                    )}\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={ex._id}>\r\n                  <Card.Body>\r\n                    {/* TITLE 2 */}\r\n                    <h2 className=\"mb-2\">{ex.name}</h2>\r\n                    {/* stars */}\r\n                    <DifficultyStars difficulty={ex.difficulty} />\r\n                    {/* description */}\r\n                    <p className=\"mb-2 mt-2\">\r\n                      <strong style={{ fontSize: \"14px\" }}>\r\n                        {ex.description}\r\n                      </strong>\r\n                    </p>\r\n                    {/* latest attempt */}\r\n                    <LastVisited date={ex.latestAttempt} />\r\n                    <br />\r\n                    {/* duration */}\r\n                    <span style={{ fontSize: \"14px\" }} title=\"Duración\">\r\n                      <i className=\"fas fa-stopwatch mr-2\" />\r\n                      {ex.duration + \" minutos\"}\r\n                    </span>\r\n                    <br />\r\n                    {/* question counter */}\r\n                    <span style={{ fontSize: \"14px\" }} title=\"Preguntas\">\r\n                      <i className=\"fas fa-question-circle mr-2\" />\r\n                      {ex.qCounter + \" preguntas\"}\r\n                    </span>\r\n                    {/* columns */}\r\n                    <Row className=\"my-3\">\r\n                      <Col className=\"text-center\">\r\n                        <h1 className=\"mb-0\" style={{ color: \"#48bf84\" }}>\r\n                          <span title=\"Calificación más alta\">\r\n                            {ex.highestGrade}\r\n                          </span>\r\n                        </h1>\r\n                        <h4>\r\n                          <small className=\"text-muted\">Calificación</small>\r\n                        </h4>\r\n                      </Col>\r\n                      <Col className=\"text-center\">\r\n                        <h1 className=\"mb-0\" style={{ color: \"#48bf84\" }}>\r\n                          <span title=\"Número de intentos\">\r\n                            {ex.attemptsCounter}\r\n                          </span>\r\n                        </h1>\r\n                        <h4>\r\n                          <small className=\"text-muted\">Intentos</small>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* go to exam - button */}\r\n                    {ex.isAvailable ? (\r\n                      <Button\r\n                        onClick={() =>\r\n                          setExamInRedux(\r\n                            ex._id,\r\n                            ex.name,\r\n                            ex.difficulty,\r\n                            ex.duration\r\n                          )\r\n                            .then(() => (window.location.href = \"/course/exam\"))\r\n                            .catch((err) => {\r\n                              console.log(\"error\", err);\r\n                              alert(\"Ocurrió un error inesperado\");\r\n                              window.location.href = \"/course\";\r\n                            })\r\n                        }\r\n                        className=\"shadow-sm genericButton\"\r\n                      >\r\n                        Iniciar\r\n                      </Button>\r\n                    ) : (\r\n                      <NotAvailableBttn />\r\n                    )}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              {/* only show freestyle if student has the reward AND it has to be the last card */}\r\n              {exams.length === idx + 1 && freestyle.isAvailable ? (\r\n                <FreestyleCard\r\n                  topicName={topicName}\r\n                  topicId={topicId}\r\n                  freestyle={freestyle}\r\n                />\r\n              ) : null}\r\n            </React.Fragment>\r\n          ))}\r\n      </Accordion>\r\n    );\r\n  }\r\n);\r\n\r\nExamsAccordion.propTypes = {\r\n  exams: PropTypes.array.isRequired,\r\n  reward: PropTypes.object.isRequired,\r\n  freestyle: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ExamsAccordion;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, Modal, Col } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst HelpModal = React.memo(({ courseName, topic }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const student = useSelector((state) => state.student);\r\n\r\n  const yupschema = yup.object({\r\n    body: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return student ? (\r\n    <>\r\n      <Button\r\n        variant=\"info\"\r\n        size=\"sm\"\r\n        className=\"mb-3 mt-2 mb-lg-0 shadow-sm\"\r\n        onClick={handleShow}\r\n      >\r\n        <i className=\"fas fa-question-circle mr-2\" />\r\n        ¿Necesitas ayuda?\r\n      </Button>\r\n\r\n      <Modal show={show} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Body className=\"bg-light rounded shadow\">\r\n          <div className=\"d-flex flex-column mb-2\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"text-dark mb-3\">¿Necesitas ayuda?</h3>\r\n              <Button\r\n                className=\"ml-auto text-dark\"\r\n                variant=\"link\"\r\n                size=\"sm\"\r\n                title=\"Cerrar\"\r\n                onClick={handleClose}\r\n              >\r\n                <i className=\"fas fa-times\" style={{ fontSize: \"22px\" }} />\r\n              </Button>\r\n            </div>\r\n            <span className=\"mb-2\">\r\n              ¿Tienes duda sobre el curso {topic}, {student.name}?\r\n            </span>\r\n            <span className=\"mb-2\">\r\n              Utiliza el siguiente recuadro para hacerle llegar tu comentario al\r\n              maestro.\r\n            </span>\r\n            <span className=\"mb-2\">\r\n              Recibirás una notificación en la esquina superior derecha (donde\r\n              sale tu correo) cuando tu mensaje sea contestado.\r\n            </span>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              body: \"\",\r\n            }}\r\n            validationSchema={yupschema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              values.email = student.email;\r\n              values.subject = `${courseName} | ${topic}`;\r\n              values.source = \"Tema\";\r\n              values.username = student.username;\r\n              values.name = student.name + \" \" + student.firstSurname;\r\n              API.postMessage(values)\r\n                .then(() => {\r\n                  // console.log(res);\r\n                  alert(\r\n                    \"Tu mensaje ha sido enviado con éxito, la respuesta del maestro te será notificada en la esquina superior derecha, donde aparece tu correo.\"\r\n                  );\r\n                  handleClose();\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                {/* body */}\r\n                <Form.Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Control\r\n                      maxLength=\"250\"\r\n                      type=\"text\"\r\n                      as=\"textarea\"\r\n                      rows=\"5\"\r\n                      name=\"body\"\r\n                      value={values.body}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.body && !errors.body}\r\n                      isInvalid={touched.body && !!errors.body}\r\n                    />\r\n                    <ErrorMessage\r\n                      className=\"text-danger\"\r\n                      name=\"body\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                {/* buttons */}\r\n                <Button\r\n                  variant=\"info\"\r\n                  type=\"submit\"\r\n                  className=\"shadow-sm\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Enviar\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  ) : null;\r\n});\r\n\r\nHelpModal.propTypes = {\r\n  courseName: PropTypes.string.isRequired,\r\n  topic: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HelpModal;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport ExamsAccordion from \"./ExamsAccordion\";\r\nimport HelpModal from \"./help/HelpModal\";\r\n\r\nconst Topic = React.memo(({ courseName, topic }) => {\r\n  return (\r\n    <>\r\n      <Row id={topic.name}>\r\n        {/* title */}\r\n        <Col>\r\n          <h1 className=\"display-4 topicName mb-2\" style={{ color: \"#48bf84\" }}>\r\n            {topic.name}\r\n            {topic.hasReward ? (\r\n              <i\r\n                className=\"fas fa-medal text-warning ml-2\"\r\n                title=\"Aprobado\"\r\n                style={{ fontSize: \"35px\" }}\r\n              />\r\n            ) : null}\r\n          </h1>\r\n          <div className=\"d-flex mb-3\">\r\n            <h3\r\n              className=\"mb-0\"\r\n              style={{ backgroundColor: \"#c6d9d7\", color: \"#212529\" }}\r\n            >\r\n              {topic.subject}\r\n            </h3>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* description and material */}\r\n        <Col lg={6}>\r\n          <p className=\"mb-2\">\r\n            <i className=\"fas fa-bullhorn mr-2 text-dark\" />\r\n            {topic.description}\r\n          </p>\r\n          <div className=\"mb-2\">\r\n            {topic.material.map((mat) => {\r\n              return (\r\n                <p key={mat._id} className=\"mb-1\">\r\n                  <a\r\n                    href={mat.link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-info\"\r\n                  >\r\n                    {mat.type === \"video\" ? (\r\n                      <i className=\"fas fa-video mr-2\" />\r\n                    ) : mat.type === \"pdf\" ? (\r\n                      <i className=\"fas fa-file-pdf mr-2\" />\r\n                    ) : null}\r\n                    {mat.name}\r\n                  </a>\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* help modal */}\r\n          <HelpModal courseName={courseName} topic={topic.name} />\r\n        </Col>\r\n        {/* exams */}\r\n        <Col lg={6} className=\"mt-2 mt-lg-0\">\r\n          <h4 className=\"mb-3\" style={{ color: \"#212529\" }}>\r\n            Exámenes\r\n          </h4>\r\n          <ExamsAccordion\r\n            exams={topic.exams}\r\n            reward={topic.reward}\r\n            topicName={topic.name}\r\n            topicId={topic._id}\r\n            freestyle={{\r\n              ...topic.freestyle,\r\n              isAvailable: topic.hasReward,\r\n              topicId: topic._id,\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n});\r\n\r\nTopic.propTypes = {\r\n  courseName: PropTypes.string.isRequired,\r\n  topic: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Topic;\r\n","export const unlockExam = (data) => {\r\n  return {\r\n    type: \"unlock/new\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const clearUnlockedExam = () => {\r\n  return {\r\n    type: \"unlocked/clear\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Image, Modal, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearUnlockedExam } from \"../../../redux/actions/unlocked\";\r\nimport DifficultyStarts from \"../DifficultyStars\";\r\n\r\nconst ExamUnlocked = React.memo(({ showUnlocked, setShowExamUnlocked_ }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const unlocked = useSelector((state) => state.unlocked);\r\n\r\n  return unlocked ? (\r\n    <>\r\n      <Modal\r\n        // centered\r\n        show={showUnlocked}\r\n        onHide={() => {\r\n          // close modal\r\n          setShowExamUnlocked_(false);\r\n          // clear unlocked on redux\r\n          dispatch(clearUnlockedExam());\r\n        }}\r\n      >\r\n        <Modal.Body className=\"text-center p-4 bg-light\">\r\n          {unlocked.difficulty !== \"Freestyle\" ? (\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"my-2\">\r\n                <Image src=\"/images/lock.png\" width=\"80\" height=\"80\" />\r\n              </div>\r\n              <h3 className=\"mb-2 text-dark\">¡Nuevo examen!</h3>\r\n              <span className=\"mb-1 lead\">\r\n                El examen{\" \"}\r\n                <span style={{ fontWeight: 600 }}>{unlocked.name}</span> ha sido\r\n                desbloqueado\r\n              </span>\r\n              <span className=\"mb-1\">\r\n                Una nueva dificultad de este tema ha sido desbloqueada\r\n              </span>\r\n              <div className=\"mb-3\">\r\n                <DifficultyStarts difficulty={unlocked.difficulty} />\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <Button\r\n                  className=\"shadow-sm genericButton\"\r\n                  onClick={() => {\r\n                    // close modal\r\n                    setShowExamUnlocked_(false);\r\n                    // clear unlocked on redux\r\n                    dispatch(clearUnlockedExam());\r\n                  }}\r\n                >\r\n                  Aceptar\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"my-2\">\r\n                <Image\r\n                  src={unlocked.rewardLink}\r\n                  width=\"100\"\r\n                  height=\"140\"\r\n                  title={unlocked.rewardName}\r\n                />\r\n              </div>\r\n              <h3 className=\"mb-2 text-dark\">¡Felicidades!</h3>\r\n              <span className=\"mb-2 lead\">\r\n                Has obtenido la recompensa{\" \"}\r\n                <span style={{ fontWeight: 600 }}>{unlocked.rewardName}</span>{\" \"}\r\n                que corresponde a aprobar todos los exámenes del tema{\" \"}\r\n                <span style={{ fontWeight: 600 }}>{unlocked.topicName}.</span>\r\n              </span>\r\n              <div className=\"mt-4 pt-3 mb-3\">\r\n                <Image src=\"/images/freestyle.png\" width=\"90\" height=\"90\" />\r\n              </div>\r\n              <span className=\"mb-3\">\r\n                Has desbloqueado la nueva modalidad{\" \"}\r\n                <strong>{unlocked.name}</strong>, donde responderás la mayor\r\n                cantidad de preguntas que puedas sobre el tema{\" \"}\r\n                <strong>{unlocked.topicName}</strong> con un límite de tiempo,\r\n                competirás con los puntos que hagas contra todos los estudiantes\r\n                que han llevado este curso, ¡Mucha suerte!\r\n              </span>\r\n              <div className=\"text-center mt-3 mb-1\">\r\n                <Button\r\n                  className=\"shadow-sm genericButton\"\r\n                  onClick={() => {\r\n                    // close modal\r\n                    setShowExamUnlocked_(false);\r\n                    // clear unlocked on redux\r\n                    dispatch(clearUnlockedExam());\r\n                  }}\r\n                >\r\n                  Aceptar\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  ) : null;\r\n});\r\n\r\nExamUnlocked.propTypes = {\r\n  showUnlocked: PropTypes.bool.isRequired,\r\n  setShowExamUnlocked_: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ExamUnlocked;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spinner, Container } from \"react-bootstrap\";\r\nimport API from \"../utils/API\";\r\nimport \"./course.scss\";\r\nimport { StudentLayout } from \"../components/Layout\";\r\nimport CourseIntro from \"./components/CourseIntro\";\r\nimport Topic from \"./components/Topic\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as breadcrumbActions from \"../redux/actions/breadcrumb\";\r\nimport * as examActions from \"../redux/actions/exam\";\r\nimport * as zenModeActions from \"../redux/actions/zenMode\";\r\nimport ExamUnlocked from \"./components/modal/ExamUnlocked\";\r\n\r\nexport default React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [course, setCourse] = useState();\r\n\r\n  const reduxCourse = useSelector((state) => state.course);\r\n  const reduxStudent = useSelector((state) => state.student);\r\n  const reduxExam = useSelector((state) => state.exam);\r\n  const unlocked = useSelector((state) => state.unlocked);\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  const [showUnlocked, setShowExamUnlocked] = useState(false);\r\n\r\n  const setCourseAsync = async (c) => setCourse(c);\r\n\r\n  useEffect(() => {\r\n    const _hash = props.routeProps.location.hash;\r\n    // decode so there are no problems with tildes\r\n    const hash = _hash ? decodeURI(_hash.replace(\"#\", \"\")) : null;\r\n\r\n    // if a new exam is unlocked, show modal\r\n    if (reduxExam) dispatch(examActions.clearExam());\r\n\r\n    // if there was a new exam unlocked, show it (this covers freestyle as well)\r\n    if (unlocked) setShowExamUnlocked(true);\r\n\r\n    if (zenMode) dispatch(zenModeActions.zenModeOff());\r\n\r\n    // fetch course info\r\n    if (reduxCourse && reduxStudent) {\r\n      API.fetchCourseInfo(reduxCourse._id, reduxStudent._id)\r\n        .then((res) => {\r\n          // setting course in this state (async)\r\n          setCourseAsync(res.data).then(() => {\r\n            // move to the hash position\r\n            if (hash) {\r\n              const element = document.getElementById(hash);\r\n              element.scrollIntoView();\r\n            }\r\n          });\r\n\r\n          // setting bredcrumb\r\n          dispatch(\r\n            breadcrumbActions.setBreadcrumb([\r\n              { text: \"Mis cursos\", link: \"/dashboard\" },\r\n              { text: res.data.name },\r\n            ])\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error al cargar la información del curso.\");\r\n          window.location.href = \"/dashboard\";\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reduxCourse]);\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <ExamUnlocked\r\n        showUnlocked={showUnlocked}\r\n        setShowExamUnlocked_={setShowExamUnlocked}\r\n      />\r\n      {course ? (\r\n        <>\r\n          {/* TOP INTRO */}\r\n          <CourseIntro\r\n            name={course.name}\r\n            topics={course.topics.reduce((acc, cv) => {\r\n              acc.push({ _id: cv._id, subject: cv.subject, name: cv.name });\r\n              return acc;\r\n            }, [])} // only sending \"_id\", \"subject\" and \"name\"\r\n            rewards={course.rewards}\r\n            courseId={course._id}\r\n          />\r\n          {/* TOPICS */}\r\n          <div style={{ paddingBottom: \"100px\" }}>\r\n            {course.topics.map((ct) => (\r\n              <React.Fragment key={ct._id}>\r\n                <hr className=\"mexmaticasDivider\" />\r\n                <div className=\"topicSection\">\r\n                  <Container>\r\n                    <Topic courseName={course.name} topic={ct} />\r\n                  </Container>\r\n                </div>\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center mt-4 pt-4\">\r\n          <Spinner animation=\"border\" variant=\"success\" />\r\n        </div>\r\n      )}\r\n    </StudentLayout>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../../utils/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Timer = React.memo(() => {\r\n  const student = useSelector((state) => state.student);\r\n  const exam = useSelector((state) => state.exam);\r\n\r\n  const [secondsLeft, setSecondsLeft] = useState(exam.duration * 60 + 59);\r\n  const [minutesLeft, setMinutesLeft] = useState(exam.duration);\r\n\r\n  useEffect(() => {\r\n    if ((secondsLeft % 60) / 100 === 0) setMinutesLeft(minutesLeft - 1);\r\n\r\n    if (secondsLeft === 0) {\r\n      // register attempt\r\n      API.registerAttempt({ studentId: student._id, examId: exam._id })\r\n        .then((res) => console.log(res.data))\r\n        .catch((err) => console.log(\"error\", err));\r\n      // alert the user\r\n      alert(\"El tiempo ha finalizado.\");\r\n      // go back\r\n      window.location.href = \"/course\";\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setSecondsLeft(secondsLeft - 1);\r\n    }, 1000);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n\r\n  return (\r\n    <div className=\"text-secondary lead\" title=\"Tiempo restante\">\r\n      <i className=\"fas fa-stopwatch mr-1\" />\r\n      <strong>\r\n        {minutesLeft > 0 ? minutesLeft + \" min.\" : secondsLeft + \" seg.\"}\r\n      </strong>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QInstruction = React.memo(({ qInstruction }) => {\r\n  return (\r\n    <h4 className=\"mb-1 mt-2\">\r\n      <span className=\"text-break\">{qInstruction}</span>\r\n    </h4>\r\n  );\r\n});\r\n\r\nQInstruction.propTypes = {\r\n  qInstruction: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default QInstruction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst QTechnicalInstruction = React.memo(({ type, text, imageLink }) => {\r\n  return type === \"text\" ? (\r\n    <h4>\r\n      <span className=\"text-break\">{text}</span>\r\n    </h4>\r\n  ) : type === \"image\" ? (\r\n    <Image src={imageLink} className=\"mt-2\" width=\"250\" height=\"250\" rounded />\r\n  ) : null;\r\n});\r\n\r\nQTechnicalInstruction.propTypes = {\r\n  type: PropTypes.oneOf([\"text\", \"image\"]).isRequired,\r\n  text: PropTypes.string,\r\n  imageLink: PropTypes.string,\r\n};\r\n\r\nexport default QTechnicalInstruction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Image } from \"react-bootstrap\";\r\n\r\nconst MultipleChoice = React.memo(\r\n  ({\r\n    type,\r\n    textChoices,\r\n    imageChoices,\r\n    getValueFromMultipleChoice,\r\n    choiceSelected,\r\n  }) => {\r\n    return type === \"text\" ? (\r\n      <div className=\"mt-3\">\r\n        {textChoices.map((c) => (\r\n          <Button\r\n            key={c}\r\n            variant=\"outline-secondary\"\r\n            className=\"mr-2 mb-2 mb-md-0\"\r\n            active={choiceSelected === c ? true : false}\r\n            onClick={() => getValueFromMultipleChoice(c)}\r\n          >\r\n            {c}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    ) : type === \"image\" ? (\r\n      <div className=\"mt-3\">\r\n        {imageChoices.map((c) => (\r\n          <Button\r\n            key={c}\r\n            variant=\"outline-secondary\"\r\n            className=\"m-2 mb-2 mb-md-0\"\r\n            active={choiceSelected === c ? true : false}\r\n            onClick={() => getValueFromMultipleChoice(c)}\r\n          >\r\n            <Image src={c} />\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    ) : null;\r\n  }\r\n);\r\n\r\nMultipleChoice.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  textChoices: PropTypes.array,\r\n  imageChoices: PropTypes.array,\r\n  getValueFromMultipleChoice: PropTypes.func.isRequired,\r\n  choiceSelected: PropTypes.string,\r\n};\r\n\r\nexport default MultipleChoice;\r\n","import React from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Progress = React.memo(({ current, total }) => {\r\n  return (\r\n    <ProgressBar\r\n      animated\r\n      min=\"1\"\r\n      max={total}\r\n      variant=\"success\"\r\n      style={{ height: \"1.7rem\" }}\r\n      now={current}\r\n      title=\"Avance\"\r\n      className=\"w-100 rounded-0\"\r\n      // label={`${(current / total) * 100}%`}\r\n    />\r\n  );\r\n});\r\n\r\nProgress.propTypes = {\r\n  current: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ExitButton = React.memo(({ url }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"sm\"\r\n        variant=\"danger\"\r\n        className=\"shadow-sm\"\r\n        onClick={handleShow}\r\n      >\r\n        Abandonar\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} centered className=\"bg-light\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <i className=\"fas fa-exclamation-triangle mr-2\" />\r\n            Advertencia\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"py-4 text-center\">\r\n          <span className=\"lead\">\r\n            ¿Estás seguro que deseas abandonar el examen? Tu avance será borrado\r\n            y tendrás que empezar de nuevo.\r\n          </span>\r\n          <div className=\"d-flex flex-row justify-content-center mt-4\">\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => (window.location.href = url)}\r\n            >\r\n              Abandonar\r\n            </Button>\r\n            <Button variant=\"link\" className=\"ml-2\" onClick={handleClose}>\r\n              Continuar examen\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nExitButton.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ExitButton;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, Modal, Col } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../../../utils/API\";\r\n\r\nconst HelpModalSM = React.memo(({ question }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const student = useSelector((state) => state.student);\r\n  const { topicName, name } = useSelector((state) => state.exam);\r\n\r\n  const yupschema = yup.object({\r\n    body: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return student ? (\r\n    <>\r\n      <Button\r\n        variant=\"info\"\r\n        size=\"sm\"\r\n        className=\"shadow-sm ml-auto mr-2\"\r\n        onClick={handleShow}\r\n      >\r\n        <i className=\"fas fa-question-circle\" />\r\n      </Button>\r\n\r\n      <Modal show={show} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Body className=\"bg-light rounded shadow\">\r\n          <div className=\"d-flex flex-column mb-3\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"text-dark mb-3\">¿Necesitas ayuda?</h3>\r\n              <Button\r\n                className=\"ml-auto text-dark\"\r\n                variant=\"link\"\r\n                size=\"sm\"\r\n                title=\"Cerrar\"\r\n                onClick={handleClose}\r\n              >\r\n                <i className=\"fas fa-times\" style={{ fontSize: \"22px\" }} />\r\n              </Button>\r\n            </div>\r\n            <span className=\"mb-2\">\r\n              ¿Tienes duda sobre esta pregunta, {student.name}?\r\n            </span>\r\n            <span className=\"mb-2\">\r\n              Utiliza el siguiente recuadro para hacerle llegar tu duda al\r\n              maestro.\r\n            </span>\r\n            <span className=\"mb-2\">\r\n              Recibirás una notificación en la esquina superior derecha (donde\r\n              sale tu correo) cuando tu mensaje sea contestado.\r\n            </span>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              body: \"\",\r\n            }}\r\n            validationSchema={yupschema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              values.email = student.email;\r\n\r\n              const description = question.qTechnicalInstruction\r\n                ? question.qTechnicalInstruction.type === \"text\"\r\n                  ? `${question.qInstruction} ${question.qTechnicalInstruction.text}`.trim()\r\n                  : `${question.qInstruction} > ${question.qTechnicalInstruction.imageLink}`.trim()\r\n                : \"\";\r\n\r\n              values.subject = `${topicName} | ${name} | ${description}`;\r\n\r\n              values.source = \"Pregunta\";\r\n              values.username = student.username;\r\n              values.name = student.name + \" \" + student.firstSurname;\r\n              API.postMessage(values)\r\n                .then(() => {\r\n                  alert(\r\n                    \"Tu mensaje ha sido enviado con éxito, la respuesta del maestro te será notificada en la esquina superior derecha, donde aparece tu correo.\"\r\n                  );\r\n                  handleClose();\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                {/* body */}\r\n                <Form.Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Control\r\n                      maxLength=\"250\"\r\n                      type=\"text\"\r\n                      as=\"textarea\"\r\n                      rows=\"5\"\r\n                      name=\"body\"\r\n                      value={values.body}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.body && !errors.body}\r\n                      isInvalid={touched.body && !!errors.body}\r\n                    />\r\n                    <ErrorMessage\r\n                      className=\"text-danger\"\r\n                      name=\"body\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                {/* buttons */}\r\n                <Button\r\n                  variant=\"info\"\r\n                  type=\"submit\"\r\n                  className=\"shadow-sm\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Enviar\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  ) : null;\r\n});\r\n\r\nHelpModalSM.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default HelpModalSM;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Button, Spinner, Container } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as examActions from \"../../redux/actions/exam\";\r\nimport Timer from \"./components/Timer\";\r\nimport QInstruction from \"./components/QInstruction\";\r\nimport QTechnicalInstruction from \"./components/QTechnicalInstruction\";\r\nimport QMultipleChoice from \"./components/QMultipleChoice\";\r\nimport Progress from \"./components/Progress\";\r\nimport ExitButton from \"../../components/exitbutton/ExitButton\";\r\nimport HelpModalSM from \"./components/HelpModalSM\";\r\n\r\nconst QuestionsContainer = React.memo(({ questions }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const exam = useSelector((state) => state.exam);\r\n\r\n  const [number, setNumber] = useState(1);\r\n  const [question, setQuestion] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  // this is where the value from the multiple choice is stored\r\n  const [choice, setChoice] = useState();\r\n  const getValueFromMultipleChoice = (value) => setChoice(value);\r\n\r\n  useEffect(() => {\r\n    // only if number is less than the questions length\r\n    if (number <= questions.length)\r\n      setQuestion(questions.filter((q) => q.qNumber === number)[0]);\r\n\r\n    // check if last\r\n    if (number > questions.length) {\r\n      // save results in redux (so they can be read in the results page)\r\n      dispatch(examActions.setResults(answers));\r\n      // go to results page\r\n      window.location.href = \"/course/exam/results\";\r\n    }\r\n  }, [dispatch, number, answers, questions, choice]);\r\n\r\n  const pushQuestion = () => {\r\n    // get correct answers\r\n    const correctAnswers = question.qCorrectAnswers.reduce((acc, cv) => {\r\n      acc.push(cv.answer);\r\n      return acc;\r\n    }, []);\r\n\r\n    // the behavior will be different depending wether its a multiple choice or regular inputs\r\n    const isMultipleChoice = question.qMultipleChoice ? true : false;\r\n\r\n    // get answer\r\n    let obj;\r\n    if (isMultipleChoice) {\r\n      // the option choosen by the student is stored in the \"choice\" state\r\n      // crate object\r\n      obj = {\r\n        _id: question._id,\r\n        qNumber: question.qNumber,\r\n        qInstruction: question.qInstruction,\r\n        qTechnicalInstruction: question.qTechnicalInstruction,\r\n        qMultipleChoice: question.qMultipleChoice,\r\n        userAnswers:\r\n          question.qMultipleChoice.type === \"text\"\r\n            ? { type: \"text\", answer: choice }\r\n            : { type: \"image\", answer: choice },\r\n        qCorrectAnswers:\r\n          question.qMultipleChoice.type === \"text\"\r\n            ? { type: \"text\", answer: correctAnswers.toString() }\r\n            : { type: \"image\", answer: correctAnswers.toString() },\r\n      };\r\n    } else {\r\n      // get the value from the answer inputs and push them\r\n      const numberOfAnswers = question.qCorrectAnswers.length;\r\n      const userAnswers = [];\r\n      for (var i = 0; i < numberOfAnswers; i++) {\r\n        let a = document.getElementById(\"answer\" + i).value;\r\n        userAnswers.push(a.trim());\r\n      }\r\n      // crate object\r\n      obj = {\r\n        _id: question._id,\r\n        qNumber: question.qNumber,\r\n        qInstruction: question.qInstruction,\r\n        qTechnicalInstruction: question.qTechnicalInstruction,\r\n        qMultipleChoice: question.qMultipleChoice,\r\n        userAnswers: { type: \"text\", answer: userAnswers.toString() },\r\n        qCorrectAnswers: { type: \"text\", answer: correctAnswers.toString() },\r\n      };\r\n    }\r\n\r\n    // push to state\r\n    setAnswers([...answers, obj]);\r\n\r\n    // clear choice and advance to next question\r\n    setChoice();\r\n    setNumber(number + 1);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") pushQuestion();\r\n  };\r\n\r\n  return question ? (\r\n    number > questions.length ? (\r\n      <div className=\"text-center mt-4 pt-4\">\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        {/* question */}\r\n        <Container className=\"mt-3\">\r\n          <div style={{ backgroundColor: \"#e9ecef\" }}>\r\n            <Progress current={number} total={questions.length} />\r\n            <Container>\r\n              <Row>\r\n                <Col\r\n                  lg={{ span: 7, offset: 2 }}\r\n                  className=\"px-3\"\r\n                  style={{ paddingTop: \"15px\", paddingBottom: \"45px\" }}\r\n                >\r\n                  {/* INSTRUCTION */}\r\n                  <QInstruction\r\n                    qNumber={question.qNumber}\r\n                    qInstruction={question.qInstruction}\r\n                  />\r\n\r\n                  {/* TECHNICAL INSTRUCTION */}\r\n                  {question.qTechnicalInstruction ? (\r\n                    <QTechnicalInstruction\r\n                      type={question.qTechnicalInstruction.type}\r\n                      text={question.qTechnicalInstruction.text}\r\n                      imageLink={question.qTechnicalInstruction.imageLink}\r\n                    />\r\n                  ) : null}\r\n\r\n                  {/* MULTIPLE CHOICES OR ANSWER INPUTS */}\r\n                  {question.qMultipleChoice ? (\r\n                    <QMultipleChoice\r\n                      type={question.qMultipleChoice.type}\r\n                      textChoices={question.qMultipleChoice.textChoices}\r\n                      imageChoices={question.qMultipleChoice.imageChoices}\r\n                      choiceSelected={choice}\r\n                      getValueFromMultipleChoice={getValueFromMultipleChoice}\r\n                    />\r\n                  ) : (\r\n                    question.qCorrectAnswers.map((ca, idx) => (\r\n                      <div key={ca._id} className=\"d-flex flex-row mt-3 mb-2\">\r\n                        {/* LEFT question complement (if any) */}\r\n                        {ca.complementLeft ? (\r\n                          <h4 className=\"mr-2 mb-0\">\r\n                            <small>{ca.complementLeft}</small>\r\n                          </h4>\r\n                        ) : null}\r\n                        {/* input */}\r\n                        <input\r\n                          type=\"text\"\r\n                          maxLength=\"20\"\r\n                          // ref={inputRef}\r\n                          onKeyDown={handleKeyDown}\r\n                          className=\"border rounded px-2\"\r\n                          id={\"answer\" + idx}\r\n                        />\r\n                        {/* RIGHT question complement (if any) */}\r\n                        {ca.complementRight ? (\r\n                          <h4 className=\"ml-2 mb-0\">\r\n                            <small>{ca.complementRight}</small>\r\n                          </h4>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                  )}\r\n\r\n                  {/* QUESTION COMMENT */}\r\n                  {question.qComment ? (\r\n                    <span className=\"text-muted mb-3\">{question.qComment}</span>\r\n                  ) : null}\r\n\r\n                  {/* BUTTON */}\r\n                  <div className=\"mt-3\">\r\n                    <Button\r\n                      className=\"shadow-sm genericButton\"\r\n                      onClick={pushQuestion}\r\n                    >\r\n                      {number === questions.length ? \"Finalizar\" : \"Siguiente\"}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Container>\r\n        {/* buttons, timer and stuff */}\r\n        <Container>\r\n          <div className=\"d-flex mt-3\">\r\n            <Timer />\r\n            <HelpModalSM question={question} />\r\n            <ExitButton url={\"/course/#\" + exam.topicName} />\r\n          </div>\r\n        </Container>\r\n      </>\r\n    )\r\n  ) : null;\r\n});\r\n\r\nQuestionsContainer.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default QuestionsContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { StudentLayout } from \"../components/Layout\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport API from \"../utils/API\";\r\nimport * as breadcrumbActions from \"../redux/actions/breadcrumb\";\r\nimport * as zenModeActions from \"../redux/actions/zenMode\";\r\nimport QuestionsContainer from \"./questionscontainer/QuestionsContainer\";\r\nimport \"./examstyle.scss\";\r\n\r\nconst Exam = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [exam, setExam] = useState();\r\n\r\n  const course = useSelector((state) => state.course);\r\n  const reduxExam = useSelector((state) => state.exam);\r\n\r\n  useEffect(() => {\r\n    if (course && reduxExam) {\r\n      API.fetchExamInfo(reduxExam._id)\r\n        .then((res) => {\r\n          // clear breadcrumb\r\n          dispatch(breadcrumbActions.clearBreadcrumb());\r\n          // zendmode on\r\n          dispatch(zenModeActions.zenModeOn());\r\n          // set exam info in the state to init the exam\r\n          setExam(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error al cargar las preguntas de tu examen\");\r\n        });\r\n    } else {\r\n      window.location.href = \"/course\";\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <StudentLayout>\r\n      {exam ? (\r\n        <>\r\n          {/* title */}\r\n          <Container>\r\n            <h1 className=\"examNameStyle mt-4\">{exam.name}</h1>\r\n          </Container>\r\n          {/* questions */}\r\n          <QuestionsContainer questions={exam.questions} />\r\n          <br />\r\n          <br />\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center mt-4 pt-4\">\r\n          <Spinner animation=\"border\" variant=\"success\" />\r\n        </div>\r\n      )}\r\n    </StudentLayout>\r\n  );\r\n});\r\n\r\nexport default Exam;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./resultsmsg.scss\";\r\n\r\nconst ResultMsg = React.memo(({ calif }) => {\r\n  return calif >= 80 ? (\r\n    // EXAM PASSED\r\n    <div className=\"text-center mt-4\">\r\n      {calif / 10 === 10 ? (\r\n        <div>\r\n          <h2 className=\"mainMsg\">¡Calificación perfecta!</h2>\r\n          <span>Has recibido una corona por tu desempeño.</span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2 className=\"mainMsg\">Resultado satisfactorio.</h2>\r\n          <span>¡Felicidades!</span>\r\n        </div>\r\n      )}\r\n      {/* crown */}\r\n      <div className=\"mt-4\">\r\n        {calif / 10 === 10 ? (\r\n          <Image src=\"/images/crown.png\" width=\"170\" height=\"170\" />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    // FAILED EXAM\r\n    <div className=\"text-center mt-4\">\r\n      {/* message */}\r\n      <div>\r\n        <h2 className=\"mainMsg\">No satisfactorio.</h2>\r\n        <span>Debes obtener un mínimo de 8 para aprobar.</span>\r\n      </div>\r\n      {/* failed icon */}\r\n      <div className=\"mt-4\">\r\n        <Image src=\"/images/sadFace.png\" width=\"170\" height=\"170\" />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nResultMsg.propTypes = {\r\n  calif: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ResultMsg;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./grade.scss\";\r\n\r\nconst Grade = React.memo(({ grade, aciertos, errores }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-4\">Tu calificación es...</h2>\r\n      {/* calificación */}\r\n      <div\r\n        className=\"d-flex flex-column rounded justify-content-center align-items-center\"\r\n        id=\"gradecardstyle\"\r\n      >\r\n        <h1 className=\"mb-0\" style={{ fontSize: \"7rem\" }}>\r\n          {grade / 10}\r\n        </h1>\r\n      </div>\r\n      {/* aciertos y errores */}\r\n      <Row className=\"mt-3\">\r\n        <Col className=\"text-center p-3\">\r\n          <strong className=\"text-muted\">ACIERTOS</strong>\r\n          <h1 className=\"mb-0\" style={{ fontSize: \"4rem\" }}>\r\n            {aciertos}\r\n          </h1>\r\n        </Col>\r\n        <Col className=\"text-center p-3\">\r\n          <strong className=\"text-muted\">ERRORES</strong>\r\n          <h1 className=\"mb-0\" style={{ fontSize: \"4rem\" }}>\r\n            {errores}\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n});\r\n\r\nGrade.propTypes = {\r\n  grade: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Grade;\r\n","import React from \"react\";\r\nimport {\r\n  Image,\r\n  Row,\r\n  Col,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst WrongAnswer = React.memo(\r\n  ({ qInstruction, qTechnicalInstruction, userAnswers, qCorrectAnswers }) => {\r\n    const popover = (\r\n      <Popover>\r\n        <Popover.Title\r\n          as=\"h3\"\r\n          className=\"text-light\"\r\n          style={{ backgroundColor: \"#0d2129\" }}\r\n        >\r\n          Respuesta correcta\r\n        </Popover.Title>\r\n        <Popover.Content as=\"h3\">\r\n          {qCorrectAnswers.type === \"text\" ? (\r\n            <span>{qCorrectAnswers.answer}</span>\r\n          ) : (\r\n            <div className=\"text-center\">\r\n              <Image\r\n                src={qCorrectAnswers.answer}\r\n                className=\"my-2\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n                rounded\r\n              />\r\n            </div>\r\n          )}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <OverlayTrigger placement=\"top\" trigger=\"click\" overlay={popover}>\r\n        <Alert\r\n          className=\"shadow-sm\"\r\n          variant=\"danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n          title=\"Haz clic para ver respuesta correcta\"\r\n        >\r\n          <Row>\r\n            <Col>\r\n              <strong>\r\n                <i className=\"fas fa-times mr-2\" />\r\n                INCORRECTO\r\n              </strong>\r\n              <br />\r\n              <span className=\"text-break\">{qInstruction}</span>\r\n              {qTechnicalInstruction ? (\r\n                qTechnicalInstruction.type === \"text\" ? (\r\n                  <>\r\n                    <br />\r\n                    <span className=\"my-2\">{qTechnicalInstruction.text}</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <br />\r\n                    <Image\r\n                      src={qTechnicalInstruction.imageLink}\r\n                      className=\"my-2\"\r\n                      width=\"150\"\r\n                      height=\"150\"\r\n                      rounded\r\n                    />\r\n                  </>\r\n                )\r\n              ) : null}\r\n              {/* YOUR ANSWERS */}\r\n              <br />\r\n              <strong className=\"mr-2\">Tu respuesta:</strong>\r\n              <br />\r\n              {userAnswers.type === \"text\" ? (\r\n                <span>{userAnswers.answer}</span>\r\n              ) : (\r\n                <Image\r\n                  src={userAnswers.answer}\r\n                  className=\"my-2\"\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  rounded\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Alert>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n);\r\n\r\nWrongAnswer.propTypes = {\r\n  qInstruction: PropTypes.string.isRequired,\r\n  qTechnicalInstruction: PropTypes.object,\r\n  userAnswers: PropTypes.object.isRequired,\r\n  qCorrectAnswers: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default WrongAnswer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Row, Col, Image } from \"react-bootstrap\";\r\nimport WrongAnswer from \"./WrongAnswer\";\r\n\r\nconst MyResults = React.memo(({ results }) => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h4 className=\"mb-3\">Tus respuestas fueron...</h4>\r\n      {results.map((q) => {\r\n        return q.qCorrectAnswers.answer === q.userAnswers.answer ? (\r\n          <Alert className=\"shadow-sm\" key={q._id} variant=\"success\">\r\n            <Row>\r\n              <Col>\r\n                <strong>\r\n                  <i className=\"fas fa-check mr-2\" />\r\n                  CORRECTO\r\n                </strong>\r\n                {/* TECHNICAL INSTRUCTION */}\r\n                <div className=\"d-flex flex-column my-2\">\r\n                  <span className=\"text-break mb-2\">{q.qInstruction}</span>\r\n                  {q.qTechnicalInstruction ? (\r\n                    q.qTechnicalInstruction.type === \"text\" ? (\r\n                      <span>{q.qTechnicalInstruction.text}</span>\r\n                    ) : (\r\n                      <Image\r\n                        src={q.qTechnicalInstruction.imageLink}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        rounded\r\n                      />\r\n                    )\r\n                  ) : null}\r\n                </div>\r\n                {/* USER ANSWERS */}\r\n                <div className=\"d-flex flex-column\">\r\n                  <strong className=\"my-2\">Tu respuesta:</strong>\r\n                  {q.userAnswers.type === \"text\" ? (\r\n                    <span>{q.userAnswers.answer}</span>\r\n                  ) : (\r\n                    <Image\r\n                      src={q.userAnswers.answer}\r\n                      className=\"my-2\"\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      rounded\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Alert>\r\n        ) : (\r\n          <WrongAnswer\r\n            key={q._id}\r\n            qInstruction={q.qInstruction}\r\n            qTechnicalInstruction={q.qTechnicalInstruction}\r\n            userAnswers={q.userAnswers}\r\n            qCorrectAnswers={q.qCorrectAnswers}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nMyResults.propTypes = {\r\n  results: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MyResults;\r\n","import React, { useEffect } from \"react\";\r\nimport { Spinner, Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { StudentLayout } from \"../components/Layout\";\r\nimport API from \"../utils/API\";\r\nimport ResultMsg from \"./components/ResultMsg\";\r\nimport { unlockExam } from \"../redux/actions/unlocked\";\r\nimport Grade from \"./components/Grade\";\r\nimport MyResults from \"./components/MyResults\";\r\n\r\nconst Results = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const exam = useSelector((state) => state.exam);\r\n  const student = useSelector((state) => state.student);\r\n\r\n  const aciertos = exam.results.reduce((acc, cv) => {\r\n    if (cv.qCorrectAnswers.answer === cv.userAnswers.answer) acc++;\r\n    return acc;\r\n  }, 0);\r\n\r\n  const errores = exam.results.reduce((acc, cv) => {\r\n    if (cv.qCorrectAnswers.answer !== cv.userAnswers.answer) acc++;\r\n    return acc;\r\n  }, 0);\r\n\r\n  const calif = Math.round((aciertos / exam.results.length) * 100);\r\n\r\n  useEffect(() => {\r\n    // register attempt regardless of grade\r\n    API.registerAttempt({\r\n      studentId: student._id,\r\n      examId: exam._id,\r\n      grade: calif / 10,\r\n    })\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => console.log(\"error\", err));\r\n\r\n    // register perfect score only if grade is 10\r\n    if (calif / 10 === 10) {\r\n      API.registerPerfectGrade({ studentId: student._id, examId: exam._id })\r\n        .then((res) => console.log(res.data))\r\n        .catch((err) => console.log(\"error\", err));\r\n    }\r\n\r\n    // register reward (medal or trophy) only if its a final exam and the grade is greater than 8\r\n    if (exam.difficulty === \"Advanced\" && calif / 10 >= 8) {\r\n      API.registerReward({\r\n        studentId: student._id,\r\n        topicId: exam.topicId,\r\n        name: exam.reward.name,\r\n        link: exam.reward.link,\r\n      })\r\n        .then((res) => console.log(res.data))\r\n        .catch((err) => console.log(\"error\", err));\r\n    }\r\n\r\n    // unblock an exam if difficulty is NOT \"Final\" and the grade is greater than 8\r\n    if (exam.difficulty !== \"Advanced\" && calif / 10 >= 8) {\r\n      API.unlockExam({\r\n        studentId: student._id,\r\n        difficulty: exam.difficulty,\r\n      })\r\n        .then((res) => {\r\n          // res should contain the data from the backend\r\n          // if its empty it means nothing was unblocked\r\n          if (res.data) dispatch(unlockExam(res.data));\r\n        })\r\n        .catch((err) => console.log(\"error\", err));\r\n    }\r\n\r\n    // unlock freestyle if the difficulty is final and the grade is greater than 8\r\n    // this is only for the modal in the course main page\r\n    if (exam.difficulty === \"Advanced\" && calif / 10 >= 8) {\r\n      dispatch(\r\n        unlockExam({\r\n          name: \"Examen Modo Rápido\",\r\n          difficulty: \"Freestyle\",\r\n          topicName: exam.topicName,\r\n          rewardLink: exam.reward.link,\r\n          rewardName: exam.reward.name,\r\n        })\r\n      );\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return exam.results ? (\r\n    <StudentLayout>\r\n      <Container style={{ paddingBottom: \"45px\" }}>\r\n        <Row>\r\n          <Col md={{ offset: 3, span: 6 }}>\r\n            {/* grade */}\r\n            <Grade grade={calif} aciertos={aciertos} errores={errores} />\r\n            {/* msg to the user */}\r\n            <hr />\r\n            <ResultMsg calif={calif} />\r\n            {/* questions */}\r\n            <hr />\r\n            <MyResults results={exam.results} />\r\n            {/* button */}\r\n            <Button\r\n              href={\"/course/#\" + exam.topicName}\r\n              className=\"genericButton\"\r\n            >\r\n              <i className=\"fas fa-arrow-left mr-2\" />\r\n              Regresar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </StudentLayout>\r\n  ) : (\r\n    <div className=\"text-center mt-4 pt-4\">\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../../utils/API\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FreestyleTimer = React.memo(({ score }) => {\r\n  const student = useSelector((state) => state.student);\r\n  const exam = useSelector((state) => state.exam);\r\n  const course = useSelector((state) => state.course);\r\n\r\n  const [secondsLeft, setSecondsLeft] = useState(exam.duration * 60 + 59);\r\n  const [minutesLeft, setMinutesLeft] = useState(exam.duration);\r\n\r\n  useEffect(() => {\r\n    if ((secondsLeft % 60) / 100 === 0) setMinutesLeft(minutesLeft - 1);\r\n\r\n    if (secondsLeft === 0) {\r\n      // register attempt\r\n      API.registerFreestyleAttempt({\r\n        courseId: course._id,\r\n        topicName: exam.topicName,\r\n        studentId: student._id,\r\n        username: student.username,\r\n        score: score,\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          // alert the user\r\n          alert(\r\n            \"El tiempo ha finalizado.\\nTu puntuación final fue de: \" + score\r\n          );\r\n          // go back\r\n          window.location.href = \"/course/#\" + exam.topicName;\r\n        })\r\n        .catch((err) => console.log(\"error\", err));\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setSecondsLeft(secondsLeft - 1);\r\n    }, 1000);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n\r\n  return (\r\n    <div className=\"text-secondary lead\" title=\"Tiempo restante\">\r\n      <i className=\"fas fa-stopwatch mr-1\" />\r\n      <strong>\r\n        {minutesLeft > 0 ? minutesLeft + \" min.\" : secondsLeft + \" seg.\"}\r\n      </strong>\r\n    </div>\r\n  );\r\n});\r\n\r\nFreestyleTimer.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FreestyleTimer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FreestyleQPoints = React.memo(({ score }) => {\r\n  return (\r\n    <div title=\"Puntos\" className=\"lead ml-3\" style={{ color: \"#48bf84\" }}>\r\n      <i className=\"fas fa-trophy\" />\r\n      <strong className=\"ml-1\">{score}</strong>\r\n      <strong className=\"ml-1\">pts.</strong>\r\n    </div>\r\n  );\r\n});\r\n\r\nFreestyleQPoints.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FreestyleQPoints;\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CorrectModal = React.memo(({ showCorrect, setShowCorrect, qValue }) => {\r\n  useEffect(() => {\r\n    // close modal after 2 seconds\r\n    if (showCorrect) setTimeout(() => setShowCorrect(false), 800);\r\n  }, [showCorrect, setShowCorrect]);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={showCorrect} centered size=\"sm\">\r\n        <Modal.Body className=\"p-1\">\r\n          <div className=\"text-center bg-success rounded py-4\">\r\n            <h1 className=\"display-3 text-light\">\r\n              <i className=\"fas fa-check-circle\" />\r\n            </h1>\r\n            <h1 className=\"text-light\">Correcto</h1>\r\n            <h3 className=\"text-warning\">\r\n              {\"+\" + qValue}\r\n              <span className=\"ml-2\">{qValue > 1 ? \"puntos\" : \"punto\"}</span>\r\n            </h3>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nCorrectModal.propTypes = {\r\n  showCorrect: PropTypes.bool.isRequired,\r\n  setShowCorrect: PropTypes.func.isRequired,\r\n  qValue: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CorrectModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst IncorrectModal = React.memo(({ showIncorrect, setShowIncorrect }) => {\r\n  useEffect(() => {\r\n    // close modal after 2 seconds\r\n    if (showIncorrect) setTimeout(() => setShowIncorrect(false), 800);\r\n  }, [showIncorrect, setShowIncorrect]);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={showIncorrect} centered size=\"sm\">\r\n        <Modal.Body className=\"p-1\">\r\n          <div className=\"text-center bg-danger rounded py-4\">\r\n            <h1 className=\"display-3 text-light\">\r\n              <i className=\"fas fa-times-circle\" />\r\n            </h1>\r\n            <h1 className=\"text-light\">Incorrecto</h1>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nIncorrectModal.propTypes = {\r\n  showIncorrect: PropTypes.bool.isRequired,\r\n  setShowIncorrect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default IncorrectModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Container, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport QInstruction from \"../../exam/questionscontainer/components/QInstruction\";\r\nimport QTechnicalInstruction from \"../../exam/questionscontainer/components/QTechnicalInstruction\";\r\nimport QMultipleChoice from \"../../exam/questionscontainer/components/QMultipleChoice\";\r\nimport FreestyleTimer from \"./components/FreestyleTimer\";\r\nimport FreestyleQPoints from \"./components/FreestyleQPoints\";\r\nimport CorrectModal from \"./components/modals/CorrectModal\";\r\nimport IncorrectModal from \"./components/modals/IncorrectModal\";\r\nimport API from \"../../utils/API\";\r\nimport ExitButton from \"../../components/exitbutton/ExitButton\";\r\nimport HelpModalSM from \"../../exam/questionscontainer/components/HelpModalSM\";\r\n\r\nconst FreestyleQuestions = React.memo(({ questions }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const student = useSelector((state) => state.student);\r\n  const exam = useSelector((state) => state.exam);\r\n  const course = useSelector((state) => state.course);\r\n\r\n  const [number, setNumber] = useState(1);\r\n  const [question, setQuestion] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const [score, setScore] = useState(0);\r\n\r\n  const [showCorrect, setShowCorrect] = useState(false);\r\n  const [showIncorrect, setShowIncorrect] = useState(false);\r\n\r\n  // this is where the value from the multiple choice is stored\r\n  const [choice, setChoice] = useState();\r\n  const getValueFromMultipleChoice = (value) => setChoice(value);\r\n\r\n  useEffect(() => {\r\n    // only if number is less than the questions length\r\n    if (number <= questions.length)\r\n      setQuestion(questions.filter((q) => q.qNumber === number)[0]);\r\n\r\n    // check if last (highly unlikely that the student finishes all the questions)\r\n    if (number > questions.length) {\r\n      // register attempt\r\n      API.registerFreestyleAttempt({\r\n        courseId: course._id,\r\n        topicId: exam.topicId,\r\n        studentId: student._id,\r\n        username: student.username,\r\n        score: score,\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          // alert the user\r\n          alert(\r\n            \"Ya no hay más preguntas para mostrar.\\nTu puntuación final fue de: \" +\r\n              score\r\n          );\r\n          // go back\r\n          window.location.href = \"/course/#\" + exam.topicName;\r\n        })\r\n        .catch((err) => console.log(\"error\", err));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, number, answers, questions, choice]);\r\n\r\n  const pushQuestion = () => {\r\n    // get correct answers\r\n    const correctAnswers = question.qCorrectAnswers.reduce((acc, cv) => {\r\n      acc.push(cv.answer);\r\n      return acc;\r\n    }, []);\r\n\r\n    // the behavior will be different depending wether its a multiple choice or regular inputs\r\n    const isMultipleChoice = question.qMultipleChoice ? true : false;\r\n\r\n    // get answer\r\n    let obj;\r\n    if (isMultipleChoice) {\r\n      // crate object\r\n      obj = {\r\n        _id: question._id,\r\n        qNumber: question.qNumber,\r\n        qInstruction: question.qInstruction,\r\n        qTechnicalInstruction: question.qTechnicalInstruction,\r\n        qMultipleChoice: question.qMultipleChoice,\r\n        userAnswers:\r\n          question.qMultipleChoice.type === \"text\"\r\n            ? { type: \"text\", answer: choice }\r\n            : { type: \"image\", answer: choice },\r\n        qCorrectAnswers:\r\n          question.qMultipleChoice.type === \"text\"\r\n            ? { type: \"text\", answer: correctAnswers.toString() }\r\n            : { type: \"image\", answer: correctAnswers.toString() },\r\n      };\r\n    } else {\r\n      // get the value from the answer inputs and push them\r\n      const numberOfAnswers = question.qCorrectAnswers.length;\r\n      const userAnswers = [];\r\n      for (var i = 0; i < numberOfAnswers; i++) {\r\n        let a = document.getElementById(\"answer\" + i).value;\r\n        userAnswers.push(a.trim());\r\n      }\r\n      // crate object\r\n      obj = {\r\n        _id: question._id,\r\n        qNumber: question.qNumber,\r\n        qInstruction: question.qInstruction,\r\n        qTechnicalInstruction: question.qTechnicalInstruction,\r\n        qMultipleChoice: question.qMultipleChoice,\r\n        userAnswers: { type: \"text\", answer: userAnswers.toString() },\r\n        qCorrectAnswers: { type: \"text\", answer: correctAnswers.toString() },\r\n      };\r\n    }\r\n\r\n    // validate answer\r\n    if (obj.userAnswers.answer === obj.qCorrectAnswers.answer) {\r\n      setShowCorrect(true);\r\n      setScore(score + question.qValue);\r\n    } else {\r\n      setShowIncorrect(true);\r\n    }\r\n\r\n    // push answer to state\r\n    setAnswers([...answers, obj]);\r\n\r\n    // clear choice and advance to next question (wait until modal is closed so the correct modal show the correct amount of points)\r\n    setTimeout(() => {\r\n      setChoice();\r\n      setNumber(number + 1);\r\n    }, 900);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") pushQuestion();\r\n  };\r\n\r\n  return question ? (\r\n    number > questions.length ? (\r\n      <div className=\"text-center mt-4 pt-4\">\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        {/* question */}\r\n        <Container className=\"mt-3\">\r\n          <div style={{ backgroundColor: \"#e9ecef\" }}>\r\n            <Container>\r\n              <Row className=\"mx-lg-1 rounded\">\r\n                <Col\r\n                  lg={{ span: 7, offset: 2 }}\r\n                  className=\"px-3\"\r\n                  style={{ paddingTop: \"40px\", paddingBottom: \"45px\" }}\r\n                >\r\n                  {/* QUESTION VALUE */}\r\n                  <strong className=\"text-muted\">\r\n                    {question.qValue}\r\n                    <span className=\"ml-1\">\r\n                      {question.qValue > 1 ? \"puntos\" : \"punto\"}\r\n                    </span>\r\n                  </strong>\r\n\r\n                  {/* INSTRUCTION */}\r\n                  <QInstruction qInstruction={question.qInstruction} />\r\n\r\n                  {/* TECHNICAL INSTRUCTION */}\r\n                  {question.qTechnicalInstruction ? (\r\n                    <QTechnicalInstruction\r\n                      type={question.qTechnicalInstruction.type}\r\n                      text={question.qTechnicalInstruction.text}\r\n                      imageLink={question.qTechnicalInstruction.imageLink}\r\n                    />\r\n                  ) : null}\r\n\r\n                  {/* MULTIPLE CHOICES OR ANSWER INPUTS */}\r\n                  {question.qMultipleChoice ? (\r\n                    <QMultipleChoice\r\n                      type={question.qMultipleChoice.type}\r\n                      textChoices={question.qMultipleChoice.textChoices}\r\n                      imageChoices={question.qMultipleChoice.imageChoices}\r\n                      choiceSelected={choice}\r\n                      getValueFromMultipleChoice={getValueFromMultipleChoice}\r\n                    />\r\n                  ) : (\r\n                    question.qCorrectAnswers.map((ca, idx) => (\r\n                      <div key={ca._id} className=\"d-flex flex-row mt-3 mb-2\">\r\n                        {/* LEFT question complement (if any) */}\r\n                        {ca.complement && ca.placement === \"left\" ? (\r\n                          <h4 className=\"mr-2 mb-0\">\r\n                            <small>{ca.complement}</small>\r\n                          </h4>\r\n                        ) : null}\r\n                        {/* input */}\r\n                        <input\r\n                          type=\"text\"\r\n                          maxLength=\"20\"\r\n                          // ref={inputRef}\r\n                          onKeyDown={handleKeyDown}\r\n                          className=\"border rounded px-2\"\r\n                          id={\"answer\" + idx}\r\n                        />\r\n                        {/* RIGHT question complement (if any) */}\r\n                        {ca.complement && ca.placement === \"right\" ? (\r\n                          <h4 className=\"ml-2 mb-0\">\r\n                            <small>{ca.complement}</small>\r\n                          </h4>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                  )}\r\n\r\n                  {/* QUESTION COMMENT */}\r\n                  {question.qComment ? (\r\n                    <small className=\"text-muted mb-3\">\r\n                      {question.qComment}\r\n                    </small>\r\n                  ) : null}\r\n\r\n                  {/* BUTTON */}\r\n                  <div className=\"mt-3\">\r\n                    <Button\r\n                      className=\"shadow-sm genericButton\"\r\n                      onClick={pushQuestion}\r\n                    >\r\n                      {number === questions.length ? \"Finalizar\" : \"Siguiente\"}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Container>\r\n        {/* buttons, timer and stuff */}\r\n        <Container>\r\n          <div className=\"d-flex mt-3\">\r\n            <FreestyleTimer score={score} />\r\n            <FreestyleQPoints score={score} />\r\n            <div className=\"ml-auto\">\r\n              <HelpModalSM question={question} />\r\n              <ExitButton url={\"/course/#\" + exam.topicName} />\r\n            </div>\r\n          </div>\r\n        </Container>\r\n        {/* modals */}\r\n        <CorrectModal\r\n          showCorrect={showCorrect}\r\n          setShowCorrect={setShowCorrect}\r\n          qValue={question.qValue}\r\n        />\r\n        <IncorrectModal\r\n          showIncorrect={showIncorrect}\r\n          setShowIncorrect={setShowIncorrect}\r\n        />\r\n      </>\r\n    )\r\n  ) : null;\r\n});\r\n\r\nFreestyleQuestions.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FreestyleQuestions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport { StudentLayout } from \"../components/Layout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearBreadcrumb } from \"../redux/actions/breadcrumb\";\r\nimport * as zenModeActions from \"../redux/actions/zenMode\";\r\nimport API from \"../utils/API\";\r\nimport FreestyleQuestions from \"./freestylequestions/FreestyleQuestions\";\r\n\r\nconst Freestyle = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const course = useSelector((state) => state.course);\r\n  const reduxExam = useSelector((state) => state.exam);\r\n\r\n  const [freestyle, setFreestyle] = useState();\r\n\r\n  useEffect(() => {\r\n    if (course && reduxExam) {\r\n      API.fetchFreestyle(reduxExam.topicName)\r\n        .then((res) => {\r\n          // clear breadcrumb\r\n          dispatch(clearBreadcrumb());\r\n          // zendmode on\r\n          dispatch(zenModeActions.zenModeOn());\r\n          // set exam\r\n          setFreestyle(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error al cargar las preguntas de tu examen\");\r\n        });\r\n    } else {\r\n      window.location.href = \"/course\";\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <StudentLayout>\r\n      {freestyle ? (\r\n        <>\r\n          {/* title */}\r\n          <Container>\r\n            <h1 className=\"examNameStyle mt-4\">Modo rápido</h1>\r\n          </Container>\r\n          {/* questions */}\r\n          <FreestyleQuestions questions={freestyle} />\r\n          <br />\r\n          <br />\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center mt-4 pt-4\">\r\n          <Spinner animation=\"border\" variant=\"success\" />\r\n        </div>\r\n      )}\r\n    </StudentLayout>\r\n  );\r\n});\r\n\r\nexport default Freestyle;\r\n","import React from \"react\";\r\nimport { ListGroup, Form } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./mymessages.scss\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nconst MyMessages = React.memo(({ messages }) => {\r\n  return (\r\n    <ListGroup className=\"mt-2\">\r\n      {messages.map((m) => (\r\n        <ListGroup.Item\r\n          key={m._id}\r\n          className=\"py-3 d-flex flex-column shadow-sm mb-4 mt-2 border rounded bg-light\"\r\n        >\r\n          {/* subject */}\r\n          <div className=\"d-flex\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted\">Curso/Tema/Pregunta</span>\r\n              <h5>{m.subject}</h5>\r\n            </div>\r\n            <div className=\"ml-auto\">\r\n              <h3>\r\n                {m.answered ? (\r\n                  <i\r\n                    className=\"fas fa-check-double text-primary\"\r\n                    title=\"Respondido\"\r\n                  />\r\n                ) : (\r\n                  <i className=\"fas fa-check text-secondary\" title=\"Enviado\" />\r\n                )}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          {/* date */}\r\n          <span className=\"text-muted\">Enviado</span>\r\n          <h5>{moment(m.sentAt).format(\"LLLL\")}</h5>\r\n          {/* body */}\r\n          <span className=\"text-muted mb-2\">Mensaje</span>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"5\"\r\n                placeholder={m.body}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          {/* response */}\r\n          {m.answered ? (\r\n            <>\r\n              <span className=\"text-muted mb-2\">Respuesta</span>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"5\"\r\n                    placeholder={m.response}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n              <div className=\"text-right\">\r\n                <em>Respondido el {moment(m.respondedAt).format(\"LLLL\")}</em>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-right\">\r\n              <em>Esperando respuesta...</em>\r\n            </div>\r\n          )}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nMyMessages.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MyMessages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Spinner, Image } from \"react-bootstrap\";\r\nimport { StudentLayout } from \"../../components/Layout\";\r\nimport API from \"../../utils/API\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MyMessages from \"./components/MyMessages\";\r\nimport * as breadcrumbActions from \"../../redux/actions/breadcrumb\";\r\nimport * as zenModeActions from \"../../redux/actions/zenMode\";\r\n\r\nconst Dashboard = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [messages, setMessages] = useState();\r\n\r\n  const student = useSelector((state) => state.student);\r\n  const breadcrumb = useSelector((state) => state.breadcrumb);\r\n  const zenMode = useSelector((state) => state.zenMode);\r\n\r\n  useEffect(() => {\r\n    if (breadcrumb) dispatch(breadcrumbActions.clearBreadcrumb());\r\n\r\n    if (zenMode) dispatch(zenModeActions.zenModeOff());\r\n\r\n    API.fetchMessages(student.username)\r\n      .then((res) => {\r\n        setMessages(res.data);\r\n        // console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n\r\n    API.markAllMessagesSeen(student._id)\r\n      .then(() => {\r\n        // console.log(res.data);\r\n        console.log(\"Todos los mensajes han sido marcados como vistos\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [student._id]);\r\n\r\n  return (\r\n    <StudentLayout>\r\n      <Container className=\"pb-4\">\r\n        {/* title */}\r\n        <h2 className=\"studentTitle\">Mis mensajes</h2>\r\n        {messages ? (\r\n          messages.length ? (\r\n            <MyMessages messages={messages} />\r\n          ) : (\r\n            <div className=\"text-center\" style={{ marginTop: \"110px\" }}>\r\n              <Image src=\"/images/emptymsgs.png\" className=\"emptyBox\" />\r\n              <em className=\"d-block lead\" style={{ color: \"#b3b3b3\" }}>\r\n                Tu bandeja de mensajes está vacía\r\n              </em>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"text-center mt-4 pt-4\">\r\n            <Spinner animation=\"border\" variant=\"success\" />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </StudentLayout>\r\n  );\r\n});\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NoMatch from \"../pages/nomatch/NoMatch\";\r\nimport Dashboard from \"../pages/dashboard\";\r\nimport Course from \"../course\";\r\nimport Exam from \"../exam\";\r\nimport Results from \"../results\";\r\nimport Freestyle from \"../freestyle\";\r\nimport Messages from \"../pages/messages\";\r\nimport CourseInfo from \"../pages/courseinfo/CourseInfo\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      {/* ================= PUBLIC ROUTES ================= */}\r\n      {/* student dashboard */}\r\n      <Route exact path=\"/dashboard\" component={Dashboard} />\r\n\r\n      {/* courses info */}\r\n      <Route\r\n        exact\r\n        path=\"/courses/:course\"\r\n        render={(props) => <CourseInfo routeProps={props} />}\r\n      />\r\n\r\n      {/* ================= STUDENT ROUTES ================= */}\r\n      {/* messages */}\r\n      <Route exact path=\"/messages\" component={Messages} />\r\n\r\n      {/* courses main */}\r\n      <Route\r\n        exact\r\n        path=\"/course\"\r\n        render={(props) => <Course routeProps={props} />}\r\n      />\r\n\r\n      {/* exam */}\r\n      <Route exact path=\"/course/exam\" component={Exam} />\r\n      <Route exact path=\"/course/exam/results\" component={Results} />\r\n\r\n      {/* freestyle */}\r\n      <Route exact path=\"/course/freestyle\" component={Freestyle} />\r\n\r\n      <Redirect from=\"/\" to=\"/dashboard\" />\r\n\r\n      {/* 404 not found */}\r\n      <Route component={NoMatch} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst AdminSpinner = React.memo(() => {\r\n  return (\r\n    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n      <Spinner variant=\"success\" animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Cargando...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AdminSpinner;\r\n","import React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport { logoutStudent } from \"../redux/actions/student\";\r\nimport AdminSpinner from \"../admin/components/AdminSpinner\";\r\n\r\n// higher order component\r\nconst withNavigation = (Component) => {\r\n  class WithNavigation extends React.Component {\r\n    state = {\r\n      navigation: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n      firebase.auth().onAuthStateChanged((fbUser) => {\r\n        fbUser\r\n          ? this.setState({ navigation: fbUser.displayName })\r\n          : this.props.user\r\n          ? this.setState({ navigation: \"Guest\" }, () =>\r\n              this.props.logoutStudent()\r\n            )\r\n          : this.setState({ navigation: \"Guest\" });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return this.state.navigation ? (\r\n        <AuthUserContext.Provider value={this.state.navigation}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      ) : (\r\n        <AdminSpinner />\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      user: state.student,\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    logoutStudent,\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(WithNavigation);\r\n};\r\n\r\nexport default withNavigation;\r\n","import React from \"react\";\r\nimport { Nav, Button } from \"react-bootstrap\";\r\nimport \"./leftnav.scss\";\r\nimport firebase from \"../../../firebase/firebase\";\r\n\r\nconst LeftNav = React.memo(({ leftBarActive }) => {\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        alert(\"Hasta pronto.\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"d-flex flex-column h-100\" id=\"leftnavstyle\">\r\n      {/* logo */}\r\n      <div className=\"d-flex flex-column text-center\" id=\"adminlogoContainer\">\r\n        <span id=\"adminlogo\">MeXmáticas</span>\r\n        <span id=\"adminlogo2\">[ admin ]</span>\r\n      </div>\r\n      {/* menu */}\r\n      <Nav.Link\r\n        className=\"navLinkStyle\"\r\n        href=\"/admin/courses\"\r\n        active={leftBarActive === \"Cursos\" ? true : false}\r\n      >\r\n        <i\r\n          className=\"fas fa-graduation-cap\"\r\n          style={{ width: \"26px\", textAlign: \"center\" }}\r\n        />\r\n        <span className=\"ml-1\">Cursos</span>\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className=\"navLinkStyle\"\r\n        href=\"/admin/students\"\r\n        active={leftBarActive === \"Alumnos\" ? true : false}\r\n      >\r\n        <i\r\n          className=\"fas fa-user-graduate\"\r\n          style={{ width: \"26px\", textAlign: \"center\" }}\r\n        />\r\n        <span className=\"ml-1\">Alumnos</span>\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className=\"navLinkStyle\"\r\n        href=\"/admin/messages\"\r\n        active={leftBarActive === \"Mensajes\" ? true : false}\r\n      >\r\n        <i\r\n          className=\"fas fa-envelope-open-text\"\r\n          style={{ width: \"26px\", textAlign: \"center\" }}\r\n        />\r\n        <span className=\"ml-1\">Mensajes</span>\r\n      </Nav.Link>\r\n      <div className=\"mt-auto\">\r\n        <Button\r\n          variant=\"transparent\"\r\n          className=\"mb-3 text-danger text-left\"\r\n          onClick={logout}\r\n        >\r\n          <i\r\n            className=\"fas fa-arrow-circle-left\"\r\n            style={{ width: \"26px\", textAlign: \"center\" }}\r\n          ></i>\r\n          <strong className=\"ml-1\">Salir</strong>\r\n        </Button>\r\n      </div>\r\n    </Nav>\r\n  );\r\n});\r\n\r\nexport default LeftNav;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TopHelperNav = React.memo(({ buttons, backBttn, title }) => {\r\n  return (\r\n    <div style={{ backgroundColor: \"#0f5257\" }}>\r\n      <div style={{ padding: \"0px 39px\" }}>\r\n        <div className=\"d-flex align-items-center\" style={{ height: \"63px\" }}>\r\n          {/* back button */}\r\n          {backBttn ? (\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"p-0 text-light\"\r\n              href={backBttn}\r\n            >\r\n              <i className=\"fas fa-chevron-left mr-1\" />\r\n              Atrás\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n        <div\r\n          className=\"d-flex align-items-center\"\r\n          style={{\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          {/* title */}\r\n          <h1 className=\"mb-0 text-light\">{title}</h1>\r\n        </div>\r\n        {buttons ? (\r\n          <div\r\n            className=\"d-flex flex-row align-items-center\"\r\n            style={{\r\n              paddingBottom: \"15px\",\r\n            }}\r\n          >\r\n            {buttons}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTopHelperNav.propTypes = {\r\n  buttons: PropTypes.node,\r\n  title: PropTypes.string.isRequired,\r\n  backBttn: PropTypes.string,\r\n};\r\n\r\nexport default TopHelperNav;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LeftNav from \"./components/LeftNav\";\r\nimport TopNav from \"./components/TopNav\";\r\nimport ScrollButton from \"../../components/scrollbutton\";\r\n\r\nconst TeacherLayout = React.memo(\r\n  ({ leftBarActive, buttons, children, title, backBttn }) => {\r\n    return (\r\n      <div className=\"d-flex h-100\">\r\n        {/* vertical navbar */}\r\n        <LeftNav leftBarActive={leftBarActive} />\r\n        {/* main container */}\r\n        <div style={{ marginLeft: \"15rem\" }} className=\"h-100 w-100\">\r\n          {/* top nav */}\r\n          <TopNav buttons={buttons} title={title} backBttn={backBttn} />\r\n          {/* content */}\r\n          <div\r\n            style={{\r\n              padding: \"35px 28px\",\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n        <ScrollButton scrollStepInPx={150} delayInMs={16.66} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nTeacherLayout.propTypes = {\r\n  leftBarActive: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  buttons: PropTypes.node,\r\n  title: PropTypes.string.isRequired,\r\n  backBttn: PropTypes.string,\r\n};\r\n\r\nexport default TeacherLayout;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // ==============================================\r\n  // COURSES\r\n  // ==============================================\r\n\r\n  t_fetchCourses: () => axios.get(\"/teacherAPI/courses/all\"),\r\n\r\n  t_fetchOneCourse: (courseId) => axios.get(\"/teacherAPI/courses/\" + courseId),\r\n\r\n  // new\r\n\r\n  t_newCourse: (data) => axios.post(\"/teacherAPI/courses/new\", data),\r\n\r\n  // updating\r\n\r\n  t_updateCourseName: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/name\", data),\r\n\r\n  t_updateCourseSchool: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/school\", data),\r\n\r\n  t_updateCourseStatus: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/status\", data),\r\n\r\n  t_updateCoursePrice: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/price\", data),\r\n\r\n  t_updateCourseDescription: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/description\", data),\r\n\r\n  t_updateCourseSummary: (data) =>\r\n    axios.put(\"/teacherAPI/courses/update/summary\", data),\r\n\r\n  // ==============================================\r\n  // TOPICS\r\n  // ==============================================\r\n\r\n  t_fetchTopic: (courseId, topicId) =>\r\n    axios.get(\"/teacherAPI/topics/\" + courseId + \"/\" + topicId),\r\n\r\n  t_fetchAvailableDifficulties: (courseId, topicId) =>\r\n    axios.get(\"/teacherAPI/topics/difficulties/\" + courseId + \"/\" + topicId),\r\n\r\n  // updating\r\n\r\n  t_updateTopicName: (data) =>\r\n    axios.put(\"/teacherAPI/topics/update/name\", data),\r\n\r\n  t_updateTopicSubject: (data) =>\r\n    axios.put(\"/teacherAPI/topics/update/subject\", data),\r\n\r\n  t_updateTopicDescription: (data) =>\r\n    axios.put(\"/teacherAPI/topics/update/description\", data),\r\n\r\n  t_updateTopicFreestyleTimer: (data) =>\r\n    axios.put(\"/teacherAPI/topics/update/timer\", data),\r\n\r\n  // new\r\n\r\n  t_newTopic: (topicData) => axios.put(\"/teacherAPI/topics/new\", topicData),\r\n\r\n  // ==============================================\r\n  // REWARDS\r\n  // ==============================================\r\n\r\n  t_deleteReward: (data) => axios.put(\"/teacherAPI/rewards/delete\", data),\r\n\r\n  t_addReward: (data) => axios.put(\"/teacherAPI/rewards/add\", data),\r\n\r\n  // ==============================================\r\n  // MATERIAL\r\n  // ==============================================\r\n\r\n  t_addVideoToMaterial: (data) =>\r\n    axios.put(\"/teacherAPI/material/video/add\", data),\r\n\r\n  t_addPDFToMaterial: (data) => axios.put(\"/teacherAPI/material/pdf/add\", data),\r\n\r\n  // delete material\r\n\r\n  t_deleteMaterial: (data) => axios.put(\"/teacherAPI/material/delete\", data),\r\n\r\n  // ==============================================\r\n  // DIFFICULTIES\r\n  // ==============================================\r\n\r\n  t_fetchDifficultiesAvailable: (courseId, topicId) =>\r\n    axios.get(\"/teacherAPI/difficulties/available/\" + courseId + \"/\" + topicId),\r\n\r\n  // ==============================================\r\n  // EXAM\r\n  // ==============================================\r\n\r\n  t_newExam: (data) => axios.post(\"/teacherAPI/exam/new\", data),\r\n\r\n  t_fetchExam: (examId) => axios.get(\"/teacherAPI/exam/fetch/\" + examId),\r\n\r\n  t_updateExamName: (data) => axios.put(\"/teacherAPI/exam/update/name\", data),\r\n\r\n  t_updateExamDuration: (data) =>\r\n    axios.put(\"/teacherAPI/exam/update/duration\", data),\r\n\r\n  t_updateExamQCounter: (data) =>\r\n    axios.put(\"/teacherAPI/exam/update/qCounter\", data),\r\n\r\n  t_updateExamDescription: (data) =>\r\n    axios.put(\"/teacherAPI/exam/update/description\", data),\r\n\r\n  // ==============================================\r\n  // STUDENTS\r\n  // ==============================================\r\n\r\n  t_fetchStudents: () => axios.get(\"/teacherAPI/students/all\"),\r\n\r\n  t_fetchStudentUnpurchased: (studentId) =>\r\n    axios.get(\"/teacherAPI/students/unpurchased/\" + studentId),\r\n\r\n  t_fetchStudentHistory: (studentId) =>\r\n    axios.get(\"/teacherAPI/students/history/\" + studentId),\r\n\r\n  t_assignCourse: (data) =>\r\n    axios.put(\"/teacherAPI/students/assignCourse\", data),\r\n\r\n  t_fetchOneStudent: (studentId) =>\r\n    axios.get(\"/teacherAPI/students/\" + studentId),\r\n\r\n  // ==============================================\r\n  // MESSAGES\r\n  // ==============================================\r\n\r\n  t_fetchMessages: () => axios.get(\"/teacherAPI/messages/all\"),\r\n\r\n  t_markSeen: (msgId) => axios.put(\"/teacherAPI/messages/markSeen/\" + msgId),\r\n\r\n  t_respondMsg: (data) => axios.put(\"/teacherAPI/messages/respond\", data),\r\n\r\n  // ==============================================\r\n  // QUESTIONS\r\n  // ==============================================\r\n\r\n  t_deleteQuestion: (data) => axios.put(\"/teacherAPI/questions/delete/\", data),\r\n\r\n  t_newSimpleQuestion: (data) =>\r\n    axios.post(\"/teacherAPI/questions/simpleQuestion/new\", data),\r\n\r\n  t_newMultipleOptionQuestion: (data) =>\r\n    axios.post(\"/teacherAPI/questions/multipleOption/new\", data),\r\n\r\n  t_newSimpleWithImageQuestion: (data) =>\r\n    axios.post(\"/teacherAPI/questions/simpleWithImage/new\", data),\r\n\r\n  t_newMultipleOptionWithImage: (data) =>\r\n    axios.post(\"/teacherAPI/questions/multipleOptionWithImage/new\", data),\r\n\r\n  t_newSimpleWithTwoAnswersQuestion: (data) =>\r\n    axios.post(\"/teacherAPI/questions/simpleWithTwoAnswers/new\", data),\r\n};\r\n","import React from \"react\";\r\nimport { Badge, ListGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./courseitem.scss\";\r\n\r\nconst CourseItem = React.memo(({ name, school, _id, isActive }) => {\r\n  return (\r\n    <ListGroup.Item\r\n      action\r\n      className=\"text-left d-flex flex-column py-4 courseitemstyle\"\r\n      href={\"/admin/courses/edit/\" + _id}\r\n    >\r\n      <span className=\"courseitemtext\">{name}</span>\r\n      <span>\r\n        <i className=\"fas fa-graduation-cap mr-1\" />\r\n        {school}\r\n      </span>\r\n      <div>\r\n        {isActive ? (\r\n          <Badge variant=\"success\">Activo</Badge>\r\n        ) : (\r\n          <Badge variant=\"danger\">No activo</Badge>\r\n        )}\r\n      </div>\r\n    </ListGroup.Item>\r\n  );\r\n});\r\n\r\nCourseItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  school: PropTypes.string.isRequired,\r\n  _id: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default CourseItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Button, Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport CourseItem from \"./components/CourseItem\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\n\r\nconst TeacherCoursesMain = React.memo(() => {\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    TeacherAPI.t_fetchCourses()\r\n      .then((res) => {\r\n        // ordering courses by school level\r\n        const rawCourses = res.data;\r\n\r\n        const sortedCourses = rawCourses\r\n          .reduce((acc, cv) => {\r\n            let orderNumber;\r\n            switch (cv.school) {\r\n              case \"Primaria\":\r\n                orderNumber = 1;\r\n                break;\r\n              case \"Secundaria\":\r\n                orderNumber = 2;\r\n                break;\r\n              case \"Preparatoria\":\r\n                orderNumber = 3;\r\n                break;\r\n              case \"Universidad\":\r\n                orderNumber = 4;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            acc.push({ ...cv, orderNumber });\r\n            return acc;\r\n          }, [])\r\n          .sort((a, b) => a.orderNumber - b.orderNumber);\r\n\r\n        setCourses(sortedCourses);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, []);\r\n\r\n  return courses ? (\r\n    <AdminLayout title=\"Cursos\" leftBarActive=\"Cursos\">\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            {courses.length ? (\r\n              <>\r\n                <h3 className=\"mb-3\" style={{ color: \"#0f5257\" }}>\r\n                  Selecciona un curso...\r\n                </h3>\r\n                <ListGroup>\r\n                  {courses.map((c) => (\r\n                    <CourseItem\r\n                      key={c._id}\r\n                      name={c.name}\r\n                      school={c.school}\r\n                      _id={c._id}\r\n                      isActive={c.isActive}\r\n                    />\r\n                  ))}\r\n                </ListGroup>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center mt-4\">No hay cursos</div>\r\n            )}\r\n            <Button\r\n              variant=\"dark\"\r\n              size=\"lg\"\r\n              className=\"py-4 mt-4\"\r\n              block\r\n              href=\"/admin/courses/new\"\r\n            >\r\n              <h5 className=\"mb-0 text-light\">NUEVO CURSO</h5>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default TeacherCoursesMain;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"./adminmodal.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdminModal = React.memo(\r\n  ({ Form, formLabel, formInitialText, courseId }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"editButton ml-1\"\r\n          onClick={handleShow}\r\n          title=\"Editar\"\r\n        >\r\n          <i className=\"fas fa-pen-alt \" />\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Body className=\"bg-light rounded\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"mb-0 text-dark\">Editar</h3>\r\n              <Button\r\n                variant=\"link\"\r\n                className=\"text-dark ml-auto\"\r\n                onClick={handleClose}\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <Form\r\n                formLabel={formLabel}\r\n                formInitialText={formInitialText}\r\n                courseId={courseId}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nAdminModal.propTypes = {\r\n  modalHeader: PropTypes.string,\r\n  //   Form: PropTypes.element,\r\n  formLabel: PropTypes.string,\r\n  // formInitialText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  courseId: PropTypes.string,\r\n};\r\n\r\nexport default AdminModal;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CourseNameForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newName: yup\r\n        .string()\r\n        .min(3, \"Nombre demasiado corto\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newName: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCourseName(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\r\n                \"Ocurrió un error. Asegúrate que no exista un curso con este nombre y vuelve a intentarlo.\"\r\n              );\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"40\"\r\n                  type=\"text\"\r\n                  name=\"newName\"\r\n                  value={values.newName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newName && !errors.newName}\r\n                  isInvalid={touched.newName && !!errors.newName}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newName\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCourseNameForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n};\r\n\r\nexport default CourseNameForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CourseSchoolForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newSchool: yup.string().required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newSchool: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCourseSchool(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo más tarde.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"newSchool\"\r\n                  value={values.newSchool}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newSchool && !errors.newSchool}\r\n                  isInvalid={touched.newSchool && !!errors.newSchool}\r\n                >\r\n                  <option value=\"Primaria\">Primaria</option>\r\n                  <option value=\"Secundaria\">Secundaria</option>\r\n                  <option value=\"Preparatoria\">Preparatoria</option>\r\n                  <option value=\"Universidad\">Universidad</option>\r\n                </Form.Control>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newSchool\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCourseSchoolForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n};\r\n\r\nexport default CourseSchoolForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col, InputGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CoursePriceForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newPrice: yup\r\n        .number()\r\n        .positive(\"¿Por qué negativo?\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPrice: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCoursePrice(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo más tarde.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>$</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"newPrice\"\r\n                    value={values.newPrice}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.newPrice && !errors.newPrice}\r\n                    isInvalid={touched.newPrice && !!errors.newPrice}\r\n                  />\r\n                </InputGroup>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newPrice\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCoursePriceForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.number,\r\n};\r\n\r\nexport default CoursePriceForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CourseDescriptionForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newDescription: yup\r\n        .string()\r\n        .min(3, \"Descripción demasiado corta\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newDescription: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCourseDescription(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo más tarde.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"250\"\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  name=\"newDescription\"\r\n                  value={values.newDescription}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newDescription && !errors.newDescription}\r\n                  isInvalid={touched.newDescription && !!errors.newDescription}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newDescription\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCourseDescriptionForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n};\r\n\r\nexport default CourseDescriptionForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CourseSummaryForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newSummary: yup.string().required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newSummary: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCourseSummary(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo más tarde.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Text className=\"text-muted mb-2\">\r\n                  Separados por coma\r\n                </Form.Text>\r\n                <Form.Control\r\n                  maxLength=\"250\"\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  type=\"text\"\r\n                  name=\"newSummary\"\r\n                  value={values.newSummary}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newSummary && !errors.newSummary}\r\n                  isInvalid={touched.newSummary && !!errors.newSummary}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newSummary\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCourseSummaryForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n};\r\n\r\nexport default CourseSummaryForm;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EditTopicsBttn = React.memo(({ courseId, topicId }) => {\r\n  return (\r\n    <Button\r\n      className=\"editButton ml-1\"\r\n      title=\"Editar\"\r\n      size=\"sm\"\r\n      href={\"/admin/courses/edit/topics/\" + courseId + \"/\" + topicId}\r\n    >\r\n      <i className=\"fas fa-pen-alt \" />\r\n    </Button>\r\n  );\r\n});\r\n\r\nEditTopicsBttn.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default EditTopicsBttn;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./adminbutton.scss\";\r\n\r\nconst AdminButton = React.memo(({ content, link }) => {\r\n  return (\r\n    <Button className=\"px-4 adminbttncolor\" size=\"sm\" href={link}>\r\n      {content}\r\n    </Button>\r\n  );\r\n});\r\n\r\nAdminButton.propTypes = {\r\n  content: PropTypes.node,\r\n  link: PropTypes.string,\r\n};\r\n\r\nexport default AdminButton;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst CourseActiveForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId }) => {\r\n    const yupschema = yup.object({\r\n      newStatus: yup.bool().required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newStatus: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          TeacherAPI.t_updateCourseStatus(values)\r\n            .then((res) => {\r\n              console.log(res);\r\n              alert(res.data);\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo más tarde.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"newStatus\"\r\n                  value={values.newStatus}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newStatus && !errors.newStatus}\r\n                  isInvalid={touched.newStatus && !!errors.newStatus}\r\n                >\r\n                  <option value={true}>Activo</option>\r\n                  <option value={false}>No activo</option>\r\n                </Form.Control>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newStatus\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nCourseActiveForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default CourseActiveForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\n//\r\nimport AdminModal from \"../../components/AdminModal\";\r\nimport CourseNameForm from \"./forms/CourseNameForm\";\r\nimport CourseSchoolForm from \"./forms/CourseSchoolForm\";\r\nimport CoursePriceForm from \"./forms/CoursePriceForm\";\r\nimport CourseDescriptionForm from \"./forms/CourseDescriptionForm\";\r\nimport CourseSummaryForm from \"./forms/CourseSummaryForm\";\r\nimport EditTopicsBttn from \"../../components/EditTopicsBttn\";\r\nimport AdminButton from \"../../components/AdminButton\";\r\nimport CourseActiveForm from \"./forms/CourseActiveForm\";\r\n\r\nconst AdminCourseDetail = React.memo((props) => {\r\n  const [course, setCourse] = useState();\r\n\r\n  useEffect(() => {\r\n    const courseId = props.routeProps.match.params.courseId;\r\n\r\n    TeacherAPI.t_fetchOneCourse(courseId)\r\n      .then((res) => setCourse(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, [props.routeProps.match.params.courseId]);\r\n\r\n  return course ? (\r\n    <AdminLayout title=\"Curso\" leftBarActive=\"Cursos\" backBttn=\"/admin/courses\">\r\n      <Container fluid>\r\n        {/* course name */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Nombre</span>\r\n            <h1>\r\n              {course.name}\r\n              <AdminModal\r\n                Form={CourseNameForm}\r\n                formLabel=\"Nombre\"\r\n                formInitialText={course.name}\r\n                courseId={course._id}\r\n              />\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        {/* grado escolar */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Nivel</span>\r\n            <h2>\r\n              {course.school}\r\n              <AdminModal\r\n                Form={CourseSchoolForm}\r\n                formLabel=\"Nivel escolar\"\r\n                formInitialText={course.school}\r\n                courseId={course._id}\r\n              />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        {/* precio */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Precio</span>\r\n            <h2>\r\n              {\"$\" + course.price}\r\n              <AdminModal\r\n                Form={CoursePriceForm}\r\n                formLabel=\"Precio\"\r\n                formInitialText={course.price}\r\n                courseId={course._id}\r\n              />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        {/* status */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Estatus</span>\r\n            <h3>\r\n              {course.isActive ? \"Activo\" : \"No activo\"}\r\n              <AdminModal\r\n                Form={CourseActiveForm}\r\n                formLabel=\"Estatus\"\r\n                formInitialText={course.isActive}\r\n                courseId={course._id}\r\n              />\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        {/* description */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Descripción</span>\r\n            <h5>\r\n              {course.description}\r\n              <AdminModal\r\n                Form={CourseDescriptionForm}\r\n                formLabel=\"Descripción\"\r\n                formInitialText={course.description}\r\n                courseId={course._id}\r\n              />\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {/* summary */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">\r\n              Resumen <small>(para el landing page)</small>\r\n            </span>\r\n            <ul className=\"mb-1 mt-2\">\r\n              {course.topicsSummary.map((t, idx) => {\r\n                return (\r\n                  <li key={t}>\r\n                    <h5>\r\n                      {t}\r\n                      {idx === course.topicsSummary.length - 1 ? (\r\n                        <AdminModal\r\n                          Form={CourseSummaryForm}\r\n                          formLabel=\"Resumen\"\r\n                          formInitialText={course.topicsSummary.toString()}\r\n                          courseId={course._id}\r\n                        />\r\n                      ) : null}\r\n                    </h5>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        {/* topics */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted d-flex\">Temas</span>\r\n            {course.topics.length ? (\r\n              <ul className=\"mb-1\">\r\n                {course.topics.map((t) => (\r\n                  <li key={t._id}>\r\n                    <h5 className=\"mb-0\">\r\n                      {t.name}\r\n                      <EditTopicsBttn courseId={course._id} topicId={t._id} />\r\n                    </h5>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <h5>-</h5>\r\n            )}\r\n            <AdminButton\r\n              content={\r\n                <>\r\n                  <i className=\"fas fa-plus-square mr-2\" />\r\n                  <span>Nuevo</span>\r\n                </>\r\n              }\r\n              link={\r\n                \"/admin/courses/courses/newTopic/\" +\r\n                props.routeProps.match.params.courseId\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {/* created at */}\r\n        <Row className=\"mt-2\">\r\n          <Col>\r\n            <span className=\"text-muted\">Fecha de creación</span>\r\n            <h5>\r\n              <i className=\"far fa-calendar-alt mr-2\" />\r\n              {moment(course.createdAt).format(\"LL\")}\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminCourseDetail;\r\n","import React from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container, InputGroup, Row, Form, Button, Col } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst AdminNewCrouse = React.memo(() => {\r\n  const yupschema = yup.object({\r\n    name: yup.string().min(3, \"Nombre demasiado corto\").required(\"Requerido\"),\r\n    school: yup\r\n      .string()\r\n      .notOneOf([\"Elige...\"], \"Requerido\")\r\n      .required(\"Requerido\"),\r\n    description: yup.string().required(\"Requerido\"),\r\n    summary: yup.string().required(\"Requerido\"),\r\n    price: yup\r\n      .number()\r\n      .positive(\"El número debe ser mayor a 1\")\r\n      .required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <AdminLayout\r\n      title=\"Nuevo Curso\"\r\n      leftBarActive=\"Cursos\"\r\n      backBttn=\"/admin/courses\"\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            <h3 className=\"mb-3\">Ingresa los datos del curso.</h3>\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                school: \"\",\r\n                description: \"\",\r\n                summary: \"\",\r\n                price: \"\",\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                TeacherAPI.t_newCourse(values)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"Curso agregado con éxito\");\r\n                    window.location.href = \"/admin/courses\";\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\r\n                      \"Un curso con el mismo nombre ya existe, por favor modifica los datos y vuelve a crearlo\"\r\n                    );\r\n                    setSubmitting(false);\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name and school */}\r\n                  <Form.Row>\r\n                    <Col md=\"7\">\r\n                      <Form.Label>\r\n                        Nombre<strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"40\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                      <Form.Label>\r\n                        Nivel escolar<strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        type=\"text\"\r\n                        name=\"school\"\r\n                        defaultValue=\"Elige...\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.school && !errors.school}\r\n                        isInvalid={touched.school && !!errors.school}\r\n                      >\r\n                        <option disabled>Elige...</option>\r\n                        <option value=\"Primaria\">Primaria</option>\r\n                        <option value=\"Secundaria\">Secundaria</option>\r\n                        <option value=\"Preparatoria\">Preparatoria</option>\r\n                        <option value=\"Universidad\">Universidad</option>\r\n                      </Form.Control>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"school\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* description */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col>\r\n                      <Form.Label>\r\n                        Descripción<strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"250\"\r\n                        as=\"textarea\"\r\n                        rows=\"4\"\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.description && !errors.description}\r\n                        isInvalid={touched.description && !!errors.description}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"description\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* topics summary */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col>\r\n                      <Form.Label className=\"mb-0\">\r\n                        Resumen\r\n                        <small className=\"text-muted ml-1\">\r\n                          (para el landing page)\r\n                        </small>\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Text className=\"text-muted mb-2\">\r\n                        Separados por coma\r\n                      </Form.Text>\r\n                      <Form.Control\r\n                        maxLength=\"250\"\r\n                        type=\"text\"\r\n                        name=\"summary\"\r\n                        value={values.summary}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.summary && !errors.summary}\r\n                        isInvalid={touched.summary && !!errors.summary}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"summary\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* price */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col md={4}>\r\n                      <Form.Label>\r\n                        Precio\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          placeholder=\"0.00\"\r\n                          name=\"price\"\r\n                          value={values.price}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          isValid={touched.price && !errors.price}\r\n                          isInvalid={touched.price && !!errors.price}\r\n                        />\r\n                      </InputGroup>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"price\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  );\r\n});\r\n\r\nexport default AdminNewCrouse;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdminTopicModal = React.memo(\r\n  ({ modalTitle, Form, formLabel, formInitialText, courseId, topicId }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"editButton ml-2\"\r\n          onClick={handleShow}\r\n          title={modalTitle}\r\n        >\r\n          <i className=\"fas fa-pen-alt \" />\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Body className=\"bg-light rounded\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"mb-0 text-dark\">Editar</h3>\r\n              <Button\r\n                variant=\"link\"\r\n                className=\"text-dark ml-auto\"\r\n                onClick={handleClose}\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <Form\r\n                formLabel={formLabel}\r\n                formInitialText={formInitialText}\r\n                courseId={courseId}\r\n                topicId={topicId}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nAdminTopicModal.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalHeader: PropTypes.string,\r\n  //   Form: PropTypes.element,\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default AdminTopicModal;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Col } from \"react-bootstrap\";\r\nimport \"./adminaddbttn.scss\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst AddVideo = React.memo(({ courseId, topicId }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const yupschema = yup.object({\r\n    name: yup.string().required(\"Requerido\"),\r\n    link: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} className=\"adminaddbttn\" size=\"sm\">\r\n        <i className=\"fas fa-video mr-2\" />\r\n        <span>Agregar video</span>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body className=\"bg-light rounded\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-0 text-dark\">Agregar video</h3>\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"text-dark ml-auto\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                link: \"\",\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                values.courseId = courseId;\r\n                values.topicId = topicId;\r\n                //\r\n                TeacherAPI.t_addVideoToMaterial(values)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"El video fue agregado satisfactoriamente\");\r\n                    window.location.reload();\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Ocurrió un error, vuelve a intentarlo\");\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name */}\r\n                  <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"55\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  {/* link */}\r\n                  <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                      <Form.Label>Liga</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"link\"\r\n                        value={values.link}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.link && !errors.link}\r\n                        isInvalid={touched.link && !!errors.link}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"link\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"text-right\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Agregar\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nAddVideo.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddVideo;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst UploadReward = React.memo(({ setFieldValue, onBlur, image }) => {\r\n  return (\r\n    <>\r\n      <Form.Label>Recompensa</Form.Label>\r\n      {/* the following FORM.FILE only works on \"react-bootstrap\": \"^1.0.0\",  */}\r\n      <Form.File\r\n        encType=\"multipart/form-data\"\r\n        accept=\"image/*\"\r\n        label={image ? image : \"\"}\r\n        data-browse=\"Buscar\"\r\n        id=\"file\"\r\n        name=\"file\"\r\n        type=\"file\"\r\n        onChange={(event) => {\r\n          setFieldValue(\"file\", event.currentTarget.files[0]);\r\n          setFieldValue(\r\n            \"image\",\r\n            event.currentTarget.files[0]\r\n              ? event.currentTarget.files[0].name\r\n              : \"\"\r\n          );\r\n        }}\r\n        onBlur={onBlur}\r\n        custom\r\n      />\r\n      <ErrorMessage className=\"text-danger\" name=\"file\" component=\"div\" />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default UploadReward;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Col } from \"react-bootstrap\";\r\nimport \"./adminaddbttn.scss\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport UploadReward from \"./UploadReward\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst AddReward = React.memo(({ courseId, topicId }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const yupschema = yup.object({\r\n    name: yup.string().required(\"Requerido\"),\r\n    file: yup\r\n      .mixed()\r\n      .required(\"Requerido\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Imagen muy pesada\",\r\n        (value) => value && value.size <= IMAGE_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Formato no soportado\",\r\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  const IMAGE_SIZE = 4000000;\r\n  const SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/gif\",\r\n    \"image/png\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} className=\"adminaddbttn\" size=\"sm\">\r\n        <i className=\"fas fa-medal mr-2\" />\r\n        <span>Agregar recompensa</span>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body className=\"bg-light rounded\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-0 text-dark\">Agregar recompensa</h3>\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"text-dark ml-auto\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                image: undefined,\r\n                file: undefined,\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                let rewardImage = new FormData();\r\n                rewardImage.append(\"name\", values.name);\r\n                rewardImage.append(\"image\", values.image);\r\n                rewardImage.append(\"file\", values.file);\r\n                rewardImage.append(\"courseId\", courseId);\r\n                rewardImage.append(\"topicId\", topicId);\r\n                //\r\n                TeacherAPI.t_addReward(rewardImage)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"La recompensa fue agregada satisfactoriamente\");\r\n                    window.location.reload();\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Ocurrió un error, vuelve a intentarlo\");\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name */}\r\n                  <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"55\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  {/* reward file */}\r\n                  <UploadReward\r\n                    image={values.image}\r\n                    setFieldValue={setFieldValue}\r\n                    onBlur={handleBlur}\r\n                    file={values.file}\r\n                  />\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"text-right mt-4\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Agregar\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nAddReward.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddReward;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst UploadPDF = React.memo(({ setFieldValue, onBlur, pdf }) => {\r\n  return (\r\n    <>\r\n      <Form.Label>PDF</Form.Label>\r\n      {/* the following FORM.FILE only works on \"react-bootstrap\": \"^1.0.0\",  */}\r\n      <Form.File\r\n        encType=\"multipart/form-data\"\r\n        accept=\"application/pdf\"\r\n        label={pdf ? pdf : \"\"}\r\n        data-browse=\"Buscar\"\r\n        id=\"file\"\r\n        name=\"file\"\r\n        type=\"file\"\r\n        onChange={(event) => {\r\n          setFieldValue(\"file\", event.currentTarget.files[0]);\r\n          setFieldValue(\r\n            \"pdf\",\r\n            event.currentTarget.files[0]\r\n              ? event.currentTarget.files[0].name\r\n              : \"\"\r\n          );\r\n        }}\r\n        onBlur={onBlur}\r\n        custom\r\n      />\r\n      <ErrorMessage className=\"text-danger\" name=\"file\" component=\"div\" />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default UploadPDF;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Col } from \"react-bootstrap\";\r\nimport \"./adminaddbttn.scss\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport UploadPDF from \"./UploadPDF\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst AddPDF = React.memo(({ courseId, topicId }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const yupschema = yup.object({\r\n    name: yup.string().required(\"Requerido\"),\r\n    file: yup\r\n      .mixed()\r\n      .required(\"Requerido\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"PDF muy pesado\",\r\n        (value) => value && value.size <= PDF_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Formato no soportado\",\r\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  const PDF_SIZE = 4000000;\r\n  const SUPPORTED_FORMATS = [\"application/pdf\"];\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} className=\"adminaddbttn ml-2\" size=\"sm\">\r\n        <i className=\"fas fa-file-pdf mr-2\" />\r\n        <span>Agregar PDF</span>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body className=\"bg-light rounded\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-0 text-dark\">Agregar PDF</h3>\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"text-dark ml-auto\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                pdf: undefined,\r\n                file: undefined,\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                let materialPDF = new FormData();\r\n                materialPDF.append(\"name\", values.name);\r\n                materialPDF.append(\"pdf\", values.pdf);\r\n                materialPDF.append(\"file\", values.file);\r\n                materialPDF.append(\"courseId\", courseId);\r\n                materialPDF.append(\"topicId\", topicId);\r\n                //\r\n                TeacherAPI.t_addPDFToMaterial(materialPDF)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"El PDF fue agregado satisfactoriamente\");\r\n                    window.location.reload();\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Ocurrió un error, vuelve a intentarlo\");\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name */}\r\n                  <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"55\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  {/* pdf */}\r\n                  <UploadPDF\r\n                    pdf={values.pdf}\r\n                    setFieldValue={setFieldValue}\r\n                    onBlur={handleBlur}\r\n                    file={values.file}\r\n                  />\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"text-right mt-4\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Agregar\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nAddPDF.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddPDF;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EditExamBttn = React.memo(({ courseId, topicId, examId }) => {\r\n  return (\r\n    <Button\r\n      className=\"editButton ml-1\"\r\n      title=\"Editar\"\r\n      size=\"sm\"\r\n      href={\r\n        \"/admin/courses/edit/exam/\" + courseId + \"/\" + topicId + \"/\" + examId\r\n      }\r\n    >\r\n      <i className=\"fas fa-pen-alt \" />\r\n    </Button>\r\n  );\r\n});\r\n\r\nEditExamBttn.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default EditExamBttn;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst TopicNameForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId, topicId }) => {\r\n    const yupschema = yup.object({\r\n      newName: yup\r\n        .string()\r\n        .min(3, \"Nombre demasiado corto\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newName: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          values.topicId = topicId;\r\n          TeacherAPI.t_updateTopicName(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"El nombre del tema fue actualizado con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\r\n                \"Ocurrió un error. Asegúrate que no exista un tema con este nombre y vuelve a intentarlo.\"\r\n              );\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"40\"\r\n                  type=\"text\"\r\n                  name=\"newName\"\r\n                  value={values.newName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newName && !errors.newName}\r\n                  isInvalid={touched.newName && !!errors.newName}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newName\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nTopicNameForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default TopicNameForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst TopicSubjectForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId, topicId }) => {\r\n    const yupschema = yup.object({\r\n      newSubject: yup\r\n        .string()\r\n        .notOneOf([\"Elige...\"], \"Requerido\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newSubject: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          values.topicId = topicId;\r\n          TeacherAPI.t_updateTopicSubject(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"La materia del tema fue actualizada con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"newSubject\"\r\n                  // defaultValue=\"Elige...\"\r\n                  defaultValue={values.newSubject}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newSubject && !errors.newSubject}\r\n                  isInvalid={touched.newSubject && !!errors.newSubject}\r\n                >\r\n                  <option disabled>Elige...</option>\r\n                  <option value=\"Álgebra\">Álgebra</option>\r\n                  <option value=\"Aritmética\">Aritmética</option>\r\n                  <option value=\"Cálculo Diferencial\">\r\n                    Cálculo Diferencial\r\n                  </option>\r\n                  <option value=\"Cálculo Integral\">Cálculo Integral</option>\r\n                  <option value=\"Funciones\">Funciones</option>\r\n\r\n                  <option value=\"Geometría\">Geometría</option>\r\n                  <option value=\"Geometría Analítica\">\r\n                    Geometría Analítica\r\n                  </option>\r\n                  <option value=\"Misceláneos\">Misceláneos</option>\r\n                  <option value=\"Pre-Cálculo\">Pre-Cálculo</option>\r\n                  <option value=\"Probabilidad\">Probabilidad</option>\r\n                  <option value=\"Sistema de Medición\">\r\n                    Sistema de Medición\r\n                  </option>\r\n                  <option value=\"Trigonometría\">Trigonometría</option>\r\n                </Form.Control>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newSubject\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nTopicSubjectForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default TopicSubjectForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst TopicDescriptionForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId, topicId }) => {\r\n    const yupschema = yup.object({\r\n      newDescription: yup\r\n        .string()\r\n        .min(3, \"Demasiado corta\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newDescription: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          values.topicId = topicId;\r\n          TeacherAPI.t_updateTopicDescription(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"La descripción del tema fue actualizada con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"250\"\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  type=\"text\"\r\n                  name=\"newDescription\"\r\n                  value={values.newDescription}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newDescription && !errors.newDescription}\r\n                  isInvalid={touched.newDescription && !!errors.newDescription}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newDescription\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nTopicDescriptionForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default TopicDescriptionForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col, InputGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst TopicFreestyleTimerForm = React.memo(\r\n  ({ formLabel, formInitialText, courseId, topicId }) => {\r\n    const yupschema = yup.object({\r\n      newTimer: yup\r\n        .number()\r\n        .positive(\"El número debe ser mayor a 1\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newTimer: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.courseId = courseId;\r\n          values.topicId = topicId;\r\n          TeacherAPI.t_updateTopicFreestyleTimer(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"El tiempo del modo rápido fue actualizado con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"newTimer\"\r\n                    value={values.newTimer}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.newTimer && !errors.newTimer}\r\n                    isInvalid={touched.newTimer && !!errors.newTimer}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>minutos</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newTimer\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nTopicFreestyleTimerForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.number,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default TopicFreestyleTimerForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Col, Spinner } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst NewExamBttn = ({ courseId, topicId }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const yupschema = yup.object({\r\n    difficulty: yup\r\n      .string()\r\n      .notOneOf([\"Elige...\"], \"Requerido\")\r\n      .required(\"Requerido\"),\r\n  });\r\n\r\n  const [difficulties, setDifficulties] = useState();\r\n\r\n  useEffect(() => {\r\n    TeacherAPI.t_fetchDifficultiesAvailable(courseId, topicId)\r\n      .then((res) => {\r\n        setDifficulties(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error, actualiza la página\");\r\n      });\r\n  }, [courseId, topicId]);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} className=\"px-4 adminbttncolor\" size=\"sm\">\r\n        <i className=\"far fa-file-alt mr-2\" />\r\n        <span>Agregar examen</span>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body className=\"bg-light rounded\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-0 text-dark\">Nuevo examen</h3>\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"text-dark ml-auto\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Formik\r\n              initialValues={{\r\n                difficulty: \"\",\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                const url = `/admin/courses/exam/new/${values.difficulty}/${courseId}/${topicId}`;\r\n                window.location.href = url;\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {difficulties ? (\r\n                    difficulties.length ? (\r\n                      <>\r\n                        {/* difficulty */}\r\n                        <Form.Row>\r\n                          <Form.Group as={Col}>\r\n                            <Form.Label>Dificultad</Form.Label>\r\n                            <Form.Control\r\n                              as=\"select\"\r\n                              type=\"text\"\r\n                              name=\"difficulty\"\r\n                              defaultValue=\"Elige...\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              isValid={touched.difficulty && !errors.difficulty}\r\n                              isInvalid={\r\n                                touched.difficulty && !!errors.difficulty\r\n                              }\r\n                            >\r\n                              <option disabled>Elige...</option>\r\n                              {difficulties.map((d) => {\r\n                                return (\r\n                                  <option key={d} value={d}>\r\n                                    {d}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Form.Control>\r\n                            <ErrorMessage\r\n                              className=\"text-danger\"\r\n                              name=\"difficulty\"\r\n                              component=\"div\"\r\n                            />\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                        {/* buttons */}\r\n                        <Form.Group className=\"text-right\">\r\n                          <Button\r\n                            variant=\"dark\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Crear\r\n                          </Button>\r\n                        </Form.Group>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"my-3 text-center\">\r\n                        No hay dificultades de examen disponibles para este\r\n                        tema.\r\n                      </div>\r\n                    )\r\n                  ) : (\r\n                    <div className=\"my-3 text-center\">\r\n                      <Spinner />\r\n                    </div>\r\n                  )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nNewExamBttn.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default NewExamBttn;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst DeleteMaterial = React.memo(\r\n  ({ isPDF, courseId, topicId, materialId }) => {\r\n    const handleDelete = () => {\r\n      TeacherAPI.t_deleteMaterial({\r\n        isPDF,\r\n        courseId,\r\n        topicId,\r\n        materialId,\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          alert(\"El artículo seleccionado ha sido eliminado con éxito.\");\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Ocurrió un error, vuelve a intentarlo.\");\r\n        });\r\n    };\r\n\r\n    return (\r\n      <Button\r\n        size=\"sm\"\r\n        variant=\"transparent\"\r\n        className=\"ml-1 mt-1 genericDeleteButton\"\r\n        title=\"Eliminar\"\r\n        onClick={handleDelete}\r\n      >\r\n        <i className=\"fas fa-trash\" />\r\n      </Button>\r\n    );\r\n  }\r\n);\r\n\r\nDeleteMaterial.propTypes = {\r\n  isPDF: PropTypes.string,\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n  materialId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DeleteMaterial;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../../utils/TeacherAPI\";\r\n\r\nconst DeleteRewardBttn = React.memo(({ filePath, courseId, topicId }) => {\r\n  const handleDelete = () => {\r\n    TeacherAPI.t_deleteReward({\r\n      filePath,\r\n      courseId,\r\n      topicId,\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(\"La imagen de recompensa ha sido eliminada con éxito.\");\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error, vuelve a intentarlo.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      size=\"sm\"\r\n      variant=\"transparent\"\r\n      className=\"ml-1 genericDeleteButton\"\r\n      title=\"Eliminar\"\r\n      onClick={handleDelete}\r\n    >\r\n      <i className=\"fas fa-trash\" />\r\n    </Button>\r\n  );\r\n});\r\n\r\nDeleteRewardBttn.propTypes = {\r\n  filePath: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n  topicId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DeleteRewardBttn;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport AdminTopicModal from \"./components/AdminTopicModal\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\nimport AddVideo from \"./components/AddVideo\";\r\nimport AddReward from \"./components/AddReward\";\r\nimport AddPDF from \"./components/AddPDF\";\r\nimport EditExamBttn from \"../../components/EditExamBttn\";\r\n//\r\nimport TopicNameForm from \"./forms/TopicNameForm\";\r\nimport TopicSubjectForm from \"./forms/TopicSubjectForm\";\r\nimport TopicDescriptionForm from \"./forms/TopicDescriptionForm\";\r\nimport TopicFreestyleTimerForm from \"./forms/TopicFreestyleTimerForm\";\r\nimport NewExamBttn from \"./components/NewExamBttn\";\r\nimport DeleteMaterialBttn from \"./components/DeleteMaterialBttn\";\r\nimport DeleteRewardBttn from \"./components/DeleteRewardBttn\";\r\n\r\nconst AdminTopicDetail = React.memo((props) => {\r\n  const [topic, setTopic] = useState();\r\n\r\n  useEffect(() => {\r\n    const courseId = props.routeProps.match.params.courseId;\r\n    const topicId = props.routeProps.match.params.topicId;\r\n\r\n    TeacherAPI.t_fetchTopic(courseId, topicId)\r\n      .then((res) => setTopic(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, [\r\n    props.routeProps.match.params.courseId,\r\n    props.routeProps.match.params.topicId,\r\n  ]);\r\n\r\n  return topic ? (\r\n    <AdminLayout\r\n      title=\"Tema\"\r\n      leftBarActive=\"Cursos\"\r\n      backBttn={\"/admin/courses/edit/\" + props.routeProps.match.params.courseId}\r\n    >\r\n      <Container fluid>\r\n        {/* topic name */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Nombre</span>\r\n            <h1>\r\n              {topic.name}\r\n              <AdminTopicModal\r\n                modalTitle=\"Editar nombre\"\r\n                Form={TopicNameForm}\r\n                formLabel=\"Nombre\"\r\n                formInitialText={topic.name}\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        {/* subject */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Materia</span>\r\n            <h2>\r\n              {topic.subject}\r\n              <AdminTopicModal\r\n                modalTitle=\"Editar materia\"\r\n                Form={TopicSubjectForm}\r\n                formLabel=\"Materia\"\r\n                formInitialText={topic.subject}\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        {/* description */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Descripción</span>\r\n            <h5>\r\n              {topic.description}\r\n              <AdminTopicModal\r\n                modalTitle=\"Editar descripción\"\r\n                Form={TopicDescriptionForm}\r\n                formLabel=\"Descripción\"\r\n                formInitialText={topic.description}\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {/* freestyle */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Modo rápido</span>\r\n            <h5>\r\n              {topic.freestyle.timer + \" minutos\"}\r\n              <AdminTopicModal\r\n                modalTitle=\"Editar modo rápido\"\r\n                Form={TopicFreestyleTimerForm}\r\n                formLabel=\"Modo rápido\"\r\n                formInitialText={topic.freestyle.timer}\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {/* reward */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Recompensa</span>\r\n            {topic.reward ? (\r\n              <>\r\n                <div className=\"d-flex\">\r\n                  <h5>{topic.reward.name}</h5>\r\n                  <DeleteRewardBttn\r\n                    filePath={topic.reward.link}\r\n                    courseId={props.routeProps.match.params.courseId}\r\n                    topicId={topic._id}\r\n                  />\r\n                </div>\r\n                <Image\r\n                  src={topic.reward.link}\r\n                  width=\"70\"\r\n                  height=\"100\"\r\n                  className=\"mb-3\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <div className=\"my-2\">\r\n                <h5>-</h5>\r\n                <AddReward\r\n                  courseId={props.routeProps.match.params.courseId}\r\n                  topicId={topic._id}\r\n                />\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        {/* material */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Material</span>\r\n            {topic.material.length ? (\r\n              <ul>\r\n                {topic.material.map((m) => (\r\n                  <li key={m._id}>\r\n                    <strong style={{ color: \"#0f5257\" }}>\r\n                      {m.type === \"video\" ? (\r\n                        <i className=\"fas fa-video mr-2\" />\r\n                      ) : m.type === \"pdf\" ? (\r\n                        <i className=\"fas fa-file-pdf mr-2\" />\r\n                      ) : null}\r\n                      {m.name}\r\n                      <DeleteMaterialBttn\r\n                        isPDF={m.type === \"pdf\" ? m.link : null}\r\n                        courseId={props.routeProps.match.params.courseId}\r\n                        topicId={topic._id}\r\n                        materialId={m._id}\r\n                      />\r\n                    </strong>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <h5>-</h5>\r\n            )}\r\n            <div className=\"mb-3\">\r\n              <AddVideo\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n              <AddPDF\r\n                courseId={props.routeProps.match.params.courseId}\r\n                topicId={topic._id}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* exams */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Exámenes</span>\r\n            {topic.exams.length ? (\r\n              <ul className=\"mb-0\">\r\n                {topic.exams\r\n                  .sort((a, b) => a.examOrderNumber - b.examOrderNumber)\r\n                  .map((e) => (\r\n                    <li key={e._id}>\r\n                      <h5 className=\"mb-1\">\r\n                        {`[${e.difficulty}] `}\r\n                        {e.name}\r\n                        <EditExamBttn\r\n                          courseId={props.routeProps.match.params.courseId}\r\n                          topicId={props.routeProps.match.params.topicId}\r\n                          examId={e._id}\r\n                        />\r\n                      </h5>\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            ) : (\r\n              <h5>-</h5>\r\n            )}\r\n            <NewExamBttn\r\n              courseId={props.routeProps.match.params.courseId}\r\n              topicId={topic._id}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminTopicDetail;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst UploadImage = React.memo(({ setFieldValue, onBlur, photo }) => {\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        Medalla\r\n        <strong className=\"text-danger\">*</strong>\r\n        <small className=\"ml-1\">(.jpg, .jpeg, .gif y .png)</small>\r\n      </Form.Label>\r\n      {/* the following FORM.FILE only works on \"react-bootstrap\": \"^1.0.0\",  */}\r\n      <Form.File\r\n        encType=\"multipart/form-data\"\r\n        accept=\"image/*\"\r\n        label={photo ? photo : \"\"}\r\n        data-browse=\"Buscar\"\r\n        id=\"file\"\r\n        name=\"file\"\r\n        type=\"file\"\r\n        onChange={(event) => {\r\n          setFieldValue(\"file\", event.currentTarget.files[0]);\r\n          setFieldValue(\r\n            \"photo\",\r\n            event.currentTarget.files[0]\r\n              ? event.currentTarget.files[0].name\r\n              : \"\"\r\n          );\r\n        }}\r\n        onBlur={onBlur}\r\n        custom\r\n      />\r\n      <ErrorMessage className=\"text-danger\" name=\"file\" component=\"div\" />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default UploadImage;\r\n","import React from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container, Row, Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport UploadImage from \"./components/UploadImage\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst AdminNewCrouse = React.memo((props) => {\r\n  const PHOTO_SIZE = 1000000;\r\n  const SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/gif\",\r\n    \"image/png\",\r\n  ];\r\n\r\n  const yupschema = yup.object({\r\n    name: yup.string().min(3, \"Nombre demasiado corto\").required(\"Requerido\"),\r\n    subject: yup\r\n      .string()\r\n      .notOneOf([\"Elige...\"], \"Requerido\")\r\n      .required(\"Requerido\"),\r\n    description: yup.string().required(\"Requerido\"),\r\n    freestyleTimer: yup\r\n      .number()\r\n      .positive(\"El número debe ser mayor a 1\")\r\n      .required(\"Requerido\"),\r\n    rewardName: yup.string().required(\"Requerido\"),\r\n    file: yup\r\n      .mixed()\r\n      .required(\"Requerido\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Imagen muy pesada\",\r\n        (value) => value && value.size <= PHOTO_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Formato no soportado\",\r\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  return (\r\n    <AdminLayout\r\n      title=\"Nuevo Tema\"\r\n      leftBarActive=\"Cursos\"\r\n      backBttn={\"/admin/courses/edit/\" + props.routeProps.match.params.courseId}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            <h3 className=\"mb-3\">Ingresa los datos del tema.</h3>\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                subject: \"\",\r\n                description: \"\",\r\n                freestyleTimer: \"\",\r\n                rewardName: \"\",\r\n                photo: undefined,\r\n                file: undefined,\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                // it's neccessary to create a FormData so multer can storage the image in the backend\r\n                let topicData = new FormData();\r\n                topicData.append(\"name\", values.name);\r\n                topicData.append(\"subject\", values.subject);\r\n                topicData.append(\"description\", values.description);\r\n                topicData.append(\"freestyleTimer\", values.freestyleTimer);\r\n                topicData.append(\"rewardName\", values.rewardName);\r\n                topicData.append(\"photo\", values.photo);\r\n                topicData.append(\"file\", values.file);\r\n                topicData.append(\r\n                  \"courseId\",\r\n                  props.routeProps.match.params.courseId\r\n                );\r\n                //\r\n                TeacherAPI.t_newTopic(topicData)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"Tema agregado con éxito\");\r\n                    window.location.href =\r\n                      \"/admin/courses/edit/\" +\r\n                      props.routeProps.match.params.courseId;\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Ocurrió un error.\");\r\n                    setSubmitting(false);\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name */}\r\n                  <Form.Row>\r\n                    <Col md={6}>\r\n                      <Form.Label>\r\n                        Nombre\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"50\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Form.Label>\r\n                        Materia\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        type=\"text\"\r\n                        name=\"subject\"\r\n                        defaultValue=\"Elige...\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.subject && !errors.subject}\r\n                        isInvalid={touched.subject && !!errors.subject}\r\n                      >\r\n                        <option disabled>Elige...</option>\r\n                        <option value=\"Álgebra\">Álgebra</option>\r\n                        <option value=\"Aritmética\">Aritmética</option>\r\n                        <option value=\"Cálculo Diferencial\">\r\n                          Cálculo Diferencial\r\n                        </option>\r\n                        <option value=\"Cálculo Integral\">\r\n                          Cálculo Integral\r\n                        </option>\r\n                        <option value=\"Funciones\">Funciones</option>\r\n\r\n                        <option value=\"Geometría\">Geometría</option>\r\n                        <option value=\"Geometría Analítica\">\r\n                          Geometría Analítica\r\n                        </option>\r\n                        <option value=\"Misceláneos\">Misceláneos</option>\r\n                        <option value=\"Pre-Cálculo\">Pre-Cálculo</option>\r\n                        <option value=\"Probabilidad\">Probabilidad</option>\r\n                        <option value=\"Sistema de Medición\">\r\n                          Sistema de Medición\r\n                        </option>\r\n                        <option value=\"Trigonometría\">Trigonometría</option>\r\n                      </Form.Control>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"subject\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* description */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col>\r\n                      <Form.Label>\r\n                        Descripción<strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"250\"\r\n                        as=\"textarea\"\r\n                        rows=\"4\"\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.description && !errors.description}\r\n                        isInvalid={touched.description && !!errors.description}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"description\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* reward */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col md={6}>\r\n                      <Form.Label>\r\n                        Nombre de medalla\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"150\"\r\n                        type=\"text\"\r\n                        name=\"rewardName\"\r\n                        value={values.rewardName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.rewardName && !errors.rewardName}\r\n                        isInvalid={touched.rewardName && !!errors.rewardName}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"rewardName\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <UploadImage\r\n                        photo={values.photo}\r\n                        setFieldValue={setFieldValue}\r\n                        onBlur={handleBlur}\r\n                        file={values.file}\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* freestyle timer */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col md={4}>\r\n                      <Form.Label>\r\n                        Duración modo rápido\r\n                        <strong className=\"text-danger\">*</strong>\r\n                      </Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"freestyleTimer\"\r\n                          value={values.freestyleTimer}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          isValid={\r\n                            touched.freestyleTimer && !errors.freestyleTimer\r\n                          }\r\n                          isInvalid={\r\n                            touched.freestyleTimer && !!errors.freestyleTimer\r\n                          }\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            minutos\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"freestyleTimer\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"mt-2\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  );\r\n});\r\n\r\nexport default AdminNewCrouse;\r\n","import React from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container, Row, Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst AdminNewExam = React.memo((props) => {\r\n  const yupschema = yup.object({\r\n    name: yup.string().required(\"Requerido\"),\r\n    description: yup.string().required(\"Requerido\"),\r\n    duration: yup\r\n      .number()\r\n      .positive(\"El número debe ser mayor a 1\")\r\n      .required(\"Requerido\"),\r\n    qCounter: yup\r\n      .number()\r\n      .positive(\"El número debe ser mayor a 1\")\r\n      .required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <AdminLayout\r\n      title=\"Nuevo Examen\"\r\n      leftBarActive=\"Cursos\"\r\n      backBttn={`/admin/courses/edit/topics/${props.routeProps.match.params.courseId}/${props.routeProps.match.params.topicId}`}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            <h3 className=\"mb-1\">Ingresa los datos del examen.</h3>\r\n            <strong>[{props.routeProps.match.params.difficulty}]</strong>\r\n            <br />\r\n            <br />\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                duration: \"\",\r\n                description: \"\",\r\n                qCounter: \"\",\r\n              }}\r\n              validationSchema={yupschema}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                values.courseId = props.routeProps.match.params.courseId;\r\n                values.topicId = props.routeProps.match.params.topicId;\r\n                values.difficulty = props.routeProps.match.params.difficulty;\r\n                values.examOrderNumber =\r\n                  values.difficulty === \"Basic\"\r\n                    ? 1\r\n                    : values.difficulty === \"Basic-Intermediate\"\r\n                    ? 2\r\n                    : values.difficulty === \"Intermediate\"\r\n                    ? 3\r\n                    : values.difficulty === \"Intermediate-Advanced\"\r\n                    ? 4\r\n                    : values.difficulty === \"Advanced\"\r\n                    ? 5\r\n                    : 0;\r\n                //\r\n                TeacherAPI.t_newExam(values)\r\n                  .then((res) => {\r\n                    console.log(res.data);\r\n                    alert(\"Examen agregado con éxito\");\r\n                    window.location.href = `/admin/courses/edit/topics/${props.routeProps.match.params.courseId}/${props.routeProps.match.params.topicId}`;\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Ocurrió un error.\");\r\n                    setSubmitting(false);\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  {/* name */}\r\n                  <Form.Row>\r\n                    <Col>\r\n                      <Form.Label>\r\n                        Nombre\r\n                        <strong className=\"text-danger\" title=\"Requerido\">\r\n                          *\r\n                        </strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"50\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.name && !errors.name}\r\n                        isInvalid={touched.name && !!errors.name}\r\n                      />\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* question counter */}\r\n                  <Form.Row className=\"mt-3\">\r\n                    <Col md={6}>\r\n                      <Form.Label>\r\n                        Cantidad de preguntas\r\n                        <strong className=\"text-danger\" title=\"Requerido\">\r\n                          *\r\n                        </strong>\r\n                      </Form.Label>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          maxLength=\"50\"\r\n                          type=\"number\"\r\n                          name=\"qCounter\"\r\n                          value={values.qCounter}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          isValid={touched.qCounter && !errors.qCounter}\r\n                          isInvalid={touched.qCounter && !!errors.qCounter}\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            preguntas\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"qCounter\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Form.Label>\r\n                        Duración\r\n                        <strong className=\"text-danger\" title=\"Requerido\">\r\n                          *\r\n                        </strong>\r\n                      </Form.Label>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          maxLength=\"50\"\r\n                          type=\"number\"\r\n                          name=\"duration\"\r\n                          value={values.duration}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          isValid={touched.duration && !errors.duration}\r\n                          isInvalid={touched.duration && !!errors.duration}\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            minutos\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup>\r\n                      <ErrorMessage\r\n                        className=\"text-danger\"\r\n                        name=\"duration\"\r\n                        component=\"div\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Row>\r\n                  {/* description */}\r\n                  <Form.Group className=\"mt-3\">\r\n                    <Form.Label>\r\n                      Descripción\r\n                      <strong className=\"text-danger\" title=\"Requerido\">\r\n                        *\r\n                      </strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows=\"3\"\r\n                      maxLength=\"250\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      value={values.description}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.description && !errors.description}\r\n                      isInvalid={touched.description && !!errors.description}\r\n                    />\r\n                    <ErrorMessage\r\n                      className=\"text-danger\"\r\n                      name=\"description\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Form.Group>\r\n                  {/* buttons */}\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Button\r\n                      variant=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  );\r\n});\r\n\r\nexport default AdminNewExam;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./studentitem.scss\";\r\n\r\nconst CourseItem = React.memo(({ name, email, _id }) => {\r\n  return (\r\n    <ListGroup.Item\r\n      action\r\n      className=\"text-left d-flex flex-column py-4 studentitemstyle\"\r\n      href={\"/admin/students/\" + _id}\r\n    >\r\n      <span className=\"studentitemtext\">{name}</span>\r\n      <span>\r\n        <i className=\"fas fa-at mr-1\" />\r\n        {email}\r\n      </span>\r\n    </ListGroup.Item>\r\n  );\r\n});\r\n\r\nCourseItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  _id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CourseItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport StudentItem from \"./components/StudentItem\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\n\r\nconst AdminStudents = React.memo(() => {\r\n  const [students, setStudents] = useState();\r\n\r\n  useEffect(() => {\r\n    TeacherAPI.t_fetchStudents()\r\n      .then((res) => setStudents(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, []);\r\n\r\n  return students ? (\r\n    <AdminLayout title=\"Alumnos\" leftBarActive=\"Alumnos\">\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            {students.length ? (\r\n              <>\r\n                <h3 className=\"mb-3\" style={{ color: \"#0f5257\" }}>\r\n                  Selecciona un alumno...\r\n                </h3>\r\n                <ListGroup>\r\n                  {students.map((s) => (\r\n                    <StudentItem\r\n                      key={s._id}\r\n                      name={s.name + \" \" + s.firstSurname}\r\n                      email={s.email}\r\n                      _id={s._id}\r\n                    />\r\n                  ))}\r\n                </ListGroup>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center mt-4\">No hay alumnos</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminStudents;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\nimport AdminButton from \"../../components/AdminButton\";\r\n\r\nconst AdminStudentDetails = React.memo((props) => {\r\n  const [student, setStudent] = useState();\r\n\r\n  useEffect(() => {\r\n    const studentId = props.routeProps.match.params.studentId;\r\n\r\n    TeacherAPI.t_fetchOneStudent(studentId)\r\n      .then((res) => {\r\n        setStudent(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, [props.routeProps.match.params.studentId]);\r\n\r\n  return student ? (\r\n    <AdminLayout\r\n      backBttn=\"/admin/students\"\r\n      title=\"Detalle del Alumno\"\r\n      leftBarActive=\"Alumnos\"\r\n    >\r\n      <Container fluid>\r\n        {/* username */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Usuario</span>\r\n            <h1>{student.email.split(\"@\", 1)[0]}</h1>\r\n          </Col>\r\n        </Row>\r\n        {/* email */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Correo electrónico</span>\r\n            <h2>{student.email}</h2>\r\n          </Col>\r\n        </Row>\r\n        {/* name */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Nombre completo</span>\r\n            <h3>\r\n              {student.name +\r\n                \" \" +\r\n                student.firstSurname +\r\n                \" \" +\r\n                student.secondSurname}\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        {/* registered at */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Fecha de registro</span>\r\n            <h5>\r\n              <i className=\"far fa-calendar-alt mr-2\" />\r\n              {moment(student.registeredAt).format(\"LL\")}\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {/* courses bought */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted d-flex\">Cursos comprados</span>\r\n            {student.courses.length ? (\r\n              <ul className=\"mb-2\">\r\n                {student.courses.map((c) => {\r\n                  return (\r\n                    <li key={c._id}>\r\n                      <h5 className=\"mb-0\">{c.name}</h5>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              <h5>Ninguno</h5>\r\n            )}\r\n            <AdminButton\r\n              content={\r\n                <>\r\n                  <i className=\"fas fa-shopping-cart mr-2\" />\r\n                  <span>Asignar curso</span>\r\n                </>\r\n              }\r\n              link={\r\n                \"/admin/students/unpurchased/\" +\r\n                props.routeProps.match.params.studentId\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {/* attempts */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted d-flex\">\r\n              Exámenes presentados / Calificaciones perfectas\r\n            </span>\r\n            <h2 className=\"mb-1\">\r\n              {student.attempts.length +\r\n                \" / \" +\r\n                student.attempts.filter((a) => a.grade === 10).length}\r\n            </h2>\r\n            <AdminButton\r\n              content={\r\n                <>\r\n                  <i className=\"fas fa-history mr-2\" />\r\n                  <span>Ver historial</span>\r\n                </>\r\n              }\r\n              link={\r\n                \"/admin/students/history/\" +\r\n                props.routeProps.match.params.studentId\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {/* medallas */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Medallas</span>\r\n            {student.rewards.length ? (\r\n              <ul>\r\n                {student.rewards.map((r) => {\r\n                  return (\r\n                    <li key={r.name}>\r\n                      <h5 className=\"mb-0\">{r.name}</h5>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              <h5>Sin medallas</h5>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminStudentDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, ListGroup, Col, Button } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\nimport \"./assigncourse.scss\";\r\n\r\nconst AdminAssignCourse = React.memo((props) => {\r\n  const [unpurchased, setUnpurchased] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const studentId = props.routeProps.match.params.studentId;\r\n\r\n    TeacherAPI.t_fetchStudentUnpurchased(studentId)\r\n      .then((res) => setUnpurchased(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, [props.routeProps.match.params.studentId]);\r\n\r\n  const assignCourse = (courseId) => {\r\n    TeacherAPI.t_assignCourse({\r\n      courseId,\r\n      studentId: props.routeProps.match.params.studentId,\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(\"El curso fue agregado con éxito\");\r\n        window.location.href =\r\n          \"/admin/students/\" + props.routeProps.match.params.studentId;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  };\r\n\r\n  return unpurchased ? (\r\n    <AdminLayout\r\n      title=\"Asignar Curso\"\r\n      leftBarActive=\"Alumnos\"\r\n      backBttn={\"/admin/students/\" + props.routeProps.match.params.studentId}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            <h3>Elige un curso de la lista...</h3>\r\n            <span className=\"mb-4\">\r\n              Sólo se muestran cursos que no ha adquirido el alumno\r\n            </span>\r\n            {unpurchased.length ? (\r\n              <ListGroup variant=\"flush\" className=\"mt-3\">\r\n                {unpurchased.map((u) => (\r\n                  <ListGroup.Item key={u._id} className=\"d-flex py-3\">\r\n                    <h4 className=\"mb-0\">{u.name}</h4>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      className=\"ml-auto assignBttn\"\r\n                      onClick={() => assignCourse(u._id)}\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart mr-2\" />\r\n                      Asignar\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            ) : (\r\n              <div className=\"py-4 text-center\">\r\n                <em>No hay cursos disponibles para asignar a este alumno</em>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminAssignCourse;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Table, Col } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport AdminLayout from \"../../layout/AdminLayout\";\r\nimport AdminSpinner from \"../../components/AdminSpinner\";\r\n\r\nconst AdminStudentHistory = React.memo((props) => {\r\n  const [history, setHistory] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const studentId = props.routeProps.match.params.studentId;\r\n\r\n    TeacherAPI.t_fetchStudentHistory(studentId)\r\n      .then((res) => setHistory(res.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, [props.routeProps.match.params.studentId]);\r\n\r\n  return history ? (\r\n    <AdminLayout\r\n      title=\"Historial de Exámenes\"\r\n      leftBarActive=\"Alumnos\"\r\n      backBttn={\"/admin/students/\" + props.routeProps.match.params.studentId}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            <h3 className=\"mb-3\">Exámenes...</h3>\r\n            {history.length ? (\r\n              <Table bordered size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th\r\n                      className=\"py-3 text-center\"\r\n                      style={{ backgroundColor: \"#f4fbf8\" }}\r\n                    >\r\n                      <h5 className=\"mb-0\">Fecha</h5>\r\n                    </th>\r\n                    <th\r\n                      className=\"py-3 text-center\"\r\n                      style={{ backgroundColor: \"#f4fbf8\" }}\r\n                    >\r\n                      <h5 className=\"mb-0\">Examen</h5>\r\n                    </th>\r\n                    <th\r\n                      className=\"py-3 text-center\"\r\n                      style={{ backgroundColor: \"#f4fbf8\" }}\r\n                    >\r\n                      <h5 className=\"mb-0\">Calificación</h5>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.map((h) => {\r\n                    return (\r\n                      <tr key={h._id}>\r\n                        <td>{moment(h.date).format(\"L\")}</td>\r\n                        <td>{h.exam.name}</td>\r\n                        <td className=\"text-center\">{h.grade}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <div className=\"py-4 text-center\">\r\n                <em>Este alumno no ha presentado ningún examen</em>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminStudentHistory;\r\n","import React from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeachAPI from \"../../../utils/TeacherAPI\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResponseForm = React.memo(({ msgId, email }) => {\r\n  const yupschema = yup.object({\r\n    body: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"mt-3 text-dark\">Respuesta</h5>\r\n      <Formik\r\n        initialValues={{\r\n          body: \"\",\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.msgId = msgId;\r\n          values.email = email;\r\n          TeachAPI.t_respondMsg(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"Mensaje respondido, el usuario será notificado\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              alert(\"Ocurrió un error, vuelve a intentarlo más tarde\");\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* body */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  maxLength=\"250\"\r\n                  type=\"text\"\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  name=\"body\"\r\n                  value={values.body}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.body && !errors.body}\r\n                  isInvalid={touched.body && !!errors.body}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"body\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group>\r\n              <Button\r\n                variant=\"dark\"\r\n                type=\"submit\"\r\n                className=\"shadow-sm mt-3\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n});\r\n\r\nResponseForm.propTypes = {\r\n  msgId: PropTypes.string.isRequired,\r\n  email: PropTypes.string,\r\n};\r\n\r\nexport default ResponseForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ListGroup,\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\nimport ResponseForm from \"./ResponseForm\";\r\n\r\nconst ItemModal = React.memo(({ message }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    window.location.reload();\r\n  };\r\n  const handleShow = () => {\r\n    TeacherAPI.t_markSeen(message._id)\r\n      .then(() => console.log(\"marked seen.\"))\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        err.response.data.msg\r\n          ? alert(err.response.data.msg)\r\n          : alert(\"Ocurrió un error al marcar mensaje como leído.\");\r\n      });\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item\r\n        className=\"d-flex py-4 courseitemstyle\"\r\n        action\r\n        onClick={handleShow}\r\n      >\r\n        <div className=\"d-flex flex-column\">\r\n          <strong>Fecha</strong>\r\n          {moment(message.sentAt).format(\"L\")}\r\n        </div>\r\n        <div className=\"d-flex flex-column ml-3\">\r\n          <strong>Origen</strong>\r\n          {message.source}\r\n        </div>\r\n        <div className=\"d-flex flex-column ml-3\">\r\n          <strong>Correo</strong>\r\n          {message.email}\r\n        </div>\r\n        <div className=\"d-flex flex-column ml-3\">\r\n          <strong>Descripción</strong>\r\n          {message.subject.indexOf(\">\") === -1 ? (\r\n            message.subject\r\n          ) : (\r\n            <div>\r\n              <span className=\"d-block\">\r\n                {message.subject.substr(0, message.subject.indexOf(\">\"))}\r\n              </span>\r\n              <Image\r\n                src={message.subject.substr(\r\n                  message.subject.indexOf(\">\") + 1,\r\n                  999\r\n                )}\r\n                width=\"70\"\r\n                height=\"100\"\r\n                className=\"mt-3\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {message.seen ? null : (\r\n          <i\r\n            className=\"fas fa-certificate text-warning ml-auto\"\r\n            style={{ fontSize: \"22px\" }}\r\n            title=\"Nuevo\"\r\n          />\r\n        )}\r\n        {message.answered ? (\r\n          <i\r\n            className=\"fas fa-check-circle text-primary ml-auto\"\r\n            style={{ fontSize: \"22px\" }}\r\n            title=\"Respondido\"\r\n          />\r\n        ) : null}\r\n      </ListGroup.Item>\r\n\r\n      <Modal show={show} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Body className=\"bg-light rounded shadow\">\r\n          {/* top */}\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-3\">Mensaje...</h3>\r\n            <Button\r\n              className=\"ml-auto text-dark\"\r\n              variant=\"link\"\r\n              size=\"sm\"\r\n              title=\"Cerrar\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" style={{ fontSize: \"22px\" }} />\r\n            </Button>\r\n          </div>\r\n          <Row>\r\n            <Col>\r\n              <h5 className=\"text-dark\">Origen</h5>\r\n              {message.source}\r\n            </Col>\r\n            <Col>\r\n              {message.type === \"Student\" ? (\r\n                <div className=\"d-flex flex-column\">\r\n                  <h5 className=\"text-dark\">Usuario</h5>\r\n                  {message.username}\r\n                </div>\r\n              ) : (\r\n                <div className=\"d-flex flex-column\">\r\n                  <h5 className=\"text-dark\">Nombre</h5>\r\n                  {message.name}\r\n                </div>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              <h5 className=\"text-dark\">Fecha</h5>\r\n              {moment(message.sentAt).format(\"L\")}\r\n            </Col>\r\n          </Row>\r\n          <div>\r\n            {message.type === \"Student\" ? (\r\n              <div className=\"d-flex flex-column mt-3\">\r\n                <h5 className=\"text-dark\">Nombre</h5>\r\n                {message.name}\r\n              </div>\r\n            ) : null}\r\n            <div className=\"d-flex flex-column mt-3\">\r\n              <h5 className=\"text-dark\">Descripción</h5>\r\n              {message.subject.indexOf(\">\") === -1 ? (\r\n                message.subject\r\n              ) : (\r\n                <div>\r\n                  <span className=\"d-block\">\r\n                    {message.subject.substr(0, message.subject.indexOf(\">\"))}\r\n                  </span>\r\n                  <Image\r\n                    src={message.subject.substr(\r\n                      message.subject.indexOf(\">\") + 1,\r\n                      999\r\n                    )}\r\n                    width=\"70\"\r\n                    height=\"100\"\r\n                    className=\"mt-3\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"d-flex flex-column mt-3\">\r\n              <h5 className=\"text-dark\">Correo</h5>\r\n              {message.email}\r\n            </div>\r\n            <h5 className=\"mt-3 text-dark\">Mensaje</h5>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  placeholder={message.body}\r\n                  disabled\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            {/* response */}\r\n            {message.source === \"Inicio\" ? null : !message.answered ? (\r\n              <ResponseForm msgId={message._id} email={message.email} />\r\n            ) : (\r\n              <>\r\n                <h5 className=\"mt-3 text-dark\">Respuesta</h5>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows=\"5\"\r\n                      placeholder={message.response}\r\n                      disabled\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n                <small className=\"text-muted\">\r\n                  Respondido el {moment(message.respondedAt).format(\"LLL\")}\r\n                </small>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nItemModal.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ItemModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../layout/AdminLayout\";\r\nimport { Container, Row, Col, ListGroup, Button } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../utils/TeacherAPI\";\r\nimport ItemModal from \"./components/ItemModal\";\r\nimport AdminSpinner from \"../components/AdminSpinner\";\r\n\r\nconst AdminMessages = React.memo(() => {\r\n  const [messages, setMessages] = useState();\r\n  const [filtered, setFiltered] = useState();\r\n  const [filter, setFilter] = useState();\r\n\r\n  useEffect(() => {\r\n    TeacherAPI.t_fetchMessages()\r\n      .then((res) => {\r\n        setMessages(res.data);\r\n        setFiltered(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  }, []);\r\n\r\n  const filterProducts = (criteria) => {\r\n    switch (criteria) {\r\n      case \"New\":\r\n        setFilter(criteria === filter ? null : criteria);\r\n        setFiltered(\r\n          criteria === filter ? messages : messages.filter((msg) => !msg.seen)\r\n        );\r\n        break;\r\n      default:\r\n        setFilter(criteria === filter ? null : criteria);\r\n        setFiltered(\r\n          criteria === filter\r\n            ? messages\r\n            : messages.filter((msg) => msg.source === criteria)\r\n        );\r\n    }\r\n  };\r\n\r\n  const filters = (\r\n    <div className=\"d-flex\">\r\n      <Button\r\n        disabled={messages ? false : true}\r\n        active={filter === \"New\" ? true : false}\r\n        variant=\"outline-warning\"\r\n        className=\"shadow-sm\"\r\n        onClick={() => filterProducts(\"New\")}\r\n      >\r\n        Nuevos\r\n      </Button>\r\n      <Button\r\n        disabled={messages ? false : true}\r\n        active={filter === \"Inicio\" ? true : false}\r\n        variant=\"outline-light\"\r\n        className=\"shadow-sm ml-2\"\r\n        onClick={() => filterProducts(\"Inicio\")}\r\n      >\r\n        Inicio\r\n      </Button>\r\n      <Button\r\n        disabled={messages ? false : true}\r\n        active={filter === \"Tema\" ? true : false}\r\n        variant=\"outline-light\"\r\n        className=\"shadow-sm ml-2\"\r\n        onClick={() => filterProducts(\"Tema\")}\r\n      >\r\n        Tema\r\n      </Button>\r\n      <Button\r\n        disabled={messages ? false : true}\r\n        active={filter === \"Pregunta\" ? true : false}\r\n        variant=\"outline-light\"\r\n        className=\"shadow-sm ml-2\"\r\n        onClick={() => filterProducts(\"Pregunta\")}\r\n      >\r\n        Pregunta\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return filtered ? (\r\n    <AdminLayout title=\"Mensajes\" leftBarActive=\"Mensajes\" buttons={filters}>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={{ offset: 2, span: 8 }}>\r\n            {filtered.length ? (\r\n              <>\r\n                <h3 className=\"mb-3\" style={{ color: \"#0f5257\" }}>\r\n                  Selecciona un mensaje para ver su contenido...\r\n                </h3>\r\n                <ListGroup>\r\n                  {filtered.map((m) => (\r\n                    <ItemModal key={m._id} message={m} />\r\n                  ))}\r\n                </ListGroup>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center mt-4\">No hay mensajes</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminMessages;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdminExamModal = React.memo(\r\n  ({ modalTitle, Form, formLabel, formInitialText, examId }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"editButton ml-2\"\r\n          onClick={handleShow}\r\n          title={modalTitle}\r\n        >\r\n          <i className=\"fas fa-pen-alt\" />\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Body className=\"bg-light rounded\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"mb-0 text-dark\">Editar</h3>\r\n              <Button\r\n                variant=\"link\"\r\n                className=\"text-dark ml-auto\"\r\n                onClick={handleClose}\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <Form\r\n                formLabel={formLabel}\r\n                formInitialText={formInitialText}\r\n                examId={examId}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nAdminExamModal.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalHeader: PropTypes.string,\r\n  //   Form: PropTypes.element,\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default AdminExamModal;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewQuestionBttn = React.memo(({ text, Form, examId, courseId }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} variant=\"warning\" className=\"shadow-sm\">\r\n        {/* <i className=\"fas fa-plus-square mr-2\" /> */}\r\n        <span>{text}</span>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} size=\"lg\" backdrop=\"static\">\r\n        <Modal.Body className=\"bg-light rounded\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"mb-0 text-dark\">{text}</h3>\r\n            <Button\r\n              variant=\"link\"\r\n              className=\"text-dark ml-auto\"\r\n              onClick={handleClose}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Form examId={examId} courseId={courseId} />\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nNewQuestionBttn.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string,\r\n};\r\n\r\nexport default NewQuestionBttn;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst ExamNameForm = React.memo(({ formLabel, formInitialText, examId }) => {\r\n  const yupschema = yup.object({\r\n    newName: yup.string().required(\"Requerido\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newName: formInitialText,\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        values.examId = examId;\r\n        //\r\n        TeacherAPI.t_updateExamName(values)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"El nombre del examen fue actualizado con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* name */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>{formLabel}</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"40\"\r\n                type=\"text\"\r\n                name=\"newName\"\r\n                value={values.newName}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.newName && !errors.newName}\r\n                isInvalid={touched.newName && !!errors.newName}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"newName\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nExamNameForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default ExamNameForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col, InputGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst ExamDurationForm = React.memo(\r\n  ({ formLabel, formInitialText, examId }) => {\r\n    const yupschema = yup.object({\r\n      newDuration: yup\r\n        .number()\r\n        .positive(\"El número debe ser mayor a 1\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newDuration: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.examId = examId;\r\n          //\r\n          TeacherAPI.t_updateExamDuration(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"La duración del examen fue actualizada con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    maxLength=\"40\"\r\n                    type=\"number\"\r\n                    name=\"newDuration\"\r\n                    value={values.newDuration}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.newDuration && !errors.newDuration}\r\n                    isInvalid={touched.newDuration && !!errors.newDuration}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text id=\"basic-addon2\">minutos</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newDuration\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nExamDurationForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.number,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default ExamDurationForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col, InputGroup } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst ExamQCounterForm = React.memo(\r\n  ({ formLabel, formInitialText, examId }) => {\r\n    const yupschema = yup.object({\r\n      newQCounter: yup\r\n        .number()\r\n        .positive(\"El número debe ser mayor a 1\")\r\n        .required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newQCounter: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.examId = examId;\r\n          //\r\n          TeacherAPI.t_updateExamQCounter(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"Las preguntas del examen fueron actualizadas con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"newQCounter\"\r\n                    value={values.newQCounter}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.newQCounter && !errors.newQCounter}\r\n                    isInvalid={touched.newQCounter && !!errors.newQCounter}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text id=\"basic-addon2\">preguntas</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newQCounter\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nExamQCounterForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.number,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default ExamQCounterForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst ExamDescriptionForm = React.memo(\r\n  ({ formLabel, formInitialText, examId }) => {\r\n    const yupschema = yup.object({\r\n      newDescription: yup.string().required(\"Requerido\"),\r\n    });\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newDescription: formInitialText,\r\n        }}\r\n        validationSchema={yupschema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          values.examId = examId;\r\n          //\r\n          TeacherAPI.t_updateExamDescription(values)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              alert(\"La descripción del examen fue actualizada con éxito.\");\r\n              window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n              setSubmitting(false);\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            {/* name */}\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>{formLabel}</Form.Label>\r\n                <Form.Control\r\n                  maxLength=\"250\"\r\n                  type=\"text\"\r\n                  as=\"textarea\"\r\n                  rows=\"5\"\r\n                  name=\"newDescription\"\r\n                  value={values.newDescription}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isValid={touched.newDescription && !errors.newDescription}\r\n                  isInvalid={touched.newDescription && !!errors.newDescription}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"text-danger\"\r\n                  name=\"newDescription\"\r\n                  component=\"div\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            {/* buttons */}\r\n            <Form.Group className=\"text-right\">\r\n              <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n                Guardar\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n);\r\n\r\nExamDescriptionForm.propTypes = {\r\n  formLabel: PropTypes.string,\r\n  formInitialText: PropTypes.string,\r\n  courseId: PropTypes.string,\r\n  topicId: PropTypes.string,\r\n};\r\n\r\nexport default ExamDescriptionForm;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nexport const MultipleOptionForm = React.memo(({ examId }) => {\r\n  const yupschema = yup.object({\r\n    qInstruction: yup.string().required(\"Requerido\"),\r\n    qTechnicalInstruction: yup.string(),\r\n    qOption1: yup.string().required(\"Requerido\"),\r\n    qOption2: yup.string().required(\"Requerido\"),\r\n    qOption3: yup.string().required(\"Requerido\"),\r\n    qOption4: yup.string().required(\"Requerido\"),\r\n    qCorrectAnswer: yup.string().required(\"Requerido\"),\r\n    qComment: yup.string(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        qInstruction: \"\",\r\n        qTechnicalInstruction: \"\",\r\n        qOption1: \"\",\r\n        qOption2: \"\",\r\n        qOption3: \"\",\r\n        qOption4: \"\",\r\n        qCorrectAnswer: \"\",\r\n        qComment: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        values.qInstruction = values.qInstruction.trim();\r\n        values.qTechnicalInstruction = values.qTechnicalInstruction.trim();\r\n        values.qOption1 = values.qOption1.trim();\r\n        values.qOption2 = values.qOption2.trim();\r\n        values.qOption3 = values.qOption3.trim();\r\n        values.qOption4 = values.qOption4.trim();\r\n        values.qCorrectAnswer = values.qCorrectAnswer.trim();\r\n        values.qInstructiqCommenton = values.qComment.trim();\r\n\r\n        values.examId = examId;\r\n        //\r\n        TeacherAPI.t_newMultipleOptionQuestion(values)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"La pregunta ha sido registrada con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* qInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Instrucción\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qInstruction\"\r\n                value={values.qInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qInstruction && !errors.qInstruction}\r\n                isInvalid={touched.qInstruction && !!errors.qInstruction}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qTechnicalInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Instrucción técnica</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qTechnicalInstruction\"\r\n                value={values.qTechnicalInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={\r\n                  touched.qTechnicalInstruction && !errors.qTechnicalInstruction\r\n                }\r\n                isInvalid={\r\n                  touched.qTechnicalInstruction &&\r\n                  !!errors.qTechnicalInstruction\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qTechnicalInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* options 1 - 4 */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 1\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption1\"\r\n                value={values.qOption1}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption1 && !errors.qOption1}\r\n                isInvalid={touched.qOption1 && !!errors.qOption1}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption1\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 2\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption2\"\r\n                value={values.qOption2}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption2 && !errors.qOption2}\r\n                isInvalid={touched.qOption2 && !!errors.qOption2}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption2\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 3\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption3\"\r\n                value={values.qOption3}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption3 && !errors.qOption3}\r\n                isInvalid={touched.qOption3 && !!errors.qOption3}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption3\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 4\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption4\"\r\n                value={values.qOption4}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption4 && !errors.qOption4}\r\n                isInvalid={touched.qOption4 && !!errors.qOption4}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption4\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* correct answer */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswer\"\r\n                value={values.qCorrectAnswer}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswer && !errors.qCorrectAnswer}\r\n                isInvalid={touched.qCorrectAnswer && !!errors.qCorrectAnswer}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswer\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qComment */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Comentario</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qComment\"\r\n                value={values.qComment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qComment && !errors.qComment}\r\n                isInvalid={touched.qComment && !!errors.qComment}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qComment\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nMultipleOptionForm.propTypes = {\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nexport const SimpleQuestionForm = React.memo(({ examId }) => {\r\n  const yupschema = yup.object({\r\n    qInstruction: yup.string().required(\"Requerido\"),\r\n    qTechnicalInstruction: yup.string(),\r\n    qCorrectAnswers: yup.string().required(\"Requerido\"),\r\n    qCALeft: yup.string(),\r\n    qCARight: yup.string(),\r\n    qComment: yup.string(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        qInstruction: \"\",\r\n        qTechnicalInstruction: \"\",\r\n        qCorrectAnswers: \"\",\r\n        qCALeft: \"\",\r\n        qCARight: \"\",\r\n        qComment: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        values.qInstruction = values.qInstruction.trim();\r\n        values.qTechnicalInstruction = values.qTechnicalInstruction.trim();\r\n        values.qCorrectAnswers = values.qCorrectAnswers.trim();\r\n        values.qCALeft = values.qCALeft.trim();\r\n        values.qCARight = values.qCARight.trim();\r\n        values.qComment = values.qComment.trim();\r\n        values.examId = examId;\r\n        //\r\n        TeacherAPI.t_newSimpleQuestion(values)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"La pregunta ha sido registrada con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* qInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Instrucción\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qInstruction\"\r\n                value={values.qInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qInstruction && !errors.qInstruction}\r\n                isInvalid={touched.qInstruction && !!errors.qInstruction}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qTechnicalInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Instrucción técnica</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qTechnicalInstruction\"\r\n                value={values.qTechnicalInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={\r\n                  touched.qTechnicalInstruction && !errors.qTechnicalInstruction\r\n                }\r\n                isInvalid={\r\n                  touched.qTechnicalInstruction &&\r\n                  !!errors.qTechnicalInstruction\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qTechnicalInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* answers */}\r\n          <Form.Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Label>Complemento izquierda</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCALeft\"\r\n                value={values.qCALeft}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCALeft && !errors.qCALeft}\r\n                isInvalid={touched.qCALeft && !!errors.qCALeft}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCALeft\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswers\"\r\n                value={values.qCorrectAnswers}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswers && !errors.qCorrectAnswers}\r\n                isInvalid={touched.qCorrectAnswers && !!errors.qCorrectAnswers}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswers\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>Complemento derecha</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCARight\"\r\n                value={values.qCARight}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCARight && !errors.qCARight}\r\n                isInvalid={touched.qCARight && !!errors.qCARight}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCARight\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          {/* qComment */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Comentario</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qComment\"\r\n                value={values.qComment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qComment && !errors.qComment}\r\n                isInvalid={touched.qComment && !!errors.qComment}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qComment\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nSimpleQuestionForm.propTypes = {\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nexport const SimpleWithImageForm = React.memo(({ examId, courseId }) => {\r\n  const PHOTO_SIZE = 4000000;\r\n  const SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/gif\",\r\n    \"image/png\",\r\n  ];\r\n\r\n  const yupschema = yup.object({\r\n    qInstruction: yup.string().required(\"Requerido\"),\r\n    file: yup\r\n      .mixed()\r\n      .required(\"Requerido\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Imagen muy pesada\",\r\n        (value) => value && value.size <= PHOTO_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Formato no soportado\",\r\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n    qCorrectAnswers: yup.string().required(\"Requerido\"),\r\n    qCALeft: yup.string(),\r\n    qCARight: yup.string(),\r\n    qComment: yup.string(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        qInstruction: \"\",\r\n        image: undefined,\r\n        file: undefined,\r\n        qCorrectAnswers: \"\",\r\n        qCALeft: \"\",\r\n        qCARight: \"\",\r\n        qComment: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n\r\n        let questionData = new FormData();\r\n        questionData.append(\"qInstruction\", values.qInstruction.trim());\r\n        questionData.append(\"image\", values.image);\r\n        questionData.append(\"file\", values.file);\r\n        questionData.append(\"qCorrectAnswers\", values.qCorrectAnswers.trim());\r\n        questionData.append(\"qCALeft\", values.qCALeft.trim());\r\n        questionData.append(\"qCARight\", values.qCARight.trim());\r\n        questionData.append(\"qComment\", values.qComment.trim());\r\n\r\n        questionData.append(\"examId\", examId);\r\n        questionData.append(\"courseId\", courseId);\r\n\r\n        TeacherAPI.t_newSimpleWithImageQuestion(questionData)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"La pregunta ha sido registrada con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* qInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Instrucción\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qInstruction\"\r\n                value={values.qInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qInstruction && !errors.qInstruction}\r\n                isInvalid={touched.qInstruction && !!errors.qInstruction}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qTechnicalInstruction (image) */}\r\n          <Form.Row className=\"mb-3\">\r\n            <Form.Label>\r\n              Imagen\r\n              <strong className=\"text-danger\" title=\"Requerido\">\r\n                *\r\n              </strong>\r\n              <small className=\"ml-1\">(.jpg, .jpeg, .gif y .png)</small>\r\n            </Form.Label>\r\n            <Form.File\r\n              encType=\"multipart/form-data\"\r\n              accept=\"image/*\"\r\n              label={values.image ? values.image : \"\"}\r\n              data-browse=\"Buscar\"\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                setFieldValue(\r\n                  \"image\",\r\n                  event.currentTarget.files[0]\r\n                    ? event.currentTarget.files[0].name\r\n                    : \"\"\r\n                );\r\n              }}\r\n              onBlur={handleBlur}\r\n              custom\r\n            />\r\n            <ErrorMessage className=\"text-danger\" name=\"file\" component=\"div\" />\r\n          </Form.Row>\r\n          {/* answers */}\r\n          <Form.Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Label>Complemento izquierda</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCALeft\"\r\n                value={values.qCALeft}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCALeft && !errors.qCALeft}\r\n                isInvalid={touched.qCALeft && !!errors.qCALeft}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCALeft\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswers\"\r\n                value={values.qCorrectAnswers}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswers && !errors.qCorrectAnswers}\r\n                isInvalid={touched.qCorrectAnswers && !!errors.qCorrectAnswers}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswers\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>Complemento derecha</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCARight\"\r\n                value={values.qCARight}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCARight && !errors.qCARight}\r\n                isInvalid={touched.qCARight && !!errors.qCARight}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCARight\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          {/* qComment */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Comentario</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qComment\"\r\n                value={values.qComment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qComment && !errors.qComment}\r\n                isInvalid={touched.qComment && !!errors.qComment}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qComment\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nSimpleWithImageForm.propTypes = {\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nexport const SimpleWithTwoAnswersForm = React.memo(({ examId }) => {\r\n  const yupschema = yup.object({\r\n    qInstruction: yup.string().required(\"Requerido\"),\r\n    qTechnicalInstruction: yup.string(),\r\n    qCorrectAnswer1: yup.string().required(\"Requerido\"),\r\n    qCorrectAnswer2: yup.string().required(\"Requerido\"),\r\n    qCALeft1: yup.string(),\r\n    qCALeft2: yup.string(),\r\n    qCARight1: yup.string(),\r\n    qCARight2: yup.string(),\r\n    qComment: yup.string(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        qInstruction: \"\",\r\n        qTechnicalInstruction: \"\",\r\n        qCorrectAnswer1: \"\",\r\n        qCALeft1: \"\",\r\n        qCARight1: \"\",\r\n        qCorrectAnswer2: \"\",\r\n        qCALeft2: \"\",\r\n        qCARight2: \"\",\r\n        qComment: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        values.qInstruction = values.qInstruction.trim();\r\n        values.qTechnicalInstruction = values.qTechnicalInstruction.trim();\r\n        values.qCorrectAnswer1 = values.qCorrectAnswer1.trim();\r\n        values.qCARight1 = values.qCALeft1.trim();\r\n        values.qCARight1 = values.qCARight1.trim();\r\n        values.qCorrectAnswer2 = values.qCorrectAnswer2.trim();\r\n        values.qCALeft2 = values.qCALeft2.trim();\r\n        values.qCARight2 = values.qCARight2.trim();\r\n        values.qComment = values.qComment.trim();\r\n\r\n        values.examId = examId;\r\n        //\r\n        TeacherAPI.t_newSimpleWithTwoAnswersQuestion(values)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"La pregunta ha sido registrada con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* qInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Instrucción\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qInstruction\"\r\n                value={values.qInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qInstruction && !errors.qInstruction}\r\n                isInvalid={touched.qInstruction && !!errors.qInstruction}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qTechnicalInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Instrucción técnica</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qTechnicalInstruction\"\r\n                value={values.qTechnicalInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={\r\n                  touched.qTechnicalInstruction && !errors.qTechnicalInstruction\r\n                }\r\n                isInvalid={\r\n                  touched.qTechnicalInstruction &&\r\n                  !!errors.qTechnicalInstruction\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qTechnicalInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* answer 1 */}\r\n          <h5 className=\"text-dark\">Respuesta 1</h5>\r\n          <Form.Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Label>Complemento izquierda</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCALeft1\"\r\n                value={values.qCALeft1}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCALeft1 && !errors.qCALeft1}\r\n                isInvalid={touched.qCALeft1 && !!errors.qCALeft1}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCALeft1\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswer1\"\r\n                value={values.qCorrectAnswer1}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswer1 && !errors.qCorrectAnswer1}\r\n                isInvalid={touched.qCorrectAnswer1 && !!errors.qCorrectAnswer1}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswer1\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>Complemento derecha</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCARight1\"\r\n                value={values.qCARight1}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCARight1 && !errors.qCARight1}\r\n                isInvalid={touched.qCARight1 && !!errors.qCARight1}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCARight1\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          {/* answer 2 */}\r\n          <h5 className=\"text-dark\">Respuesta 2</h5>\r\n          <Form.Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Label>Complemento izquierda</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCALeft2\"\r\n                value={values.qCALeft2}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCALeft2 && !errors.qCALeft2}\r\n                isInvalid={touched.qCALeft2 && !!errors.qCALeft2}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCALeft2\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswer2\"\r\n                value={values.qCorrectAnswer2}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswer2 && !errors.qCorrectAnswer2}\r\n                isInvalid={touched.qCorrectAnswer2 && !!errors.qCorrectAnswer2}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswer2\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>Complemento derecha</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCARight2\"\r\n                value={values.qCARight2}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCARight2 && !errors.qCARight2}\r\n                isInvalid={touched.qCARight2 && !!errors.qCARight2}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCARight2\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          {/* qComment */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Comentario</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qComment\"\r\n                value={values.qComment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qComment && !errors.qComment}\r\n                isInvalid={touched.qComment && !!errors.qComment}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qComment\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nSimpleWithTwoAnswersForm.propTypes = {\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nexport const MultipleOptionWithImage = React.memo(({ examId, courseId }) => {\r\n  const PHOTO_SIZE = 4000000;\r\n  const SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/gif\",\r\n    \"image/png\",\r\n  ];\r\n\r\n  const yupschema = yup.object({\r\n    qInstruction: yup.string().required(\"Requerido\"),\r\n    file: yup\r\n      .mixed()\r\n      .required(\"Requerido\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Imagen muy pesada\",\r\n        (value) => value && value.size <= PHOTO_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Formato no soportado\",\r\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n    qOption1: yup.string().required(\"Requerido\"),\r\n    qOption2: yup.string().required(\"Requerido\"),\r\n    qOption3: yup.string().required(\"Requerido\"),\r\n    qOption4: yup.string().required(\"Requerido\"),\r\n    qCorrectAnswers: yup.string().required(\"Requerido\"),\r\n    qCALeft: yup.string(),\r\n    qCARight: yup.string(),\r\n    qComment: yup.string(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        qInstruction: \"\",\r\n        image: undefined,\r\n        file: undefined,\r\n        qOption1: \"\",\r\n        qOption2: \"\",\r\n        qOption3: \"\",\r\n        qOption4: \"\",\r\n        qCorrectAnswers: \"\",\r\n        qCALeft: \"\",\r\n        qCARight: \"\",\r\n        qComment: \"\",\r\n      }}\r\n      validationSchema={yupschema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n\r\n        let questionData = new FormData();\r\n        questionData.append(\"qInstruction\", values.qInstruction.trim());\r\n        questionData.append(\"image\", values.image);\r\n        questionData.append(\"file\", values.file);\r\n        questionData.append(\"qOption1\", values.qOption1.trim());\r\n        questionData.append(\"qOption2\", values.qOption2.trim());\r\n        questionData.append(\"qOption3\", values.qOption3.trim());\r\n        questionData.append(\"qOption4\", values.qOption4.trim());\r\n        questionData.append(\"qCorrectAnswers\", values.qCorrectAnswers.trim());\r\n        questionData.append(\"qCALeft\", values.qCALeft.trim());\r\n        questionData.append(\"qCARight\", values.qCARight.trim());\r\n        questionData.append(\"qComment\", values.qComment.trim());\r\n\r\n        questionData.append(\"examId\", examId);\r\n        questionData.append(\"courseId\", courseId);\r\n\r\n        TeacherAPI.t_newMultipleOptionWithImage(questionData)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            alert(\"La pregunta ha sido registrada con éxito.\");\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Ocurrió un error. Vuelve a intentarlo.\");\r\n            setSubmitting(false);\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {/* qInstruction */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Instrucción\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qInstruction\"\r\n                value={values.qInstruction}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qInstruction && !errors.qInstruction}\r\n                isInvalid={touched.qInstruction && !!errors.qInstruction}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qInstruction\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* qTechnicalInstruction (image) */}\r\n          <Form.Row className=\"mb-3\">\r\n            <Form.Label>\r\n              Imagen\r\n              <strong className=\"text-danger\" title=\"Requerido\">\r\n                *\r\n              </strong>\r\n              <small className=\"ml-1\">(.jpg, .jpeg, .gif y .png)</small>\r\n            </Form.Label>\r\n            <Form.File\r\n              encType=\"multipart/form-data\"\r\n              accept=\"image/*\"\r\n              label={values.image ? values.image : \"\"}\r\n              data-browse=\"Buscar\"\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                setFieldValue(\r\n                  \"image\",\r\n                  event.currentTarget.files[0]\r\n                    ? event.currentTarget.files[0].name\r\n                    : \"\"\r\n                );\r\n              }}\r\n              onBlur={handleBlur}\r\n              custom\r\n            />\r\n            <ErrorMessage className=\"text-danger\" name=\"file\" component=\"div\" />\r\n          </Form.Row>\r\n          {/* options 1 - 4 */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 1\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption1\"\r\n                value={values.qOption1}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption1 && !errors.qOption1}\r\n                isInvalid={touched.qOption1 && !!errors.qOption1}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption1\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 2\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption2\"\r\n                value={values.qOption2}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption2 && !errors.qOption2}\r\n                isInvalid={touched.qOption2 && !!errors.qOption2}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption2\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 3\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption3\"\r\n                value={values.qOption3}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption3 && !errors.qOption3}\r\n                isInvalid={touched.qOption3 && !!errors.qOption3}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption3\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>\r\n                Opción 4\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qOption4\"\r\n                value={values.qOption4}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qOption4 && !errors.qOption4}\r\n                isInvalid={touched.qOption4 && !!errors.qOption4}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qOption4\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* answers */}\r\n          <Form.Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Label>Complemento izquierda</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCALeft\"\r\n                value={values.qCALeft}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCALeft && !errors.qCALeft}\r\n                isInvalid={touched.qCALeft && !!errors.qCALeft}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCALeft\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>\r\n                Respuesta\r\n                <strong className=\"text-danger\" title=\"Requerido\">\r\n                  *\r\n                </strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                name=\"qCorrectAnswers\"\r\n                value={values.qCorrectAnswers}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCorrectAnswers && !errors.qCorrectAnswers}\r\n                isInvalid={touched.qCorrectAnswers && !!errors.qCorrectAnswers}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCorrectAnswers\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Label>Complemento derecha</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"25\"\r\n                type=\"text\"\r\n                name=\"qCARight\"\r\n                value={values.qCARight}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qCARight && !errors.qCARight}\r\n                isInvalid={touched.qCARight && !!errors.qCARight}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qCARight\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          {/* qComment */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Comentario</Form.Label>\r\n              <Form.Control\r\n                maxLength=\"250\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                rows=\"1\"\r\n                name=\"qComment\"\r\n                value={values.qComment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                isValid={touched.qComment && !errors.qComment}\r\n                isInvalid={touched.qComment && !!errors.qComment}\r\n              />\r\n              <ErrorMessage\r\n                className=\"text-danger\"\r\n                name=\"qComment\"\r\n                component=\"div\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {/* buttons */}\r\n          <Form.Group className=\"text-right\">\r\n            <Button variant=\"dark\" type=\"submit\" disabled={isSubmitting}>\r\n              Guardar\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nMultipleOptionWithImage.propTypes = {\r\n  examId: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport TeacherAPI from \"../../../utils/TeacherAPI\";\r\n\r\nconst AdminDeleteExamBttn = React.memo(({ courseId, examId, questionId }) => {\r\n  const handleClick = () => {\r\n    TeacherAPI.t_deleteQuestion({ courseId, examId, questionId })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // alert(\"Pregunta borrada con éxito\");\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"deleteButton\"\r\n        onClick={handleShow}\r\n        title=\"Borrar\"\r\n      >\r\n        <i className=\"fas fa-trash\" />\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <i className=\"fas fa-exclamation-triangle mr-2\" />\r\n            Advertencia\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"py-4 text-center\">\r\n          <span className=\"lead\">\r\n            ¿Estás seguro que deseas borrar la pregunta seleccionada?\r\n          </span>\r\n          <div className=\"d-flex flex-row justify-content-center mt-4\">\r\n            <Button variant=\"danger\" onClick={handleClick}>\r\n              Borrar\r\n            </Button>\r\n            <Button variant=\"link\" className=\"ml-2\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nAdminDeleteExamBttn.propTypes = {\r\n  courseId: PropTypes.string.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  questionId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AdminDeleteExamBttn;\r\n","import React from \"react\";\r\nimport { Table, Row, Col } from \"react-bootstrap\";\r\nimport AdminDeleteExamBttn from \"../components/AdminDeleteExamBttn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SimpleQuestionTable = React.memo(\r\n  ({ courseId, questions, examId }) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"my-3\">\r\n            Preguntas sencillas{` (${questions.length})`}\r\n          </h4>\r\n          <div className=\"mt-2 d-flex flex-column\">\r\n            <Table bordered striped size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Instrucción\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    I. Técnica\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Respuesta\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Comentario\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  ></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {questions.map((q) => {\r\n                  return (\r\n                    <tr key={q._id}>\r\n                      <td className=\"align-middle\">{q.qInstruction}</td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qTechnicalInstruction\r\n                          ? q.qTechnicalInstruction.text\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {String(\r\n                          `${q.qCorrectAnswers[0].complementLeft} ${q.qCorrectAnswers[0].answer} ${q.qCorrectAnswers[0].complementRight}`\r\n                        ).trim()}\r\n                      </td>\r\n                      <td className=\"align-middle\">{q.qComment}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <AdminDeleteExamBttn\r\n                          courseId={courseId}\r\n                          examId={examId}\r\n                          questionId={q._id}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n);\r\n\r\nSimpleQuestionTable.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Table, Row, Col, Image } from \"react-bootstrap\";\r\nimport AdminDeleteExamBttn from \"../components/AdminDeleteExamBttn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SimpleWithImageQuestionsTable = React.memo(\r\n  ({ questions, examId, courseId }) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"my-3\">\r\n            Preguntas sencillas con imagen{` (${questions.length})`}\r\n          </h4>\r\n          <div className=\"mt-2 d-flex flex-column\">\r\n            <Table bordered striped size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Instrucción\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Imagen\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Respuesta\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Comentario\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  ></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {questions.map((q) => {\r\n                  return (\r\n                    <tr key={q._id}>\r\n                      <td className=\"align-middle\">{q.qInstruction}</td>\r\n                      <td className=\"align-middle\">\r\n                        <Image\r\n                          src={q.qTechnicalInstruction.imageLink}\r\n                          width=\"85\"\r\n                          height=\"85\"\r\n                          className=\"my-1 mx-3\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {String(\r\n                          `${q.qCorrectAnswers[0].complementLeft} ${q.qCorrectAnswers[0].answer} ${q.qCorrectAnswers[0].complementRight}`\r\n                        ).trim()}\r\n                      </td>\r\n                      <td className=\"align-middle\">{q.qComment}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <AdminDeleteExamBttn\r\n                          courseId={courseId}\r\n                          examId={examId}\r\n                          questionId={q._id}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n);\r\n\r\nSimpleWithImageQuestionsTable.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Table, Row, Col } from \"react-bootstrap\";\r\nimport AdminDeleteExamBttn from \"../components/AdminDeleteExamBttn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const MultipleOptionQuestionsTable = React.memo(\r\n  ({ questions, examId, courseId }) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"my-3\">\r\n            Preguntas opción múltiple{` (${questions.length})`}\r\n          </h4>\r\n          <div className=\"mt-2 d-flex flex-column\">\r\n            <Table bordered striped size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Instrucción\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    I. Técnica\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Opciones\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Respuesta\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Comentario\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  ></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {questions.map((q) => {\r\n                  return (\r\n                    <tr key={q._id}>\r\n                      <td className=\"align-middle\">{q.qInstruction}</td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qTechnicalInstruction\r\n                          ? q.qTechnicalInstruction.text\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qMultipleChoice.textChoices.length\r\n                          ? q.qMultipleChoice.textChoices.map((c, idx) => (\r\n                              <React.Fragment key={idx}>\r\n                                <span className=\"mb-0\">{`${c}`}</span>\r\n                                {q.qMultipleChoice.textChoices.length ===\r\n                                idx + 1 ? null : (\r\n                                  <hr className=\"my-0\" />\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qCorrectAnswers[0].answer}\r\n                      </td>\r\n                      <td className=\"align-middle\">{q.qComment}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <AdminDeleteExamBttn\r\n                          courseId={courseId}\r\n                          examId={examId}\r\n                          questionId={q._id}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n);\r\n\r\nMultipleOptionQuestionsTable.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Table, Row, Col } from \"react-bootstrap\";\r\nimport AdminDeleteExamBttn from \"../components/AdminDeleteExamBttn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SimpleWithTwoAnswersTable = React.memo(\r\n  ({ questions, examId, courseId }) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"my-3\">\r\n            Preguntas sencillas con dos respuestas{` (${questions.length})`}\r\n          </h4>\r\n          <div className=\"mt-2 d-flex flex-column\">\r\n            <Table bordered striped size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Instrucción\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    I. Técnica\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Respuestas\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Comentario\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  ></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {questions.map((q) => {\r\n                  return (\r\n                    <tr key={q._id}>\r\n                      <td className=\"align-middle\">{q.qInstruction}</td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qTechnicalInstruction\r\n                          ? q.qTechnicalInstruction.text\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qCorrectAnswers.map((qa, idx) => {\r\n                          return (\r\n                            <React.Fragment key={qa._id}>\r\n                              <span>\r\n                                {String(\r\n                                  `${qa.complementLeft} ${qa.answer} ${qa.complementRight}`\r\n                                ).trim()}\r\n                              </span>\r\n                              {q.qCorrectAnswers.length === idx + 1 ? null : (\r\n                                <hr className=\"my-0\" />\r\n                              )}\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                      <td className=\"align-middle\">{q.qComment}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <AdminDeleteExamBttn\r\n                          courseId={courseId}\r\n                          examId={examId}\r\n                          questionId={q._id}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n);\r\n\r\nSimpleWithTwoAnswersTable.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Table, Row, Col, Image } from \"react-bootstrap\";\r\nimport AdminDeleteExamBttn from \"../components/AdminDeleteExamBttn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const MultipleOptionWithImageTable = React.memo(\r\n  ({ questions, examId, courseId }) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"my-3\">\r\n            Preguntas opción múltiple{` (${questions.length})`}\r\n          </h4>\r\n          <div className=\"mt-2 d-flex flex-column\">\r\n            <Table bordered striped size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Instrucción\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Imagen\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Opciones\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Respuesta\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  >\r\n                    Comentario\r\n                  </th>\r\n                  <th\r\n                    style={{ backgroundColor: \"#0f5257\" }}\r\n                    className=\"text-light text-center\"\r\n                  ></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {questions.map((q) => {\r\n                  return (\r\n                    <tr key={q._id}>\r\n                      <td className=\"align-middle\">{q.qInstruction}</td>\r\n                      <td className=\"align-middle\">\r\n                        <Image\r\n                          src={q.qTechnicalInstruction.imageLink}\r\n                          width=\"85\"\r\n                          height=\"85\"\r\n                          className=\"my-1 mx-3\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qMultipleChoice.textChoices.length\r\n                          ? q.qMultipleChoice.textChoices.map((c, idx) => (\r\n                              <React.Fragment key={idx}>\r\n                                <span className=\"mb-0\">{`${c}`}</span>\r\n                                {q.qMultipleChoice.textChoices.length ===\r\n                                idx + 1 ? null : (\r\n                                  <hr className=\"my-0\" />\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        {q.qCorrectAnswers[0].answer}\r\n                      </td>\r\n                      <td className=\"align-middle\">{q.qComment}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <AdminDeleteExamBttn\r\n                          courseId={courseId}\r\n                          examId={examId}\r\n                          questionId={q._id}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n);\r\n\r\nMultipleOptionWithImageTable.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  examId: PropTypes.string.isRequired,\r\n  courseId: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminLayout from \"../layout/AdminLayout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TeacherAPI from \"../../utils/TeacherAPI\";\r\nimport AdminSpinner from \"../components/AdminSpinner\";\r\nimport AdminExamModal from \"./components/AdminExamModal\";\r\nimport NewQuestionBttn from \"./components/NewQuestionBttn\";\r\n//\r\nimport ExamNameForm from \"./forms/ExamNameForm\";\r\nimport ExamDurationForm from \"./forms/ExamDurationForm\";\r\nimport ExamQCounterForm from \"./forms/ExamQCounterForm\";\r\nimport ExamDescriptionForm from \"./forms/ExamDescriptionForm\";\r\n// new exams (forms)\r\nimport {\r\n  SimpleQuestionForm,\r\n  MultipleOptionForm,\r\n  SimpleWithImageForm,\r\n  SimpleWithTwoAnswersForm,\r\n  MultipleOptionWithImage,\r\n} from \"./questionsForms\";\r\n// new exams (tables)\r\nimport {\r\n  SimpleQuestionTable,\r\n  MultipleOptionQuestionsTable,\r\n  SimpleWithImageQuestionsTable,\r\n  SimpleWithTwoAnswersTable,\r\n  MultipleOptionWithImageTable,\r\n} from \"./questionsTables\";\r\n\r\nconst AdminExamDetail = React.memo((props) => {\r\n  const [exam, setExam] = useState();\r\n\r\n  const [simpleQuestions, setSimpleQuestions] = useState([]);\r\n  const [simpleWithImageQuestions, setSimpleWithImageQuestions] = useState([]);\r\n  const [multipleOptionQuestions, setMultipleOptionQuestions] = useState([]);\r\n  const [\r\n    simpleWithTwoAnswersQuestions,\r\n    setSimpleWithTwoAnswersQuestions,\r\n  ] = useState([]);\r\n  const [\r\n    multipleOptionWithImageQuestions,\r\n    setMultipleOptionWithImageQuestions,\r\n  ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const examId = props.routeProps.match.params.examId;\r\n\r\n    TeacherAPI.t_fetchExam(examId)\r\n      .then((res) => {\r\n        setExam(res.data);\r\n        // set questions\r\n        setSimpleQuestions(\r\n          res.data.questions.filter(({ qType }) => qType === \"simple\")\r\n        );\r\n        setSimpleWithImageQuestions(\r\n          res.data.questions.filter(({ qType }) => qType === \"simpleWithPic\")\r\n        );\r\n        setMultipleOptionQuestions(\r\n          res.data.questions.filter(({ qType }) => qType === \"multipleOption\")\r\n        );\r\n        setSimpleWithTwoAnswersQuestions(\r\n          res.data.questions.filter(({ qType }) => qType === \"twoAnswers\")\r\n        );\r\n        setMultipleOptionWithImageQuestions(\r\n          res.data.questions.filter(\r\n            ({ qType }) => qType === \"multipleOptionWithPic\"\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Ocurrió un error\");\r\n      });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return exam ? (\r\n    <AdminLayout\r\n      title=\"Examen\"\r\n      leftBarActive=\"Cursos\"\r\n      backBttn={\r\n        \"/admin/courses/edit/topics/\" +\r\n        props.routeProps.match.params.courseId +\r\n        \"/\" +\r\n        props.routeProps.match.params.topicId\r\n      }\r\n    >\r\n      <Container fluid>\r\n        {/* name */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Nombre</span>\r\n            <h1>\r\n              {exam.name}\r\n              <AdminExamModal\r\n                modalTitle=\"Editar nombre\"\r\n                Form={ExamNameForm}\r\n                formLabel=\"Nombre\"\r\n                formInitialText={exam.name}\r\n                examId={props.routeProps.match.params.examId}\r\n              />\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        {/* difficulty */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Dificultad</span>\r\n            <h2>{exam.difficulty}</h2>\r\n          </Col>\r\n        </Row>\r\n        {/* duration */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Duración</span>\r\n            <h2>\r\n              {`${exam.duration} minutos`}\r\n              <AdminExamModal\r\n                modalTitle=\"Editar duración\"\r\n                Form={ExamDurationForm}\r\n                formLabel=\"Duración\"\r\n                formInitialText={exam.duration}\r\n                examId={props.routeProps.match.params.examId}\r\n              />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        {/* question counter */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Preguntas por examen</span>\r\n            <h2\r\n              className={\r\n                exam.qCounter > exam.questions.length ? \"text-danger\" : null\r\n              }\r\n            >\r\n              {`${exam.qCounter} preguntas`}\r\n              <AdminExamModal\r\n                modalTitle=\"Editar preguntas por examen\"\r\n                Form={ExamQCounterForm}\r\n                formLabel=\"Preguntas por examen\"\r\n                formInitialText={exam.qCounter}\r\n                examId={props.routeProps.match.params.examId}\r\n              />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        {/* question counter 2 */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Total de preguntas</span>\r\n            <h3>{`${exam.questions.length} preguntas`}</h3>\r\n          </Col>\r\n        </Row>\r\n        {/* description */}\r\n        <Row>\r\n          <Col>\r\n            <span className=\"text-muted\">Descripción</span>\r\n            <h5>\r\n              {exam.description}\r\n              <AdminExamModal\r\n                modalTitle=\"Editar descripción\"\r\n                Form={ExamDescriptionForm}\r\n                formLabel=\"Descripción\"\r\n                formInitialText={exam.description}\r\n                examId={props.routeProps.match.params.examId}\r\n              />\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {/* NEW QUESTIONS */}\r\n        <hr />\r\n        <h3 className=\"text-center\">Nuevas preguntas</h3>\r\n        <div className=\"d-flex flex-row justify-content-center mb-3 mt-3\">\r\n          <div>\r\n            <NewQuestionBttn\r\n              examId={exam._id}\r\n              Form={SimpleQuestionForm}\r\n              text=\"Sencilla\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-2\">\r\n            <NewQuestionBttn\r\n              examId={exam._id}\r\n              courseId={props.routeProps.match.params.courseId}\r\n              Form={SimpleWithImageForm}\r\n              text=\"Sencilla con imagen\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-2\">\r\n            <NewQuestionBttn\r\n              examId={exam._id}\r\n              Form={SimpleWithTwoAnswersForm}\r\n              text=\"Sencilla con 2 respuestas\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-2\">\r\n            <NewQuestionBttn\r\n              examId={exam._id}\r\n              Form={MultipleOptionForm}\r\n              text=\"Opción múltiple\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-2\">\r\n            <NewQuestionBttn\r\n              examId={exam._id}\r\n              courseId={props.routeProps.match.params.courseId}\r\n              Form={MultipleOptionWithImage}\r\n              text=\"Opción múltiple con imagen\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* TABLES */}\r\n        {simpleQuestions.length ? (\r\n          <SimpleQuestionTable\r\n            courseId={props.routeProps.match.params.courseId}\r\n            questions={simpleQuestions}\r\n            examId={props.routeProps.match.params.examId}\r\n          />\r\n        ) : null}\r\n        {simpleWithImageQuestions.length ? (\r\n          <SimpleWithImageQuestionsTable\r\n            courseId={props.routeProps.match.params.courseId}\r\n            questions={simpleWithImageQuestions}\r\n            examId={props.routeProps.match.params.examId}\r\n          />\r\n        ) : null}\r\n        {multipleOptionQuestions.length ? (\r\n          <MultipleOptionQuestionsTable\r\n            courseId={props.routeProps.match.params.courseId}\r\n            questions={multipleOptionQuestions}\r\n            examId={props.routeProps.match.params.examId}\r\n          />\r\n        ) : null}\r\n        {simpleWithTwoAnswersQuestions.length ? (\r\n          <SimpleWithTwoAnswersTable\r\n            courseId={props.routeProps.match.params.courseId}\r\n            questions={simpleWithTwoAnswersQuestions}\r\n            examId={props.routeProps.match.params.examId}\r\n          />\r\n        ) : null}\r\n        {multipleOptionWithImageQuestions.length ? (\r\n          <MultipleOptionWithImageTable\r\n            courseId={props.routeProps.match.params.courseId}\r\n            questions={multipleOptionWithImageQuestions}\r\n            examId={props.routeProps.match.params.examId}\r\n          />\r\n        ) : null}\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </AdminLayout>\r\n  ) : (\r\n    <AdminSpinner />\r\n  );\r\n});\r\n\r\nexport default AdminExamDetail;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AdminCourses from \"../admin/courses/courses/AdminCourses\";\r\nimport AdminCourseDetail from \"../admin/courses/coursedetail/AdminCourseDetail\";\r\nimport AdminNewCourse from \"../admin/courses/newcourse/AdminNewCourse\";\r\nimport AdminTopicDetail from \"../admin/courses/topics/AdminTopicDetail\";\r\nimport AdminNewTopic from \"../admin/courses/newtopic/AdminNewTopic\";\r\nimport AdminNewExam from \"../admin/courses/newexam/AdminNewExam\";\r\nimport AdminStudents from \"../admin/students/students/AdminStudents\";\r\nimport AdminStudentDetails from \"../admin/students/studentdetail/AdminStudentDetails\";\r\nimport AdminAssignCourse from \"../admin/students/assign/AdminAssignCourse\";\r\nimport AdminStudentHistory from \"../admin/students/history/AdminStudentHistory\";\r\nimport AdminMessages from \"../admin/messages/AdminMessages\";\r\nimport AdminExamDetail from \"../admin/exams/AdminExamDetail\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      {/* ================= COURSES ================= */}\r\n      <Route exact path=\"/admin/courses\" component={AdminCourses} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/courses/edit/:courseId\"\r\n        render={(props) => <AdminCourseDetail routeProps={props} />}\r\n      />\r\n      <Route exact path=\"/admin/courses/new\" component={AdminNewCourse} />\r\n\r\n      {/* ================= TOPICS ================= */}\r\n      <Route\r\n        exact\r\n        path=\"/admin/courses/edit/topics/:courseId/:topicId\"\r\n        render={(props) => <AdminTopicDetail routeProps={props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/courses/courses/newTopic/:courseId\"\r\n        render={(props) => <AdminNewTopic routeProps={props} />}\r\n      />\r\n\r\n      {/* ================= EXAM ================= */}\r\n      <Route\r\n        exact\r\n        path=\"/admin/courses/exam/new/:difficulty/:courseId/:topicId\"\r\n        render={(props) => <AdminNewExam routeProps={props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/courses/edit/exam/:courseId/:topicId/:examId\"\r\n        render={(props) => <AdminExamDetail routeProps={props} />}\r\n      />\r\n\r\n      {/* ================= STUDENTS ================= */}\r\n      <Route exact path=\"/admin/students\" component={AdminStudents} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/students/:studentId\"\r\n        render={(props) => <AdminStudentDetails routeProps={props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/students/unpurchased/:studentId\"\r\n        render={(props) => <AdminAssignCourse routeProps={props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/students/history/:studentId\"\r\n        render={(props) => <AdminStudentHistory routeProps={props} />}\r\n      />\r\n\r\n      {/* ================= MESSAGES ================= */}\r\n      <Route exact path=\"/admin/messages\" component={AdminMessages} />\r\n\r\n      {/* ================= REDIRECT ================= */}\r\n      {/* <Redirect from=\"/admin\" to=\"/admin/courses\" />\r\n      <Redirect from=\"/\" to=\"/admin/courses\" /> */}\r\n      <Redirect from=\"*\" to=\"/admin/courses\" />\r\n\r\n      {/* 404 not found */}\r\n      {/* <Route component={AdminCourses} /> */}\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport GuestNavigation from \"./GuestNavigation\";\r\nimport StudentNavigation from \"./StudentNavigation\";\r\nimport { AuthUserContext } from \"../session\";\r\nimport TeacherNavigation from \"./TeacherNavigation\";\r\n\r\nconst Navigation = React.memo(() => (\r\n  <AuthUserContext.Consumer>\r\n    {(navigation) => {\r\n      return navigation === \"Student\" ? (\r\n        <StudentNavigation />\r\n      ) : navigation === \"Teacher\" ? (\r\n        <TeacherNavigation />\r\n      ) : (\r\n        <GuestNavigation />\r\n      );\r\n    }}\r\n  </AuthUserContext.Consumer>\r\n));\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Navigation from \"./navigation\";\r\nimport { withNavigation } from \"./session\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default withNavigation(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const studentReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"student/login\":\r\n      return {\r\n        _id: action.data._id,\r\n        name: action.data.name,\r\n        firstSurname: action.data.firstSurname,\r\n        secondSurname: action.data.secondSurname,\r\n        email: action.data.email,\r\n        username: action.data.email.split(\"@\", 1)[0],\r\n      };\r\n    case \"student/logout\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default studentReducers;\r\n","const breadcrumbReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"breadcrumb/set\":\r\n      return [...action.data];\r\n    case \"breadcrumb/clear\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default breadcrumbReducers;\r\n","const courseReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"course/set\":\r\n      return {\r\n        _id: action.data._id,\r\n        name: action.data.name,\r\n      };\r\n    case \"course/clear\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default courseReducers;\r\n","const examReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"exam/set\":\r\n      return action.data;\r\n    case \"exam/unlock\":\r\n      return {\r\n        ...state,\r\n        unlocked: action.data,\r\n      };\r\n    case \"exam/setResults\":\r\n      return {\r\n        ...state,\r\n        results: action.data,\r\n      };\r\n    case \"exam/clear\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default examReducers;\r\n","const unlockedReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"unlock/new\":\r\n      return action.data;\r\n    case \"unlocked/clear\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default unlockedReducers;\r\n","const examReducers = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"zenMode/on\":\r\n      return true;\r\n    case \"zenMode/off\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default examReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport student from \"./studentReducers\";\r\nimport breadcrumb from \"./breadcrumbReducers\";\r\nimport course from \"./courseReducers\";\r\nimport exam from \"./examReducers\";\r\nimport unlocked from \"./unlockedReducers\";\r\nimport zenMode from \"./zenModeReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  student,\r\n  breadcrumb,\r\n  course,\r\n  exam,\r\n  unlocked,\r\n  zenMode,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\n// import firebase from \"./firebase/firebase\";\r\n\r\nconst persistConfig = {\r\n  key: \"primary\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// firebase\r\n//   .auth()\r\n//   .signOut()\r\n//   .then(() => {})\r\n//   .catch((error) => console.log(error));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}